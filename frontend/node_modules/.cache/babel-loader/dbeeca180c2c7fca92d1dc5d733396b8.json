{"ast":null,"code":"var _jsxFileName = \"/Users/philippwegner/Desktop/UKB/git/PostIDSN-Viewer/src/containers/Viewer.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from '../components/Grid';\nimport Plot from '../components/Plot';\nimport localStorage from '../services/LocalStorage';\nimport backend, { Fit, Legend } from '../services/Backend';\nimport utilities from '../services/Utilities';\nimport Filter, { defaultConcept } from './Filter';\nimport Configuration, { DiagramType, initialDiagramType, Visit } from './Controls';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './Viewer.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar'; // CONFIG\n\nexport const initialControls = {\n  identifier: '',\n  type: initialDiagramType,\n  attX: '',\n  attY: '',\n  attC: '',\n  dt: 0,\n  visit: Visit.all,\n  followup: 0,\n  tolerance: 0,\n  norm: false,\n  stack: false,\n  fit: Fit.none,\n  legend: Legend.legend,\n  bins: 0\n}; // PROPS\n\nconst Viewer = props => {\n  var _localStorage$getObje, _localStorage$getObje2, _localStorage$getObje3, _localStorage$getObje4, _localStorage$getObje5, _localStorage$getObje6, _plotControlsState$vi;\n\n  // STATES\n  // errorState\n  const [errorState, setErrorState] = useState();\n  const [errorText, setErrorText] = useState(''); //\n\n  const [attributes, setAttributes] = useState();\n  const [loadingAttributes, setLoadeingAttributes] = useState();\n  useEffect(() => {\n    backend.getAttributes().then(response => {\n      setAttributes(response.allAttributes);\n    });\n  }, []); // viewerState\n\n  const initialViewerState = {\n    controlsVisible: false,\n    filtersVisible: true,\n    activePlot: ''\n  };\n  const [viewerState, setViewerState] = useState(initialViewerState);\n  const [gridLayoutsState, setGridLayoutsState] = useState((_localStorage$getObje = localStorage.getObjectItem('grid.layouts')) !== null && _localStorage$getObje !== void 0 ? _localStorage$getObje : {});\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState, viewerState]); // gridLayoutsState\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState]); // gridItemsState\n\n  const [gridItemsState, setGridItemsState] = useState(((_localStorage$getObje2 = localStorage.getObjectItem('grid.items')) !== null && _localStorage$getObje2 !== void 0 ? _localStorage$getObje2 : []). // Workaround for bug in layout serialization - Infinity (and possibly others) gets saved as null\n  map(item => {\n    var _item$y;\n\n    return { ...item,\n      y: (_item$y = item.y) !== null && _item$y !== void 0 ? _item$y : Infinity\n    };\n  }));\n  useEffect(() => {\n    localStorage.setObjectItem('grid.items', gridItemsState);\n  }, [gridItemsState]); // gridResponsiveState\n\n  const initialResponsiveState = {\n    breakpoint: '',\n    cols: 12\n  };\n  const [gridResponsiveState, setGridResponsiveState] = useState(initialResponsiveState);\n  useEffect(() => {\n    forceResize();\n  }, [gridResponsiveState]); // filterState\n\n  const defaultFilterState = {\n    concept: defaultConcept,\n    constraints: []\n  };\n  const [filterState, setFilterState] = useState((_localStorage$getObje3 = localStorage.getObjectItem('filter')) !== null && _localStorage$getObje3 !== void 0 ? _localStorage$getObje3 : defaultFilterState);\n  useEffect(() => {\n    localStorage.setObjectItem('filter', filterState);\n  }, [filterState]); // subgroupsState\n\n  const [subgroupsState, setSubgroupsState] = useState((_localStorage$getObje4 = localStorage.getObjectItem('subgroups')) !== null && _localStorage$getObje4 !== void 0 ? _localStorage$getObje4 : []);\n  useEffect(() => {\n    localStorage.setObjectItem('subgroups', subgroupsState);\n  }, [subgroupsState]); // plotControlsState\n\n  const [plotControlsState, setPlotControlsState] = useState((_localStorage$getObje5 = localStorage.getObjectItem('controls')) !== null && _localStorage$getObje5 !== void 0 ? _localStorage$getObje5 : {});\n  useEffect(() => {\n    localStorage.setObjectItem('controls', plotControlsState);\n  }, [plotControlsState]); // plotsState\n\n  const [plotsState, setPlotsState] = useState((_localStorage$getObje6 = localStorage.getObjectItem('plots')) !== null && _localStorage$getObje6 !== void 0 ? _localStorage$getObje6 : {});\n  useEffect(() => {\n    localStorage.setObjectItem('plots', plotsState);\n  }, [plotsState]); // updatingState\n\n  const [updatingState, setUpdatingState] = useState({}); // HANDLERS\n\n  const onGridBreakpointChange = (breakpoint, cols) => {\n    setGridResponsiveState({\n      breakpoint: breakpoint,\n      cols: cols\n    });\n  };\n\n  const onViewerConfigurationToggle = () => {\n    setViewerState({ ...viewerState,\n      controlsVisible: !viewerState.controlsVisible\n    });\n  };\n\n  const onViewerFilterToggle = () => {\n    setViewerState({ ...viewerState,\n      filtersVisible: !viewerState.filtersVisible\n    });\n  };\n\n  const onGridLayoutChange = (layout, layouts) => {\n    setGridLayoutsState(layouts);\n  };\n\n  const onGridItemAdd = () => {\n    const identifier = utilities.generateIdentifier();\n    const newIdentifiers = [...Object.keys(plotsState), identifier];\n    backend.sessionInit(newIdentifiers).then(() => {\n      var _document$querySelect, _document$querySelect2;\n\n      setGridItemsState([...gridItemsState, createGridItem(identifier)]);\n      setPlotControlsState({ ...plotControlsState,\n        ...{\n          [identifier]: createInitialPlotControlsState(identifier)\n        }\n      });\n      setPlotsState({ ...plotsState,\n        ...{\n          [identifier]: {\n            data: [],\n            layout: {}\n          }\n        }\n      });\n      setViewerState({ ...viewerState,\n        activePlot: identifier,\n        controlsVisible: true\n      });\n      (_document$querySelect = document.querySelector(\".scrollContainer\")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.scrollTo({\n        top: (_document$querySelect2 = document.querySelector(\".scrollContainer\")) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.scrollHeight,\n        behavior: 'smooth'\n      });\n    }).catch(handleError);\n  };\n\n  const onGridItemRemove = identifier => {\n    const newPlotsState = { ...plotsState\n    };\n    delete newPlotsState[identifier];\n    backend.sessionInit(Object.keys(newPlotsState)).then(() => {\n      setGridItemsState(gridItemsState.filter(item => item.i !== identifier));\n      setPlotsState(newPlotsState);\n      const newPlotControlsState = { ...plotControlsState\n      };\n      delete newPlotControlsState[identifier];\n      setPlotControlsState(newPlotControlsState);\n\n      if (viewerState.activePlot === identifier) {\n        setViewerState({ ...viewerState,\n          activePlot: '',\n          controlsVisible: false\n        });\n      }\n    }).catch(handleError);\n  };\n\n  const onGridItemEdit = identifier => {\n    setViewerState({ ...viewerState,\n      activePlot: identifier,\n      controlsVisible: true\n    });\n  };\n\n  const onReset = () => {\n    backend.sessionReset().then(() => {\n      setViewerState(initialViewerState);\n      setGridResponsiveState(initialResponsiveState);\n      localStorage.setObjectItem('grid.layouts', {});\n      setGridLayoutsState({});\n      localStorage.setObjectItem('grid.items', []);\n      setGridItemsState([]);\n      localStorage.setObjectItem('filter', defaultFilterState);\n      setFilterState(defaultFilterState);\n      localStorage.setObjectItem('controls', {});\n      setPlotControlsState({});\n      localStorage.setObjectItem('plots', {});\n      setPlotsState({});\n      localStorage.setObjectItem('subgroups', []);\n      setSubgroupsState([]);\n    }).catch(handleError);\n  };\n\n  const onPlotSelected = (identifier, range, items) => {\n    if (!range) {\n      return;\n    }\n\n    setUpdating();\n    const newFilterState = { ...filterState,\n      constraints: [...filterState.constraints]\n    }; // Update/add x-constraint\n\n    if ([DiagramType.Scatter, DiagramType.Histogram, DiagramType.Timeline].includes(plotControlsState[identifier].controls.type)) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: range.x[0],\n        upper: range.x[1],\n        items: []\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attX);\n\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    } // Update/add y-constraint\n\n\n    if ([DiagramType.Scatter, DiagramType.Timeline].includes(plotControlsState[identifier].controls.type)) {\n      const newYConstraint = {\n        attribute: plotControlsState[identifier].controls.attY,\n        lower: range.y[0],\n        upper: range.y[1],\n        items: []\n      };\n      const constraintYIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attY);\n\n      if (constraintYIndex > -1) {\n        newFilterState.constraints[constraintYIndex] = newYConstraint;\n      } else {\n        newFilterState.constraints.push(newYConstraint);\n      }\n    } // Update/add discrete constraint\n\n\n    if ([DiagramType.Bar].includes(plotControlsState[identifier].controls.type)) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: null,\n        upper: null,\n        items: items\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attX);\n\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend.filterUpdate(newFilterState).then(figures => {\n      handleFilterUpdateResponse(figures);\n    }).catch(handleError);\n  };\n\n  const onFilterChanged = filters => {\n    setUpdating();\n    const newFilterState = { ...filterState,\n      ...filters\n    };\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend.filterUpdate(newFilterState).then(figures => {\n      handleFilterUpdateResponse(figures);\n    }).catch(handleError);\n  };\n\n  const onSubgroupDefine = subgroup => {\n    backend.subgroupDefine(subgroup.name).then(() => {\n      setSubgroupsState([...subgroupsState.filter(_subgroup => _subgroup.name !== subgroup.name), subgroup]);\n    }).catch(handleError);\n  };\n\n  const onSubgroupDelete = name => {\n    //alert('Not yet implemented in backend.');\n    backend.subgroupDelete(name).then(response => {\n      setSubgroupsState([...subgroupsState.filter(subgroup => subgroup.name !== name)]);\n    });\n  };\n\n  const onSubgroupActivate = name => {\n    const subgroup = subgroupsState.find(subgroup => subgroup.name === name); //console.log(subgroup);\n\n    onFilterChanged({ ...filterState,\n      constraints: subgroup === null || subgroup === void 0 ? void 0 : subgroup.constraints\n    });\n  };\n\n  const onControlsChanged = (identifier, controls) => {\n    setUpdating(identifier);\n    const newControls = { ...plotControlsState[identifier].controls,\n      ...controls\n    };\n    const newPlotControls = { ...plotControlsState,\n      ...{\n        [identifier]: { ...plotsState[identifier],\n          controls: newControls\n        }\n      }\n    }; //console.log()\n\n    setPlotControlsState(newPlotControls);\n    utilities.devLog('new controls:', newControls);\n    backend.controlsUpdate(newPlotControls[identifier].controls).then(figure => {\n      handleControlsUpdateResponse(identifier, figure);\n    }).catch(handleError);\n  }; // HELPER (see first part above)\n\n\n  const handleError = error => {\n    console.log(error);\n\n    try {\n      setErrorText(`${error.toJSON().name}: ${error.toJSON().message}`);\n    } catch (e) {\n      setErrorText('ERROR: unknown');\n    }\n\n    setErrorState(true);\n    const newState = {};\n    Object.keys(plotControlsState).forEach(identifier => {\n      newState[identifier] = false;\n    });\n    setUpdatingState(newState);\n  };\n\n  const handleControlsUpdateResponse = (identifier, figure) => {\n    setPlotsState({ ...plotsState,\n      [identifier]: { ...plotsState[identifier],\n        data: figure.data || [],\n        layout: figure.layout || {}\n      }\n    });\n    utilities.devLog(identifier, 'done');\n    setUpdatingState({ ...updatingState,\n      [identifier]: false\n    });\n  };\n\n  const handleFilterUpdateResponse = figures => {\n    const identifiers = Object.keys(figures);\n    const newPlotsState = { ...plotsState\n    };\n    const newUpdatingState = { ...updatingState\n    };\n    identifiers.forEach(identifier => {\n      newPlotsState[identifier] = {\n        data: figures[identifier].data || [],\n        layout: figures[identifier].layout || {}\n      };\n      newUpdatingState[identifier] = false;\n    });\n    setPlotsState(newPlotsState);\n    setUpdatingState(newUpdatingState);\n  };\n\n  const forceResize = () => {\n    // Workaround to trigger plot resize\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const createGridItem = identifier => {\n    return {\n      i: identifier,\n      x: gridItemsState.length * 5 % gridResponsiveState.cols,\n      y: Infinity,\n      w: 5,\n      h: 4\n    };\n  };\n\n  const createInitialPlotControlsState = identifier => {\n    return {\n      controls: { ...initialControls,\n        identifier\n      }\n    };\n  };\n\n  const setUpdating = identifier => {\n    if (identifier) {\n      setUpdatingState({ ...updatingState,\n        [identifier]: true\n      });\n    } else {\n      const newState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = true;\n      });\n      setUpdatingState(newState);\n    }\n  }; // RENDER\n\n\n  const createGridItemElement = item => {\n    var _plotsState$item$i, _plotsState$item$i2;\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: item.i,\n      \"data-grid\": item,\n      className: `grid__item ${viewerState.activePlot === item.i ? ' grid__item--active' : ''}`,\n      onClick: () => {\n        onGridItemEdit(item.i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid__item-header grid--draggable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      onClick: () => {\n        onGridItemRemove(item.i);\n      },\n      className: \"grid__item--close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid__item-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }\n    }, updatingState[item.i] && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(CardContent, {\n      className: \"grid__item-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      identifier: item.i,\n      data: (_plotsState$item$i = plotsState[item.i]) === null || _plotsState$item$i === void 0 ? void 0 : _plotsState$item$i.data,\n      layout: (_plotsState$item$i2 = plotsState[item.i]) === null || _plotsState$item$i2 === void 0 ? void 0 : _plotsState$item$i2.layout,\n      onSelected: onPlotSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onGridItemAdd,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 24\n      }\n    }),\n    title: \"Add new diagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 11\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: forceResize,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AspectRatioIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 24\n      }\n    }),\n    title: \"Force resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 11\n    }\n  }, \"Resize\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onReset,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(ReplayIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 24\n      }\n    }),\n    title: \"Reset session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 11\n    }\n  }, \"Reset session\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onViewerConfigurationToggle,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 24\n      }\n    }),\n    title: \"Toggle configuration panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 11\n    }\n  }, \"Configuration\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onViewerFilterToggle,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(FilterListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 24\n      }\n    }),\n    title: \"Toggle filter panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 11\n    }\n  }, \"Filter\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }\n  }, viewerState.filtersVisible && /*#__PURE__*/React.createElement(Filter, {\n    filter: filterState,\n    subgroups: subgroupsState,\n    onFilterChanged: onFilterChanged,\n    onSubgroupDefine: onSubgroupDefine,\n    onSubgroupDelete: onSubgroupDelete,\n    onSubgroupActivate: onSubgroupActivate,\n    onClose: onViewerFilterToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrollContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    breakpointCols: {\n      lg: 12,\n      md: 10,\n      sm: 6,\n      xs: 4,\n      xxs: 2\n    },\n    rowHeight: 100,\n    layouts: gridLayoutsState,\n    onBreakpointChange: onGridBreakpointChange,\n    onLayoutChange: onGridLayoutChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }\n  }, gridItemsState.map(item => createGridItemElement(item)))), viewerState.controlsVisible && /*#__PURE__*/React.createElement(Configuration, {\n    controls: (_plotControlsState$vi = plotControlsState[viewerState.activePlot]) === null || _plotControlsState$vi === void 0 ? void 0 : _plotControlsState$vi.controls,\n    onControlsChanged: onControlsChanged,\n    onClose: onViewerConfigurationToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Snackbar, {\n    open: errorState,\n    autoHideDuration: 10000,\n    onClose: () => {\n      setErrorState(false);\n    },\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"error\",\n    onClose: () => {\n      setErrorState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }\n  }, errorText)));\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/philippwegner/Desktop/UKB/git/PostIDSN-Viewer/src/containers/Viewer.tsx"],"names":["React","useState","useEffect","Grid","Plot","localStorage","backend","Fit","Legend","utilities","Filter","defaultConcept","Configuration","DiagramType","initialDiagramType","Visit","Button","Card","CardContent","IconButton","LinearProgress","AddIcon","AspectRatioIcon","ReplayIcon","SettingsIcon","FilterListIcon","EditIcon","CloseIcon","Alert","Snackbar","initialControls","identifier","type","attX","attY","attC","dt","visit","all","followup","tolerance","norm","stack","fit","none","legend","bins","Viewer","props","errorState","setErrorState","errorText","setErrorText","attributes","setAttributes","loadingAttributes","setLoadeingAttributes","getAttributes","then","response","allAttributes","initialViewerState","controlsVisible","filtersVisible","activePlot","viewerState","setViewerState","gridLayoutsState","setGridLayoutsState","getObjectItem","setObjectItem","forceResize","gridItemsState","setGridItemsState","map","item","y","Infinity","initialResponsiveState","breakpoint","cols","gridResponsiveState","setGridResponsiveState","defaultFilterState","concept","constraints","filterState","setFilterState","subgroupsState","setSubgroupsState","plotControlsState","setPlotControlsState","plotsState","setPlotsState","updatingState","setUpdatingState","onGridBreakpointChange","onViewerConfigurationToggle","onViewerFilterToggle","onGridLayoutChange","layout","layouts","onGridItemAdd","generateIdentifier","newIdentifiers","Object","keys","sessionInit","createGridItem","createInitialPlotControlsState","data","document","querySelector","scrollTo","top","scrollHeight","behavior","catch","handleError","onGridItemRemove","newPlotsState","filter","i","newPlotControlsState","onGridItemEdit","onReset","sessionReset","onPlotSelected","range","items","setUpdating","newFilterState","Scatter","Histogram","Timeline","includes","controls","newXConstraint","attribute","lower","x","upper","constraintXIndex","findIndex","constraint","push","newYConstraint","constraintYIndex","Bar","devLog","filterUpdate","figures","handleFilterUpdateResponse","onFilterChanged","filters","onSubgroupDefine","subgroup","subgroupDefine","name","_subgroup","onSubgroupDelete","subgroupDelete","onSubgroupActivate","find","onControlsChanged","newControls","newPlotControls","controlsUpdate","figure","handleControlsUpdateResponse","error","console","log","toJSON","message","e","newState","forEach","identifiers","newUpdatingState","window","dispatchEvent","Event","length","w","h","createGridItemElement","lg","md","sm","xs","xxs","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '../components/Grid';\nimport Plot from '../components/Plot';\nimport localStorage from '../services/LocalStorage';\nimport backend, { Fit, Legend } from '../services/Backend';\nimport utilities from '../services/Utilities';\nimport Filter, { FilterState, defaultConcept, Subgroup } from './Filter';\nimport Configuration, {\n  ControlsState,\n  DiagramType,\n  initialDiagramType,\n  Visit,\n} from './Controls';\nimport { Figure } from 'react-plotly.js';\nimport { Datum } from 'plotly.js';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './Viewer.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\n// CONFIG\n\nexport const initialControls = {\n  identifier: '',\n  type: initialDiagramType,\n  attX: '',\n  attY: '',\n  attC: '',\n  dt: 0,\n  visit: Visit.all,\n  followup: 0,\n  tolerance: 0,\n  norm: false,\n  stack: false,\n  fit: Fit.none,\n  legend: Legend.legend,\n  bins: 0,\n};\n\n// PROPS\n\ninterface Props {}\n\nconst Viewer: React.FunctionComponent<Props> = props => {\n  // STATES\n\n  // errorState\n  const [errorState, setErrorState] = useState<boolean>();\n  const [errorText, setErrorText] = useState<string>('');\n\n  //\n  const [attributes, setAttributes] = useState();\n\n  const [loadingAttributes, setLoadeingAttributes] = useState();\n\n  useEffect(()=>{\n    backend.getAttributes().then((response) =>{\n      setAttributes(response.allAttributes);\n    });\n  }, []);\n\n  // viewerState\n  const initialViewerState = {\n    controlsVisible: false,\n    filtersVisible: true,\n    activePlot: '',\n  };\n  const [viewerState, setViewerState] =\n    useState<{\n      controlsVisible: boolean;\n      filtersVisible: boolean;\n      activePlot: string;\n    }>(initialViewerState);\n  const [gridLayoutsState, setGridLayoutsState] =\n    useState<ReactGridLayout.Layouts>(\n      localStorage.getObjectItem('grid.layouts') ?? {},\n    );\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState, viewerState]);\n\n  // gridLayoutsState\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState]);\n\n  // gridItemsState\n  const [gridItemsState, setGridItemsState] = useState<\n    ReactGridLayout.Layout[]\n  >(\n    (localStorage.getObjectItem('grid.items') ?? [])\n      // Workaround for bug in layout serialization - Infinity (and possibly others) gets saved as null\n      .map((item: ReactGridLayout.Layout) => {\n        return { ...item, y: item.y ?? Infinity };\n      }),\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('grid.items', gridItemsState);\n  }, [gridItemsState]);\n\n  // gridResponsiveState\n  const initialResponsiveState = { breakpoint: '', cols: 12 };\n  const [gridResponsiveState, setGridResponsiveState] = useState<{\n    breakpoint: string;\n    cols: number;\n  }>(initialResponsiveState);\n  useEffect(() => {\n    forceResize();\n  }, [gridResponsiveState]);\n\n  // filterState\n  const defaultFilterState: FilterState = {\n    concept: defaultConcept,\n    constraints: [],\n  };\n\n  const [filterState, setFilterState] = useState<FilterState>(\n    localStorage.getObjectItem('filter') ?? defaultFilterState,\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('filter', filterState);\n  }, [filterState]);\n\n  // subgroupsState\n  const [subgroupsState, setSubgroupsState] = useState<Subgroup[]>(\n    localStorage.getObjectItem('subgroups') ?? [],\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('subgroups', subgroupsState);\n  }, [subgroupsState]);\n\n  // plotControlsState\n  interface PlotControlsState {\n    [key: string]: { controls: ControlsState };\n  }\n\n  const [plotControlsState, setPlotControlsState] = useState<PlotControlsState>(\n    localStorage.getObjectItem('controls') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('controls', plotControlsState);\n  }, [plotControlsState]);\n\n  // plotsState\n  interface PlotState {\n    data: Plotly.Data[];\n    layout: Partial<Plotly.Layout>;\n  }\n  const [plotsState, setPlotsState] = useState<{ [key: string]: PlotState }>(\n    localStorage.getObjectItem('plots') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('plots', plotsState);\n  }, [plotsState]);\n\n  // updatingState\n  interface UpdatingState {\n    [key: string]: boolean;\n  }\n  const [updatingState, setUpdatingState] = useState<UpdatingState>({});\n\n  // HANDLERS\n\n  const onGridBreakpointChange = (breakpoint: string, cols: number) => {\n    setGridResponsiveState({\n      breakpoint: breakpoint,\n      cols: cols,\n    });\n  };\n\n  const onViewerConfigurationToggle = () => {\n    setViewerState({\n      ...viewerState,\n      controlsVisible: !viewerState.controlsVisible,\n    });\n  };\n\n  const onViewerFilterToggle = () => {\n    setViewerState({\n      ...viewerState,\n      filtersVisible: !viewerState.filtersVisible,\n    });\n  };\n\n  const onGridLayoutChange = (\n    layout: ReactGridLayout.Layout[],\n    layouts: ReactGridLayout.Layouts,\n  ) => {\n    setGridLayoutsState(layouts);\n  };\n\n  const onGridItemAdd = () => {\n    const identifier = utilities.generateIdentifier();\n    const newIdentifiers = [...Object.keys(plotsState), identifier];\n    backend\n      .sessionInit(newIdentifiers)\n      .then(() => {\n        setGridItemsState([...gridItemsState, createGridItem(identifier)]);\n        setPlotControlsState({\n          ...plotControlsState,\n          ...{ [identifier]: createInitialPlotControlsState(identifier) },\n        });\n        setPlotsState({\n          ...plotsState,\n          ...{ [identifier]: { data: [], layout: {} } },\n        });\n        setViewerState({\n          ...viewerState,\n          activePlot: identifier,\n          controlsVisible: true,\n        });\n        document.querySelector(\".scrollContainer\")?.scrollTo({\n          top: document.querySelector(\".scrollContainer\")?.scrollHeight,\n          behavior: 'smooth'\n        });\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemRemove = (identifier: string) => {\n    const newPlotsState = { ...plotsState };\n    delete newPlotsState[identifier];\n    backend\n      .sessionInit(Object.keys(newPlotsState))\n      .then(() => {\n        setGridItemsState(\n          gridItemsState.filter(\n            (item: ReactGridLayout.Layout) => item.i !== identifier,\n          ),\n        );\n        setPlotsState(newPlotsState);\n        const newPlotControlsState = { ...plotControlsState };\n        delete newPlotControlsState[identifier];\n        setPlotControlsState(newPlotControlsState);\n        if (viewerState.activePlot === identifier) {\n          setViewerState({\n            ...viewerState,\n            activePlot: '',\n            controlsVisible: false,\n          });\n        }\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemEdit = (identifier: string) => {\n    setViewerState({\n      ...viewerState,\n      activePlot: identifier,\n      controlsVisible: true,\n    });\n  };\n\n  const onReset = () => {\n    backend\n      .sessionReset()\n      .then(() => {\n        setViewerState(initialViewerState);\n        setGridResponsiveState(initialResponsiveState);\n        localStorage.setObjectItem('grid.layouts', {});\n        setGridLayoutsState({});\n        localStorage.setObjectItem('grid.items', []);\n        setGridItemsState([]);\n        localStorage.setObjectItem('filter', defaultFilterState);\n        setFilterState(defaultFilterState);\n        localStorage.setObjectItem('controls', {});\n        setPlotControlsState({});\n        localStorage.setObjectItem('plots', {});\n        setPlotsState({});\n        localStorage.setObjectItem('subgroups', []);\n        setSubgroupsState([]);\n        \n      })\n      .catch(handleError);\n  };\n\n  const onPlotSelected = (\n    identifier: string,\n    range: Plotly.SelectionRange | undefined,\n    items: Datum[],\n  ) => {\n    if (!range) {\n      return;\n    }\n\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      constraints: [...filterState.constraints],\n    };\n    // Update/add x-constraint\n    if (\n      [\n        DiagramType.Scatter,\n        DiagramType.Histogram,\n        DiagramType.Timeline,\n      ].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: range.x[0],\n        upper: range.x[1],\n        items: [],\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n    // Update/add y-constraint\n    if (\n      [DiagramType.Scatter, DiagramType.Timeline].includes(\n        plotControlsState[identifier].controls.type,\n      )\n    ) {\n      const newYConstraint = {\n        attribute: plotControlsState[identifier].controls.attY,\n        lower: range.y[0],\n        upper: range.y[1],\n        items: [],\n      };\n      const constraintYIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attY,\n      );\n      if (constraintYIndex > -1) {\n        newFilterState.constraints[constraintYIndex] = newYConstraint;\n      } else {\n        newFilterState.constraints.push(newYConstraint);\n      }\n    }\n    // Update/add discrete constraint\n    if (\n      [DiagramType.Bar].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: null,\n        upper: null,\n        items: items,\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onFilterChanged = (filters: Partial<FilterState>) => {\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      ...filters,\n    };\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDefine = (subgroup: Subgroup) => {\n    backend\n      .subgroupDefine(subgroup.name)\n      .then(() => {\n        setSubgroupsState([\n          ...subgroupsState.filter(\n            _subgroup => _subgroup.name !== subgroup.name,\n          ),\n          subgroup,\n        ]);\n\n\n        \n        \n\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDelete = (name: string) => {\n    //alert('Not yet implemented in backend.');\n    backend.subgroupDelete(name).then(response =>{\n      setSubgroupsState([\n        ...subgroupsState.filter(subgroup => subgroup.name !== name),\n      ]);\n    });\n    \n  };\n  const onSubgroupActivate = (name: string) => {\n    const subgroup = subgroupsState.find(subgroup => subgroup.name === name);\n    //console.log(subgroup);\n    onFilterChanged({\n      ...filterState,\n      constraints: subgroup?.constraints,\n    });\n  };\n\n  const onControlsChanged = (\n    identifier: string,\n    controls: Partial<ControlsState>,\n  ) => {\n    setUpdating(identifier);\n    const newControls: ControlsState = {\n      ...plotControlsState[identifier].controls,\n      ...controls,\n    };\n    const newPlotControls = {\n      ...plotControlsState,\n      ...{\n        [identifier]: {\n          ...plotsState[identifier],\n          controls: newControls,\n        },\n      },\n    };\n    //console.log()\n    setPlotControlsState(newPlotControls);\n    utilities.devLog('new controls:', newControls);\n    backend\n      .controlsUpdate(newPlotControls[identifier].controls)\n      .then((figure: Partial<Figure>) => {\n        handleControlsUpdateResponse(identifier, figure);\n      })\n      .catch(handleError);\n  };\n\n  // HELPER (see first part above)\n\n  const handleError = (error: any) => {\n    console.log(error);\n    try {\n      setErrorText(`${error.toJSON().name}: ${error.toJSON().message}`);\n    } catch (e) {\n      setErrorText('ERROR: unknown');\n    }\n\n    setErrorState(true);\n    const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = false;\n      });\n      setUpdatingState(newState);\n  };\n\n  const handleControlsUpdateResponse = (\n    identifier: string,\n    figure: Partial<Figure>,\n  ) => {\n    setPlotsState({\n      ...plotsState,\n      [identifier]: {\n        ...plotsState[identifier],\n        data: figure.data || [],\n        layout: figure.layout || {},\n      },\n    });\n    utilities.devLog(identifier, 'done');\n    setUpdatingState({\n      ...updatingState,\n      [identifier]: false,\n    });\n  };\n\n  const handleFilterUpdateResponse = (figures: {\n    [key: string]: Partial<Figure>;\n  }) => {\n    const identifiers = Object.keys(figures);\n    const newPlotsState = { ...plotsState };\n    const newUpdatingState = { ...updatingState };\n    identifiers.forEach(identifier => {\n      newPlotsState[identifier] = {\n        data: figures[identifier].data || [],\n        layout: figures[identifier].layout || {},\n      };\n      newUpdatingState[identifier] = false;\n    });\n    setPlotsState(newPlotsState);\n    setUpdatingState(newUpdatingState);\n  };\n\n  const forceResize = () => {\n    // Workaround to trigger plot resize\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const createGridItem = (identifier: string): ReactGridLayout.Layout => {\n    return {\n      i: identifier,\n      x: (gridItemsState.length * 5) % gridResponsiveState.cols,\n      y: Infinity,\n      w: 5,\n      h: 4,\n    };\n  };\n\n  const createInitialPlotControlsState = (\n    identifier: string,\n  ): { controls: ControlsState } => {\n    return { controls: { ...initialControls, identifier } };\n  };\n\n  const setUpdating = (identifier?: string) => {\n    if (identifier) {\n      setUpdatingState({\n        ...updatingState,\n        [identifier]: true,\n      });\n    } else {\n      const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = true;\n      });\n      setUpdatingState(newState);\n    }\n  };\n\n  // RENDER\n\n  const createGridItemElement = (item: ReactGridLayout.Layout) => {\n    return (\n      <Card\n        key={item.i}\n        data-grid={item}\n        className={`grid__item ${\n          viewerState.activePlot === item.i ? ' grid__item--active' : ''\n        }`}\n        onClick={() => {\n          onGridItemEdit(item.i);\n        }}\n      >\n        <div className=\"grid__item-header grid--draggable\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"edit\"\n            \n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              onGridItemRemove(item.i);\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div className=\"grid__item-loader\">\n          {updatingState[item.i] && <LinearProgress />}\n        </div>\n        <CardContent className=\"grid__item-content\">\n          <Plot\n            identifier={item.i}\n            data={plotsState[item.i]?.data}\n            layout={plotsState[item.i]?.layout}\n            onSelected={onPlotSelected}\n          />\n        </CardContent>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"toolbar\">\n        <div className=\"toolbar__left\">\n          <Button\n            onClick={onGridItemAdd}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            title=\"Add new diagram\"\n          >\n            Add\n          </Button>\n\n          <Button\n            onClick={forceResize}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AspectRatioIcon />}\n            title=\"Force resize\"\n          >\n            Resize\n          </Button>\n\n          <Button\n            onClick={onReset}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<ReplayIcon />}\n            title=\"Reset session\"\n          >\n            Reset session\n          </Button>\n        </div>\n\n        <div className=\"toolbar__right\">\n          <Button\n            onClick={onViewerConfigurationToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SettingsIcon />}\n            title=\"Toggle configuration panel\"\n          >\n            Configuration\n          </Button>\n\n          <Button\n            onClick={onViewerFilterToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FilterListIcon />}\n            title=\"Toggle filter panel\"\n          >\n            Filter\n          </Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {viewerState.filtersVisible && (\n          <Filter\n            filter={filterState}\n            subgroups={subgroupsState}\n            onFilterChanged={onFilterChanged}\n            onSubgroupDefine={onSubgroupDefine}\n            onSubgroupDelete={onSubgroupDelete}\n            onSubgroupActivate={onSubgroupActivate}\n            onClose={onViewerFilterToggle}\n          />\n        )}\n        <div className=\"scrollContainer\">\n        <Grid\n          breakpointCols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n          rowHeight={100}\n          layouts={gridLayoutsState}\n          onBreakpointChange={onGridBreakpointChange}\n          onLayoutChange={onGridLayoutChange}\n        >\n          {gridItemsState.map((item: ReactGridLayout.Layout) =>\n            createGridItemElement(item),\n          )}\n        </Grid>\n        </div>\n        {viewerState.controlsVisible && (\n          <Configuration\n            controls={plotControlsState[viewerState.activePlot]?.controls}\n            onControlsChanged={onControlsChanged}\n            onClose={onViewerConfigurationToggle}\n          />\n        )}\n      </div>\n\n      <Snackbar\n        open={errorState}\n        autoHideDuration={10000}\n        onClose={() => {\n          setErrorState(false);\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert\n          variant=\"filled\"\n          severity=\"error\"\n          onClose={() => {\n            setErrorState(false);\n          }}\n        >\n          {errorText}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}