{"ast":null,"code":"const setStringItem = (key, item) => {\n  if (localStorage) {\n    localStorage.setItem(key, item);\n  }\n};\n\nconst setObjectItem = (key, item) => {\n  setStringItem(key, JSON.stringify(item));\n};\n\nconst getStringItem = key => {\n  if (localStorage) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n};\n\nconst getObjectItem = key => {\n  const value = getStringItem(key);\n\n  if (value) {\n    return JSON.parse(value);\n  } else {\n    return value;\n  }\n};\n\nconst removeItem = key => {\n  if (localStorage) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport default {\n  setStringItem,\n  setObjectItem,\n  getStringItem,\n  getObjectItem,\n  removeItem\n};","map":{"version":3,"sources":["/idsn/git/July_22/PostIDSN-Viewer/src/services/LocalStorage.ts"],"names":["setStringItem","key","item","localStorage","setItem","setObjectItem","JSON","stringify","getStringItem","getItem","getObjectItem","value","parse","removeItem"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,GAAD,EAAcC,IAAd,KAA+B;AACnD,MAAIC,YAAJ,EAAkB;AAChBA,IAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,EAA0BC,IAA1B;AACD;AACF,CAJD;;AAMA,MAAMG,aAAa,GAAG,CAACJ,GAAD,EAAcC,IAAd,KAA4B;AAChDF,EAAAA,aAAa,CAACC,GAAD,EAAMK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAN,CAAb;AACD,CAFD;;AAIA,MAAMM,aAAa,GAAIP,GAAD,IAAgC;AACpD,MAAIE,YAAJ,EAAkB;AAChB,WAAOA,YAAY,CAACM,OAAb,CAAqBR,GAArB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CAND;;AAQA,MAAMS,aAAa,GAAIT,GAAD,IAA6B;AACjD,QAAMU,KAAK,GAAGH,aAAa,CAACP,GAAD,CAA3B;;AACA,MAAIU,KAAJ,EAAW;AACT,WAAOL,IAAI,CAACM,KAAL,CAAWD,KAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAOA,KAAP;AACD;AACF,CAPD;;AASA,MAAME,UAAU,GAAIZ,GAAD,IAAiB;AAClC,MAAIE,YAAJ,EAAkB;AAChBA,IAAAA,YAAY,CAACU,UAAb,CAAwBZ,GAAxB;AACD;AACF,CAJD;;AAMA,eAAe;AACbD,EAAAA,aADa;AAEbK,EAAAA,aAFa;AAGbG,EAAAA,aAHa;AAIbE,EAAAA,aAJa;AAKbG,EAAAA;AALa,CAAf","sourcesContent":["const setStringItem = (key: string, item: string) => {\n  if (localStorage) {\n    localStorage.setItem(key, item);\n  }\n};\n\nconst setObjectItem = (key: string, item: any) => {\n  setStringItem(key, JSON.stringify(item));\n};\n\nconst getStringItem = (key: string): string | null => {\n  if (localStorage) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n};\n\nconst getObjectItem = (key: string): any | null => {\n  const value = getStringItem(key);\n  if (value) {\n    return JSON.parse(value);\n  } else {\n    return value;\n  }\n};\n\nconst removeItem = (key: string) => {\n  if (localStorage) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport default {\n  setStringItem,\n  setObjectItem,\n  getStringItem,\n  getObjectItem,\n  removeItem,\n};\n"]},"metadata":{},"sourceType":"module"}