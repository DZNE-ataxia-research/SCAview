{"ast":null,"code":"var _jsxFileName = \"/Users/philippwegner/Desktop/UKB/git/PostIDSN-Viewer/src/containers/Viewer.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Grid from '../components/Grid';\nimport Plot from '../components/Plot';\nimport localStorage from '../services/LocalStorage';\nimport backend, { Fit, Legend } from '../services/Backend';\nimport utilities from '../services/Utilities';\nimport Filter, { defaultConcept } from './Filter';\nimport Configuration, { DiagramType, initialDiagramType, Visit } from './Controls';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './Viewer.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar'; // CONFIG\n\nexport const initialControls = {\n  identifier: '',\n  type: initialDiagramType,\n  attX: '',\n  attY: '',\n  attC: '',\n  dt: 0,\n  visit: Visit.all,\n  followup: 0,\n  tolerance: 0,\n  norm: false,\n  stack: false,\n  fit: Fit.none,\n  legend: Legend.legend,\n  bins: 0\n}; // PROPS\n\nconst Viewer = props => {\n  var _localStorage$getObje, _localStorage$getObje2, _localStorage$getObje3, _localStorage$getObje4, _localStorage$getObje5, _localStorage$getObje6, _plotControlsState$vi;\n\n  // GET ATTRIBUTES METHODS\n  const [attributes, setAttributes] = useState([]); // PATIENTS and SUBGROUPS are added to attributes manually and have this values as datatype\n\n  const getTooltip = attribute_ => {\n    return attributes ? attributes.filter(attr => attr[\"attribute\"] === attribute_)[0][\"attributeTooltip\"] : \"\";\n  };\n\n  const filter = datatypes => {\n    return attributes.filter(attribute => Object.values(datatypes).findIndex(datatype => attribute.datatype === datatype) !== -1);\n  }; // STATES\n  // errorState\n\n\n  const [errorState, setErrorState] = useState();\n  const [errorText, setErrorText] = useState(''); //\n  //const [loadingAttributes, setLoadingAttributes] = useState();\n\n  useEffect(() => {\n    backend.getAttributes().then(response => {\n      console.log(response);\n      setAttributes(response.allAttributes);\n    });\n  }, []); // viewerState\n\n  const initialViewerState = {\n    controlsVisible: false,\n    filtersVisible: true,\n    activePlot: ''\n  };\n  const [viewerState, setViewerState] = useState(initialViewerState);\n  const [gridLayoutsState, setGridLayoutsState] = useState((_localStorage$getObje = localStorage.getObjectItem('grid.layouts')) !== null && _localStorage$getObje !== void 0 ? _localStorage$getObje : {});\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState, viewerState]); // gridLayoutsState\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState]); // gridItemsState\n\n  const [gridItemsState, setGridItemsState] = useState(((_localStorage$getObje2 = localStorage.getObjectItem('grid.items')) !== null && _localStorage$getObje2 !== void 0 ? _localStorage$getObje2 : []). // Workaround for bug in layout serialization - Infinity (and possibly others) gets saved as null\n  map(item => {\n    var _item$y;\n\n    return { ...item,\n      y: (_item$y = item.y) !== null && _item$y !== void 0 ? _item$y : Infinity\n    };\n  }));\n  useEffect(() => {\n    localStorage.setObjectItem('grid.items', gridItemsState);\n  }, [gridItemsState]); // gridResponsiveState\n\n  const initialResponsiveState = {\n    breakpoint: '',\n    cols: 12\n  };\n  const [gridResponsiveState, setGridResponsiveState] = useState(initialResponsiveState);\n  useEffect(() => {\n    forceResize();\n  }, [gridResponsiveState]); // filterState\n\n  const defaultFilterState = {\n    concept: defaultConcept,\n    constraints: []\n  };\n  const [filterState, setFilterState] = useState((_localStorage$getObje3 = localStorage.getObjectItem('filter')) !== null && _localStorage$getObje3 !== void 0 ? _localStorage$getObje3 : defaultFilterState);\n  useEffect(() => {\n    localStorage.setObjectItem('filter', filterState);\n  }, [filterState]); // subgroupsState\n\n  const [subgroupsState, setSubgroupsState] = useState((_localStorage$getObje4 = localStorage.getObjectItem('subgroups')) !== null && _localStorage$getObje4 !== void 0 ? _localStorage$getObje4 : []);\n  useEffect(() => {\n    localStorage.setObjectItem('subgroups', subgroupsState);\n  }, [subgroupsState]); // plotControlsState\n\n  const [plotControlsState, setPlotControlsState] = useState((_localStorage$getObje5 = localStorage.getObjectItem('controls')) !== null && _localStorage$getObje5 !== void 0 ? _localStorage$getObje5 : {});\n  useEffect(() => {\n    localStorage.setObjectItem('controls', plotControlsState);\n  }, [plotControlsState]); // plotsState\n\n  const [plotsState, setPlotsState] = useState((_localStorage$getObje6 = localStorage.getObjectItem('plots')) !== null && _localStorage$getObje6 !== void 0 ? _localStorage$getObje6 : {});\n  useEffect(() => {\n    localStorage.setObjectItem('plots', plotsState);\n  }, [plotsState]); // updatingState\n\n  const [updatingState, setUpdatingState] = useState({}); // HANDLERS\n\n  const onGridBreakpointChange = (breakpoint, cols) => {\n    setGridResponsiveState({\n      breakpoint: breakpoint,\n      cols: cols\n    });\n  };\n\n  const onViewerConfigurationToggle = () => {\n    setViewerState({ ...viewerState,\n      controlsVisible: !viewerState.controlsVisible\n    });\n  };\n\n  const onViewerFilterToggle = () => {\n    setViewerState({ ...viewerState,\n      filtersVisible: !viewerState.filtersVisible\n    });\n  };\n\n  const onGridLayoutChange = (layout, layouts) => {\n    setGridLayoutsState(layouts);\n  };\n\n  const onGridItemAdd = () => {\n    const identifier = utilities.generateIdentifier();\n    const newIdentifiers = [...Object.keys(plotsState), identifier];\n    backend.sessionInit(newIdentifiers).then(() => {\n      var _document$querySelect, _document$querySelect2;\n\n      setGridItemsState([...gridItemsState, createGridItem(identifier)]);\n      setPlotControlsState({ ...plotControlsState,\n        ...{\n          [identifier]: createInitialPlotControlsState(identifier)\n        }\n      });\n      setPlotsState({ ...plotsState,\n        ...{\n          [identifier]: {\n            data: [],\n            layout: {}\n          }\n        }\n      });\n      setViewerState({ ...viewerState,\n        activePlot: identifier,\n        controlsVisible: true\n      });\n      (_document$querySelect = document.querySelector(\".scrollContainer\")) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.scrollTo({\n        top: (_document$querySelect2 = document.querySelector(\".scrollContainer\")) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.scrollHeight,\n        behavior: 'smooth'\n      });\n    }).catch(handleError);\n  };\n\n  const onGridItemRemove = identifier => {\n    const newPlotsState = { ...plotsState\n    };\n    delete newPlotsState[identifier];\n    backend.sessionInit(Object.keys(newPlotsState)).then(() => {\n      setGridItemsState(gridItemsState.filter(item => item.i !== identifier));\n      setPlotsState(newPlotsState);\n      const newPlotControlsState = { ...plotControlsState\n      };\n      delete newPlotControlsState[identifier];\n      setPlotControlsState(newPlotControlsState);\n\n      if (viewerState.activePlot === identifier) {\n        setViewerState({ ...viewerState,\n          activePlot: '',\n          controlsVisible: false\n        });\n      }\n    }).catch(handleError);\n  };\n\n  const onGridItemEdit = identifier => {\n    setViewerState({ ...viewerState,\n      activePlot: identifier,\n      controlsVisible: true\n    });\n  };\n\n  const onReset = () => {\n    backend.sessionReset().then(() => {\n      setViewerState(initialViewerState);\n      setGridResponsiveState(initialResponsiveState);\n      localStorage.setObjectItem('grid.layouts', {});\n      setGridLayoutsState({});\n      localStorage.setObjectItem('grid.items', []);\n      setGridItemsState([]);\n      localStorage.setObjectItem('filter', defaultFilterState);\n      setFilterState(defaultFilterState);\n      localStorage.setObjectItem('controls', {});\n      setPlotControlsState({});\n      localStorage.setObjectItem('plots', {});\n      setPlotsState({});\n      localStorage.setObjectItem('subgroups', []);\n      setSubgroupsState([]);\n    }).catch(handleError);\n  };\n\n  const onPlotSelected = (identifier, range, items) => {\n    if (!range) {\n      return;\n    }\n\n    setUpdating();\n    const newFilterState = { ...filterState,\n      constraints: [...filterState.constraints]\n    }; // Update/add x-constraint\n\n    if ([DiagramType.Scatter, DiagramType.Histogram, DiagramType.Timeline].includes(plotControlsState[identifier].controls.type)) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: range.x[0],\n        upper: range.x[1],\n        items: []\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attX);\n\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    } // Update/add y-constraint\n\n\n    if ([DiagramType.Scatter, DiagramType.Timeline].includes(plotControlsState[identifier].controls.type)) {\n      const newYConstraint = {\n        attribute: plotControlsState[identifier].controls.attY,\n        lower: range.y[0],\n        upper: range.y[1],\n        items: []\n      };\n      const constraintYIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attY);\n\n      if (constraintYIndex > -1) {\n        newFilterState.constraints[constraintYIndex] = newYConstraint;\n      } else {\n        newFilterState.constraints.push(newYConstraint);\n      }\n    } // Update/add discrete constraint\n\n\n    if ([DiagramType.Bar].includes(plotControlsState[identifier].controls.type)) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: null,\n        upper: null,\n        items: items\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(constraint => constraint.attribute === plotControlsState[identifier].controls.attX);\n\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend.filterUpdate(newFilterState).then(figures => {\n      handleFilterUpdateResponse(figures);\n    }).catch(handleError);\n  };\n\n  const onFilterChanged = filters => {\n    setUpdating();\n    const newFilterState = { ...filterState,\n      ...filters\n    };\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend.filterUpdate(newFilterState).then(figures => {\n      handleFilterUpdateResponse(figures);\n    }).catch(handleError);\n  };\n\n  const onSubgroupDefine = subgroup => {\n    backend.subgroupDefine(subgroup.name).then(() => {\n      setSubgroupsState([...subgroupsState.filter(_subgroup => _subgroup.name !== subgroup.name), subgroup]);\n    }).catch(handleError);\n  };\n\n  const onSubgroupDelete = name => {\n    //alert('Not yet implemented in backend.');\n    backend.subgroupDelete(name).then(response => {\n      setSubgroupsState([...subgroupsState.filter(subgroup => subgroup.name !== name)]);\n    });\n  };\n\n  const onSubgroupActivate = name => {\n    const subgroup = subgroupsState.find(subgroup => subgroup.name === name); //console.log(subgroup);\n\n    onFilterChanged({ ...filterState,\n      constraints: subgroup === null || subgroup === void 0 ? void 0 : subgroup.constraints\n    });\n  };\n\n  const onControlsChanged = (identifier, controls) => {\n    setUpdating(identifier);\n    const newControls = { ...plotControlsState[identifier].controls,\n      ...controls\n    };\n    const newPlotControls = { ...plotControlsState,\n      ...{\n        [identifier]: { ...plotsState[identifier],\n          controls: newControls\n        }\n      }\n    }; //console.log()\n\n    setPlotControlsState(newPlotControls);\n    utilities.devLog('new controls:', newControls);\n    backend.controlsUpdate(newPlotControls[identifier].controls).then(figure => {\n      handleControlsUpdateResponse(identifier, figure);\n    }).catch(handleError);\n  }; // HELPER (see first part above)\n\n\n  const handleError = error => {\n    console.log(error);\n\n    try {\n      setErrorText(`${error.toJSON().name}: ${error.toJSON().message}`);\n    } catch (e) {\n      setErrorText('ERROR: unknown');\n    }\n\n    setErrorState(true);\n    const newState = {};\n    Object.keys(plotControlsState).forEach(identifier => {\n      newState[identifier] = false;\n    });\n    setUpdatingState(newState);\n  };\n\n  const handleControlsUpdateResponse = (identifier, figure) => {\n    setPlotsState({ ...plotsState,\n      [identifier]: { ...plotsState[identifier],\n        data: figure.data || [],\n        layout: figure.layout || {}\n      }\n    });\n    utilities.devLog(identifier, 'done');\n    setUpdatingState({ ...updatingState,\n      [identifier]: false\n    });\n  };\n\n  const handleFilterUpdateResponse = figures => {\n    const identifiers = Object.keys(figures);\n    const newPlotsState = { ...plotsState\n    };\n    const newUpdatingState = { ...updatingState\n    };\n    identifiers.forEach(identifier => {\n      newPlotsState[identifier] = {\n        data: figures[identifier].data || [],\n        layout: figures[identifier].layout || {}\n      };\n      newUpdatingState[identifier] = false;\n    });\n    setPlotsState(newPlotsState);\n    setUpdatingState(newUpdatingState);\n  };\n\n  const forceResize = () => {\n    // Workaround to trigger plot resize\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const createGridItem = identifier => {\n    return {\n      i: identifier,\n      x: gridItemsState.length * 5 % gridResponsiveState.cols,\n      y: Infinity,\n      w: 5,\n      h: 4\n    };\n  };\n\n  const createInitialPlotControlsState = identifier => {\n    return {\n      controls: { ...initialControls,\n        identifier\n      }\n    };\n  };\n\n  const setUpdating = identifier => {\n    if (identifier) {\n      setUpdatingState({ ...updatingState,\n        [identifier]: true\n      });\n    } else {\n      const newState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = true;\n      });\n      setUpdatingState(newState);\n    }\n  }; // RENDER\n\n\n  const createGridItemElement = item => {\n    var _plotsState$item$i, _plotsState$item$i2;\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: item.i,\n      \"data-grid\": item,\n      className: `grid__item ${viewerState.activePlot === item.i ? ' grid__item--active' : ''}`,\n      onClick: () => {\n        onGridItemEdit(item.i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid__item-header grid--draggable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      onClick: () => {\n        onGridItemRemove(item.i);\n      },\n      className: \"grid__item--close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid__item-loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }\n    }, updatingState[item.i] && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(CardContent, {\n      className: \"grid__item-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Plot, {\n      identifier: item.i,\n      data: (_plotsState$item$i = plotsState[item.i]) === null || _plotsState$item$i === void 0 ? void 0 : _plotsState$item$i.data,\n      layout: (_plotsState$item$i2 = plotsState[item.i]) === null || _plotsState$item$i2 === void 0 ? void 0 : _plotsState$item$i2.layout,\n      onSelected: onPlotSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  if (!(attributes && attributes.length)) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onGridItemAdd,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 24\n      }\n    }),\n    title: \"Add new diagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 11\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: forceResize,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(AspectRatioIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 24\n      }\n    }),\n    title: \"Force resize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 11\n    }\n  }, \"Resize\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onReset,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(ReplayIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 24\n      }\n    }),\n    title: \"Reset session\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 11\n    }\n  }, \"Reset session\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toolbar__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onViewerConfigurationToggle,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 24\n      }\n    }),\n    title: \"Toggle configuration panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 11\n    }\n  }, \"Configuration\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onViewerFilterToggle,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/React.createElement(FilterListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 24\n      }\n    }),\n    title: \"Toggle filter panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 11\n    }\n  }, \"Filter\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }\n  }, viewerState.filtersVisible && /*#__PURE__*/React.createElement(Filter, {\n    filter: filterState,\n    subgroups: subgroupsState,\n    onFilterChanged: onFilterChanged,\n    onSubgroupDefine: onSubgroupDefine,\n    onSubgroupDelete: onSubgroupDelete,\n    onSubgroupActivate: onSubgroupActivate,\n    onClose: onViewerFilterToggle,\n    getTooltip: getTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrollContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    breakpointCols: {\n      lg: 12,\n      md: 10,\n      sm: 6,\n      xs: 4,\n      xxs: 2\n    },\n    rowHeight: 100,\n    layouts: gridLayoutsState,\n    onBreakpointChange: onGridBreakpointChange,\n    onLayoutChange: onGridLayoutChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 9\n    }\n  }, gridItemsState.map(item => createGridItemElement(item)))), viewerState.controlsVisible && /*#__PURE__*/React.createElement(Configuration, {\n    controls: (_plotControlsState$vi = plotControlsState[viewerState.activePlot]) === null || _plotControlsState$vi === void 0 ? void 0 : _plotControlsState$vi.controls,\n    onControlsChanged: onControlsChanged,\n    onClose: onViewerConfigurationToggle,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Snackbar, {\n    open: errorState,\n    autoHideDuration: 10000,\n    onClose: () => {\n      setErrorState(false);\n    },\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"error\",\n    onClose: () => {\n      setErrorState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }\n  }, errorText)));\n};\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/philippwegner/Desktop/UKB/git/PostIDSN-Viewer/src/containers/Viewer.tsx"],"names":["React","useState","useEffect","Grid","Plot","localStorage","backend","Fit","Legend","utilities","Filter","defaultConcept","Configuration","DiagramType","initialDiagramType","Visit","Button","Card","CardContent","IconButton","LinearProgress","AddIcon","AspectRatioIcon","ReplayIcon","SettingsIcon","FilterListIcon","EditIcon","CloseIcon","Alert","Snackbar","initialControls","identifier","type","attX","attY","attC","dt","visit","all","followup","tolerance","norm","stack","fit","none","legend","bins","Viewer","props","attributes","setAttributes","getTooltip","attribute_","filter","attr","datatypes","attribute","Object","values","findIndex","datatype","errorState","setErrorState","errorText","setErrorText","getAttributes","then","response","console","log","allAttributes","initialViewerState","controlsVisible","filtersVisible","activePlot","viewerState","setViewerState","gridLayoutsState","setGridLayoutsState","getObjectItem","setObjectItem","forceResize","gridItemsState","setGridItemsState","map","item","y","Infinity","initialResponsiveState","breakpoint","cols","gridResponsiveState","setGridResponsiveState","defaultFilterState","concept","constraints","filterState","setFilterState","subgroupsState","setSubgroupsState","plotControlsState","setPlotControlsState","plotsState","setPlotsState","updatingState","setUpdatingState","onGridBreakpointChange","onViewerConfigurationToggle","onViewerFilterToggle","onGridLayoutChange","layout","layouts","onGridItemAdd","generateIdentifier","newIdentifiers","keys","sessionInit","createGridItem","createInitialPlotControlsState","data","document","querySelector","scrollTo","top","scrollHeight","behavior","catch","handleError","onGridItemRemove","newPlotsState","i","newPlotControlsState","onGridItemEdit","onReset","sessionReset","onPlotSelected","range","items","setUpdating","newFilterState","Scatter","Histogram","Timeline","includes","controls","newXConstraint","lower","x","upper","constraintXIndex","constraint","push","newYConstraint","constraintYIndex","Bar","devLog","filterUpdate","figures","handleFilterUpdateResponse","onFilterChanged","filters","onSubgroupDefine","subgroup","subgroupDefine","name","_subgroup","onSubgroupDelete","subgroupDelete","onSubgroupActivate","find","onControlsChanged","newControls","newPlotControls","controlsUpdate","figure","handleControlsUpdateResponse","error","toJSON","message","e","newState","forEach","identifiers","newUpdatingState","window","dispatchEvent","Event","length","w","h","createGridItemElement","lg","md","sm","xs","xxs","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,IAAkBC,GAAlB,EAAuBC,MAAvB,QAAqC,qBAArC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,IAA8BC,cAA9B,QAA8D,UAA9D;AACA,OAAOC,aAAP,IAEEC,WAFF,EAGEC,kBAHF,EAIEC,KAJF,QAMO,YANP;AASA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAGA;;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,UAAU,EAAE,EADiB;AAE7BC,EAAAA,IAAI,EAAElB,kBAFuB;AAG7BmB,EAAAA,IAAI,EAAE,EAHuB;AAI7BC,EAAAA,IAAI,EAAE,EAJuB;AAK7BC,EAAAA,IAAI,EAAE,EALuB;AAM7BC,EAAAA,EAAE,EAAE,CANyB;AAO7BC,EAAAA,KAAK,EAAEtB,KAAK,CAACuB,GAPgB;AAQ7BC,EAAAA,QAAQ,EAAE,CARmB;AAS7BC,EAAAA,SAAS,EAAE,CATkB;AAU7BC,EAAAA,IAAI,EAAE,KAVuB;AAW7BC,EAAAA,KAAK,EAAE,KAXsB;AAY7BC,EAAAA,GAAG,EAAEpC,GAAG,CAACqC,IAZoB;AAa7BC,EAAAA,MAAM,EAAErC,MAAM,CAACqC,MAbc;AAc7BC,EAAAA,IAAI,EAAE;AAduB,CAAxB,C,CAiBP;;AAmBA,MAAMC,MAAsC,GAAGC,KAAK,IAAI;AAAA;;AACtD;AAKA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAc,EAAd,CAA5C,CANsD,CAOtD;;AAGA,QAAMkD,UAAU,GAAIC,UAAD,IAAgC;AAC/C,WAAOH,UAAU,GAAGA,UAAU,CAACI,MAAX,CAAmBC,IAAD,IAAqBA,IAAI,CAAC,WAAD,CAAJ,KAAsBF,UAA7D,EAAyE,CAAzE,EAA4E,kBAA5E,CAAH,GAAqG,EAAtH;AACH,GAFD;;AAIA,QAAMC,MAAM,GAAIE,SAAD,IAAwC;AACrD,WAAON,UAAU,CAACI,MAAX,CACLG,SAAS,IACPC,MAAM,CAACC,MAAP,CAAcH,SAAd,EAAyBI,SAAzB,CACEC,QAAQ,IAAIJ,SAAS,CAACI,QAAV,KAAuBA,QADrC,MAEM,CAAC,CAJJ,CAAP;AAMD,GAPD,CAdsD,CAuBtD;AAEA;;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,EAA5C;AACA,QAAM,CAAC8D,SAAD,EAAYC,YAAZ,IAA4B/D,QAAQ,CAAS,EAAT,CAA1C,CA3BsD,CA6BtD;AAGA;;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,OAAO,CAAC2D,aAAR,GAAwBC,IAAxB,CAA8BC,QAAD,IAAa;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAjB,MAAAA,aAAa,CAACiB,QAAQ,CAACG,aAAV,CAAb;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT,CAlCsD,CAyCtD;;AACA,QAAMC,kBAAkB,GAAG;AACzBC,IAAAA,eAAe,EAAE,KADQ;AAEzBC,IAAAA,cAAc,EAAE,IAFS;AAGzBC,IAAAA,UAAU,EAAE;AAHa,GAA3B;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IACJ3E,QAAQ,CAILsE,kBAJK,CADV;AAMA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IACJ7E,QAAQ,0BACNI,YAAY,CAAC0E,aAAb,CAA2B,cAA3B,CADM,yEACwC,EADxC,CADV;AAKA7E,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,cAA3B,EAA2CH,gBAA3C;AACAI,IAAAA,WAAW;AACZ,GAHQ,EAGN,CAACJ,gBAAD,EAAmBF,WAAnB,CAHM,CAAT,CA1DsD,CA+DtD;;AAEAzE,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,cAA3B,EAA2CH,gBAA3C;AACAI,IAAAA,WAAW;AACZ,GAHQ,EAGN,CAACJ,gBAAD,CAHM,CAAT,CAjEsD,CAsEtD;;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsClF,QAAQ,CAGlD,2BAACI,YAAY,CAAC0E,aAAb,CAA2B,YAA3B,CAAD,2EAA6C,EAA7C,GACE;AACCK,EAAAA,GAFH,CAEQC,IAAD,IAAkC;AAAA;;AACrC,WAAO,EAAE,GAAGA,IAAL;AAAWC,MAAAA,CAAC,aAAED,IAAI,CAACC,CAAP,6CAAYC;AAAxB,KAAP;AACD,GAJH,CAHkD,CAApD;AASArF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,YAA3B,EAAyCE,cAAzC;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT,CAhFsD,CAoFtD;;AACA,QAAMM,sBAAsB,GAAG;AAAEC,IAAAA,UAAU,EAAE,EAAd;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAA/B;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgD3F,QAAQ,CAG3DuF,sBAH2D,CAA9D;AAIAtF,EAAAA,SAAS,CAAC,MAAM;AACd+E,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACU,mBAAD,CAFM,CAAT,CA1FsD,CA8FtD;;AACA,QAAME,kBAA+B,GAAG;AACtCC,IAAAA,OAAO,EAAEnF,cAD6B;AAEtCoF,IAAAA,WAAW,EAAE;AAFyB,GAAxC;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChG,QAAQ,2BAC5CI,YAAY,CAAC0E,aAAb,CAA2B,QAA3B,CAD4C,2EACJc,kBADI,CAA9C;AAGA3F,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,QAA3B,EAAqCgB,WAArC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CAvGsD,CA2GtD;;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsClG,QAAQ,2BAClDI,YAAY,CAAC0E,aAAb,CAA2B,WAA3B,CADkD,2EACP,EADO,CAApD;AAGA7E,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,WAA3B,EAAwCkB,cAAxC;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT,CA/GsD,CAmHtD;;AAKA,QAAM,CAACE,iBAAD,EAAoBC,oBAApB,IAA4CpG,QAAQ,2BACxDI,YAAY,CAAC0E,aAAb,CAA2B,UAA3B,CADwD,2EACd,EADc,CAA1D;AAGA7E,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,UAA3B,EAAuCoB,iBAAvC;AACD,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT,CA3HsD,CA+HtD;;AAKA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BtG,QAAQ,2BAC1CI,YAAY,CAAC0E,aAAb,CAA2B,OAA3B,CAD0C,2EACH,EADG,CAA5C;AAGA7E,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,CAAC2E,aAAb,CAA2B,OAA3B,EAAoCsB,UAApC;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT,CAvIsD,CA2ItD;;AAIA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCxG,QAAQ,CAAgB,EAAhB,CAAlD,CA/IsD,CAiJtD;;AAEA,QAAMyG,sBAAsB,GAAG,CAACjB,UAAD,EAAqBC,IAArB,KAAsC;AACnEE,IAAAA,sBAAsB,CAAC;AACrBH,MAAAA,UAAU,EAAEA,UADS;AAErBC,MAAAA,IAAI,EAAEA;AAFe,KAAD,CAAtB;AAID,GALD;;AAOA,QAAMiB,2BAA2B,GAAG,MAAM;AACxC/B,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbH,MAAAA,eAAe,EAAE,CAACG,WAAW,CAACH;AAFjB,KAAD,CAAd;AAID,GALD;;AAOA,QAAMoC,oBAAoB,GAAG,MAAM;AACjChC,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbF,MAAAA,cAAc,EAAE,CAACE,WAAW,CAACF;AAFhB,KAAD,CAAd;AAID,GALD;;AAOA,QAAMoC,kBAAkB,GAAG,CACzBC,MADyB,EAEzBC,OAFyB,KAGtB;AACHjC,IAAAA,mBAAmB,CAACiC,OAAD,CAAnB;AACD,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMjF,UAAU,GAAGtB,SAAS,CAACwG,kBAAV,EAAnB;AACA,UAAMC,cAAc,GAAG,CAAC,GAAGzD,MAAM,CAAC0D,IAAP,CAAYb,UAAZ,CAAJ,EAA6BvE,UAA7B,CAAvB;AACAzB,IAAAA,OAAO,CACJ8G,WADH,CACeF,cADf,EAEGhD,IAFH,CAEQ,MAAM;AAAA;;AACViB,MAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBmC,cAAc,CAACtF,UAAD,CAAlC,CAAD,CAAjB;AACAsE,MAAAA,oBAAoB,CAAC,EACnB,GAAGD,iBADgB;AAEnB,WAAG;AAAE,WAACrE,UAAD,GAAcuF,8BAA8B,CAACvF,UAAD;AAA9C;AAFgB,OAAD,CAApB;AAIAwE,MAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,WAAG;AAAE,WAACvE,UAAD,GAAc;AAAEwF,YAAAA,IAAI,EAAE,EAAR;AAAYT,YAAAA,MAAM,EAAE;AAApB;AAAhB;AAFS,OAAD,CAAb;AAIAlC,MAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbD,QAAAA,UAAU,EAAE3C,UAFC;AAGbyC,QAAAA,eAAe,EAAE;AAHJ,OAAD,CAAd;AAKA,+BAAAgD,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,iFAA4CC,QAA5C,CAAqD;AACnDC,QAAAA,GAAG,4BAAEH,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAF,2DAAE,uBAA4CG,YADE;AAEnDC,QAAAA,QAAQ,EAAE;AAFyC,OAArD;AAID,KArBH,EAsBGC,KAtBH,CAsBSC,WAtBT;AAuBD,GA1BD;;AA4BA,QAAMC,gBAAgB,GAAIjG,UAAD,IAAwB;AAC/C,UAAMkG,aAAa,GAAG,EAAE,GAAG3B;AAAL,KAAtB;AACA,WAAO2B,aAAa,CAAClG,UAAD,CAApB;AACAzB,IAAAA,OAAO,CACJ8G,WADH,CACe3D,MAAM,CAAC0D,IAAP,CAAYc,aAAZ,CADf,EAEG/D,IAFH,CAEQ,MAAM;AACViB,MAAAA,iBAAiB,CACfD,cAAc,CAAC7B,MAAf,CACGgC,IAAD,IAAkCA,IAAI,CAAC6C,CAAL,KAAWnG,UAD/C,CADe,CAAjB;AAKAwE,MAAAA,aAAa,CAAC0B,aAAD,CAAb;AACA,YAAME,oBAAoB,GAAG,EAAE,GAAG/B;AAAL,OAA7B;AACA,aAAO+B,oBAAoB,CAACpG,UAAD,CAA3B;AACAsE,MAAAA,oBAAoB,CAAC8B,oBAAD,CAApB;;AACA,UAAIxD,WAAW,CAACD,UAAZ,KAA2B3C,UAA/B,EAA2C;AACzC6C,QAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbD,UAAAA,UAAU,EAAE,EAFC;AAGbF,UAAAA,eAAe,EAAE;AAHJ,SAAD,CAAd;AAKD;AACF,KAnBH,EAoBGsD,KApBH,CAoBSC,WApBT;AAqBD,GAxBD;;AA0BA,QAAMK,cAAc,GAAIrG,UAAD,IAAwB;AAC7C6C,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEbD,MAAAA,UAAU,EAAE3C,UAFC;AAGbyC,MAAAA,eAAe,EAAE;AAHJ,KAAD,CAAd;AAKD,GAND;;AAQA,QAAM6D,OAAO,GAAG,MAAM;AACpB/H,IAAAA,OAAO,CACJgI,YADH,GAEGpE,IAFH,CAEQ,MAAM;AACVU,MAAAA,cAAc,CAACL,kBAAD,CAAd;AACAqB,MAAAA,sBAAsB,CAACJ,sBAAD,CAAtB;AACAnF,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,cAA3B,EAA2C,EAA3C;AACAF,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAzE,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,YAA3B,EAAyC,EAAzC;AACAG,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA9E,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,QAA3B,EAAqCa,kBAArC;AACAI,MAAAA,cAAc,CAACJ,kBAAD,CAAd;AACAxF,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,UAA3B,EAAuC,EAAvC;AACAqB,MAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAhG,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,OAA3B,EAAoC,EAApC;AACAuB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAlG,MAAAA,YAAY,CAAC2E,aAAb,CAA2B,WAA3B,EAAwC,EAAxC;AACAmB,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AAED,KAlBH,EAmBG2B,KAnBH,CAmBSC,WAnBT;AAoBD,GArBD;;AAuBA,QAAMQ,cAAc,GAAG,CACrBxG,UADqB,EAErByG,KAFqB,EAGrBC,KAHqB,KAIlB;AACH,QAAI,CAACD,KAAL,EAAY;AACV;AACD;;AAEDE,IAAAA,WAAW;AACX,UAAMC,cAA2B,GAAG,EAClC,GAAG3C,WAD+B;AAElCD,MAAAA,WAAW,EAAE,CAAC,GAAGC,WAAW,CAACD,WAAhB;AAFqB,KAApC,CANG,CAUH;;AACA,QACE,CACElF,WAAW,CAAC+H,OADd,EAEE/H,WAAW,CAACgI,SAFd,EAGEhI,WAAW,CAACiI,QAHd,EAIEC,QAJF,CAIW3C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuChH,IAJlD,CADF,EAME;AACA,YAAMiH,cAAc,GAAG;AACrBzF,QAAAA,SAAS,EAAE4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC/G,IAD7B;AAErBiH,QAAAA,KAAK,EAAEV,KAAK,CAACW,CAAN,CAAQ,CAAR,CAFc;AAGrBC,QAAAA,KAAK,EAAEZ,KAAK,CAACW,CAAN,CAAQ,CAAR,CAHc;AAIrBV,QAAAA,KAAK,EAAE;AAJc,OAAvB;AAMA,YAAMY,gBAAgB,GAAGV,cAAc,CAAC5C,WAAf,CAA2BpC,SAA3B,CACvB2F,UAAU,IACRA,UAAU,CAAC9F,SAAX,KAAyB4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC/G,IAF3C,CAAzB;;AAIA,UAAIoH,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AACzBV,QAAAA,cAAc,CAAC5C,WAAf,CAA2BsD,gBAA3B,IAA+CJ,cAA/C;AACD,OAFD,MAEO;AACLN,QAAAA,cAAc,CAAC5C,WAAf,CAA2BwD,IAA3B,CAAgCN,cAAhC;AACD;AACF,KAjCE,CAkCH;;;AACA,QACE,CAACpI,WAAW,CAAC+H,OAAb,EAAsB/H,WAAW,CAACiI,QAAlC,EAA4CC,QAA5C,CACE3C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuChH,IADzC,CADF,EAIE;AACA,YAAMwH,cAAc,GAAG;AACrBhG,QAAAA,SAAS,EAAE4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC9G,IAD7B;AAErBgH,QAAAA,KAAK,EAAEV,KAAK,CAAClD,CAAN,CAAQ,CAAR,CAFc;AAGrB8D,QAAAA,KAAK,EAAEZ,KAAK,CAAClD,CAAN,CAAQ,CAAR,CAHc;AAIrBmD,QAAAA,KAAK,EAAE;AAJc,OAAvB;AAMA,YAAMgB,gBAAgB,GAAGd,cAAc,CAAC5C,WAAf,CAA2BpC,SAA3B,CACvB2F,UAAU,IACRA,UAAU,CAAC9F,SAAX,KAAyB4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC9G,IAF3C,CAAzB;;AAIA,UAAIuH,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AACzBd,QAAAA,cAAc,CAAC5C,WAAf,CAA2B0D,gBAA3B,IAA+CD,cAA/C;AACD,OAFD,MAEO;AACLb,QAAAA,cAAc,CAAC5C,WAAf,CAA2BwD,IAA3B,CAAgCC,cAAhC;AACD;AACF,KAvDE,CAwDH;;;AACA,QACE,CAAC3I,WAAW,CAAC6I,GAAb,EAAkBX,QAAlB,CAA2B3C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuChH,IAAlE,CADF,EAEE;AACA,YAAMiH,cAAc,GAAG;AACrBzF,QAAAA,SAAS,EAAE4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC/G,IAD7B;AAErBiH,QAAAA,KAAK,EAAE,IAFc;AAGrBE,QAAAA,KAAK,EAAE,IAHc;AAIrBX,QAAAA,KAAK,EAAEA;AAJc,OAAvB;AAMA,YAAMY,gBAAgB,GAAGV,cAAc,CAAC5C,WAAf,CAA2BpC,SAA3B,CACvB2F,UAAU,IACRA,UAAU,CAAC9F,SAAX,KAAyB4C,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QAA9B,CAAuC/G,IAF3C,CAAzB;;AAIA,UAAIoH,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AACzBV,QAAAA,cAAc,CAAC5C,WAAf,CAA2BsD,gBAA3B,IAA+CJ,cAA/C;AACD,OAFD,MAEO;AACLN,QAAAA,cAAc,CAAC5C,WAAf,CAA2BwD,IAA3B,CAAgCN,cAAhC;AACD;AACF;;AAEDhD,IAAAA,cAAc,CAAC0C,cAAD,CAAd;AACAlI,IAAAA,SAAS,CAACkJ,MAAV,CAAiB,cAAjB,EAAiChB,cAAjC;AACArI,IAAAA,OAAO,CACJsJ,YADH,CACgBjB,cADhB,EAEGzE,IAFH,CAES2F,OAAD,IAAiD;AACrDC,MAAAA,0BAA0B,CAACD,OAAD,CAA1B;AACD,KAJH,EAKG/B,KALH,CAKSC,WALT;AAMD,GAzFD;;AA2FA,QAAMgC,eAAe,GAAIC,OAAD,IAAmC;AACzDtB,IAAAA,WAAW;AACX,UAAMC,cAA2B,GAAG,EAClC,GAAG3C,WAD+B;AAElC,SAAGgE;AAF+B,KAApC;AAIA/D,IAAAA,cAAc,CAAC0C,cAAD,CAAd;AACAlI,IAAAA,SAAS,CAACkJ,MAAV,CAAiB,cAAjB,EAAiChB,cAAjC;AACArI,IAAAA,OAAO,CACJsJ,YADH,CACgBjB,cADhB,EAEGzE,IAFH,CAES2F,OAAD,IAAiD;AACrDC,MAAAA,0BAA0B,CAACD,OAAD,CAA1B;AACD,KAJH,EAKG/B,KALH,CAKSC,WALT;AAMD,GAdD;;AAgBA,QAAMkC,gBAAgB,GAAIC,QAAD,IAAwB;AAC/C5J,IAAAA,OAAO,CACJ6J,cADH,CACkBD,QAAQ,CAACE,IAD3B,EAEGlG,IAFH,CAEQ,MAAM;AACViC,MAAAA,iBAAiB,CAAC,CAChB,GAAGD,cAAc,CAAC7C,MAAf,CACDgH,SAAS,IAAIA,SAAS,CAACD,IAAV,KAAmBF,QAAQ,CAACE,IADxC,CADa,EAIhBF,QAJgB,CAAD,CAAjB;AAWD,KAdH,EAeGpC,KAfH,CAeSC,WAfT;AAgBD,GAjBD;;AAmBA,QAAMuC,gBAAgB,GAAIF,IAAD,IAAkB;AACzC;AACA9J,IAAAA,OAAO,CAACiK,cAAR,CAAuBH,IAAvB,EAA6BlG,IAA7B,CAAkCC,QAAQ,IAAG;AAC3CgC,MAAAA,iBAAiB,CAAC,CAChB,GAAGD,cAAc,CAAC7C,MAAf,CAAsB6G,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkBA,IAApD,CADa,CAAD,CAAjB;AAGD,KAJD;AAMD,GARD;;AASA,QAAMI,kBAAkB,GAAIJ,IAAD,IAAkB;AAC3C,UAAMF,QAAQ,GAAGhE,cAAc,CAACuE,IAAf,CAAoBP,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkBA,IAAlD,CAAjB,CAD2C,CAE3C;;AACAL,IAAAA,eAAe,CAAC,EACd,GAAG/D,WADW;AAEdD,MAAAA,WAAW,EAAEmE,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEnE;AAFT,KAAD,CAAf;AAID,GAPD;;AASA,QAAM2E,iBAAiB,GAAG,CACxB3I,UADwB,EAExBiH,QAFwB,KAGrB;AACHN,IAAAA,WAAW,CAAC3G,UAAD,CAAX;AACA,UAAM4I,WAA0B,GAAG,EACjC,GAAGvE,iBAAiB,CAACrE,UAAD,CAAjB,CAA8BiH,QADA;AAEjC,SAAGA;AAF8B,KAAnC;AAIA,UAAM4B,eAAe,GAAG,EACtB,GAAGxE,iBADmB;AAEtB,SAAG;AACD,SAACrE,UAAD,GAAc,EACZ,GAAGuE,UAAU,CAACvE,UAAD,CADD;AAEZiH,UAAAA,QAAQ,EAAE2B;AAFE;AADb;AAFmB,KAAxB,CANG,CAeH;;AACAtE,IAAAA,oBAAoB,CAACuE,eAAD,CAApB;AACAnK,IAAAA,SAAS,CAACkJ,MAAV,CAAiB,eAAjB,EAAkCgB,WAAlC;AACArK,IAAAA,OAAO,CACJuK,cADH,CACkBD,eAAe,CAAC7I,UAAD,CAAf,CAA4BiH,QAD9C,EAEG9E,IAFH,CAES4G,MAAD,IAA6B;AACjCC,MAAAA,4BAA4B,CAAChJ,UAAD,EAAa+I,MAAb,CAA5B;AACD,KAJH,EAKGhD,KALH,CAKSC,WALT;AAMD,GA3BD,CApZsD,CAibtD;;;AAEA,QAAMA,WAAW,GAAIiD,KAAD,IAAgB;AAClC5G,IAAAA,OAAO,CAACC,GAAR,CAAY2G,KAAZ;;AACA,QAAI;AACFhH,MAAAA,YAAY,CAAE,GAAEgH,KAAK,CAACC,MAAN,GAAeb,IAAK,KAAIY,KAAK,CAACC,MAAN,GAAeC,OAAQ,EAAnD,CAAZ;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVnH,MAAAA,YAAY,CAAC,gBAAD,CAAZ;AACD;;AAEDF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMsH,QAAuB,GAAG,EAAhC;AACE3H,IAAAA,MAAM,CAAC0D,IAAP,CAAYf,iBAAZ,EAA+BiF,OAA/B,CAAuCtJ,UAAU,IAAI;AACnDqJ,MAAAA,QAAQ,CAACrJ,UAAD,CAAR,GAAuB,KAAvB;AACD,KAFD;AAGA0E,IAAAA,gBAAgB,CAAC2E,QAAD,CAAhB;AACH,GAdD;;AAgBA,QAAML,4BAA4B,GAAG,CACnChJ,UADmC,EAEnC+I,MAFmC,KAGhC;AACHvE,IAAAA,aAAa,CAAC,EACZ,GAAGD,UADS;AAEZ,OAACvE,UAAD,GAAc,EACZ,GAAGuE,UAAU,CAACvE,UAAD,CADD;AAEZwF,QAAAA,IAAI,EAAEuD,MAAM,CAACvD,IAAP,IAAe,EAFT;AAGZT,QAAAA,MAAM,EAAEgE,MAAM,CAAChE,MAAP,IAAiB;AAHb;AAFF,KAAD,CAAb;AAQArG,IAAAA,SAAS,CAACkJ,MAAV,CAAiB5H,UAAjB,EAA6B,MAA7B;AACA0E,IAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEf,OAACzE,UAAD,GAAc;AAFC,KAAD,CAAhB;AAID,GAjBD;;AAmBA,QAAM+H,0BAA0B,GAAID,OAAD,IAE7B;AACJ,UAAMyB,WAAW,GAAG7H,MAAM,CAAC0D,IAAP,CAAY0C,OAAZ,CAApB;AACA,UAAM5B,aAAa,GAAG,EAAE,GAAG3B;AAAL,KAAtB;AACA,UAAMiF,gBAAgB,GAAG,EAAE,GAAG/E;AAAL,KAAzB;AACA8E,IAAAA,WAAW,CAACD,OAAZ,CAAoBtJ,UAAU,IAAI;AAChCkG,MAAAA,aAAa,CAAClG,UAAD,CAAb,GAA4B;AAC1BwF,QAAAA,IAAI,EAAEsC,OAAO,CAAC9H,UAAD,CAAP,CAAoBwF,IAApB,IAA4B,EADR;AAE1BT,QAAAA,MAAM,EAAE+C,OAAO,CAAC9H,UAAD,CAAP,CAAoB+E,MAApB,IAA8B;AAFZ,OAA5B;AAIAyE,MAAAA,gBAAgB,CAACxJ,UAAD,CAAhB,GAA+B,KAA/B;AACD,KAND;AAOAwE,IAAAA,aAAa,CAAC0B,aAAD,CAAb;AACAxB,IAAAA,gBAAgB,CAAC8E,gBAAD,CAAhB;AACD,GAfD;;AAiBA,QAAMtG,WAAW,GAAG,MAAM;AACxB;AACAuG,IAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACD,GAHD;;AAKA,QAAMrE,cAAc,GAAItF,UAAD,IAAgD;AACrE,WAAO;AACLmG,MAAAA,CAAC,EAAEnG,UADE;AAELoH,MAAAA,CAAC,EAAGjE,cAAc,CAACyG,MAAf,GAAwB,CAAzB,GAA8BhG,mBAAmB,CAACD,IAFhD;AAGLJ,MAAAA,CAAC,EAAEC,QAHE;AAILqG,MAAAA,CAAC,EAAE,CAJE;AAKLC,MAAAA,CAAC,EAAE;AALE,KAAP;AAOD,GARD;;AAUA,QAAMvE,8BAA8B,GAClCvF,UADqC,IAEL;AAChC,WAAO;AAAEiH,MAAAA,QAAQ,EAAE,EAAE,GAAGlH,eAAL;AAAsBC,QAAAA;AAAtB;AAAZ,KAAP;AACD,GAJD;;AAMA,QAAM2G,WAAW,GAAI3G,UAAD,IAAyB;AAC3C,QAAIA,UAAJ,EAAgB;AACd0E,MAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEf,SAACzE,UAAD,GAAc;AAFC,OAAD,CAAhB;AAID,KALD,MAKO;AACL,YAAMqJ,QAAuB,GAAG,EAAhC;AACA3H,MAAAA,MAAM,CAAC0D,IAAP,CAAYf,iBAAZ,EAA+BiF,OAA/B,CAAuCtJ,UAAU,IAAI;AACnDqJ,QAAAA,QAAQ,CAACrJ,UAAD,CAAR,GAAuB,IAAvB;AACD,OAFD;AAGA0E,MAAAA,gBAAgB,CAAC2E,QAAD,CAAhB;AACD;AACF,GAbD,CA5fsD,CA2gBtD;;;AAEA,QAAMU,qBAAqB,GAAIzG,IAAD,IAAkC;AAAA;;AAC9D,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAAC6C,CADZ;AAEE,mBAAW7C,IAFb;AAGE,MAAA,SAAS,EAAG,cACVV,WAAW,CAACD,UAAZ,KAA2BW,IAAI,CAAC6C,CAAhC,GAAoC,qBAApC,GAA4D,EAC7D,EALH;AAME,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,cAAc,CAAC/C,IAAI,CAAC6C,CAAN,CAAd;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,MAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,eAQE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,OAFb;AAGE,MAAA,OAAO,EAAE,MAAM;AACbF,QAAAA,gBAAgB,CAAC3C,IAAI,CAAC6C,CAAN,CAAhB;AACD,OALH;AAME,MAAA,SAAS,EAAC,mBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CARF,CAVF,eA6BE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1B,aAAa,CAACnB,IAAI,CAAC6C,CAAN,CAAb,iBAAyB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5B,CA7BF,eAgCE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE7C,IAAI,CAAC6C,CADnB;AAEE,MAAA,IAAI,wBAAE5B,UAAU,CAACjB,IAAI,CAAC6C,CAAN,CAAZ,uDAAE,mBAAoBX,IAF5B;AAGE,MAAA,MAAM,yBAAEjB,UAAU,CAACjB,IAAI,CAAC6C,CAAN,CAAZ,wDAAE,oBAAoBpB,MAH9B;AAIE,MAAA,UAAU,EAAEyB,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhCF,CADF;AA2CD,GA5CD;;AA6CA,MAAI,EAAEtF,UAAU,IAAIA,UAAU,CAAC0I,MAA3B,CAAJ,EAAwC,OAAO,IAAP;AACxC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE3E,aADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAKE,IAAA,KAAK,EAAC,iBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE/B,WADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,eAAE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAKE,IAAA,KAAK,EAAC,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEoD,OADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAKE,IAAA,KAAK,EAAC,eALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBF,CADF,eAiCE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE1B,2BADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,eAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAKE,IAAA,KAAK,EAAC,4BALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAWE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,oBADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJb;AAKE,IAAA,KAAK,EAAC,qBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CAjCF,CADF,eAwDE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,WAAW,CAACF,cAAZ,iBACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAEuB,WADV;AAEE,IAAA,SAAS,EAAEE,cAFb;AAGE,IAAA,eAAe,EAAE6D,eAHnB;AAIE,IAAA,gBAAgB,EAAEE,gBAJpB;AAKE,IAAA,gBAAgB,EAAEK,gBALpB;AAME,IAAA,kBAAkB,EAAEE,kBANtB;AAOE,IAAA,OAAO,EAAE5D,oBAPX;AAQE,IAAA,UAAU,EAAIzD,UARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAaE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AACE,IAAA,cAAc,EAAE;AAAE4I,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,EAAE,EAAE,EAAd;AAAkBC,MAAAA,EAAE,EAAE,CAAtB;AAAyBC,MAAAA,EAAE,EAAE,CAA7B;AAAgCC,MAAAA,GAAG,EAAE;AAArC,KADlB;AAEE,IAAA,SAAS,EAAE,GAFb;AAGE,IAAA,OAAO,EAAEtH,gBAHX;AAIE,IAAA,kBAAkB,EAAE6B,sBAJtB;AAKE,IAAA,cAAc,EAAEG,kBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG3B,cAAc,CAACE,GAAf,CAAoBC,IAAD,IAClByG,qBAAqB,CAACzG,IAAD,CADtB,CAPH,CADA,CAbF,EA0BGV,WAAW,CAACH,eAAZ,iBACC,oBAAC,aAAD;AACE,IAAA,QAAQ,2BAAE4B,iBAAiB,CAACzB,WAAW,CAACD,UAAb,CAAnB,0DAAE,sBAA2CsE,QADvD;AAEE,IAAA,iBAAiB,EAAE0B,iBAFrB;AAGE,IAAA,OAAO,EAAE/D,2BAHX;AAIE,IAAA,MAAM,EAAEtD,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CAxDF,eA4FE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEQ,UADR;AAEE,IAAA,gBAAgB,EAAE,KAFpB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KALH;AAME,IAAA,YAAY,EAAE;AAAEsI,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACbvI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,SAPH,CARF,CA5FF,CADF;AAiHD,CA5qBD;;AA8qBA,eAAehB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '../components/Grid';\nimport Plot from '../components/Plot';\nimport localStorage from '../services/LocalStorage';\nimport backend, { Fit, Legend } from '../services/Backend';\nimport utilities from '../services/Utilities';\nimport Filter, { FilterState, defaultConcept, Subgroup } from './Filter';\nimport Configuration, {\n  ControlsState,\n  DiagramType,\n  initialDiagramType,\n  Visit,\n  Datatype\n} from './Controls';\nimport { Figure } from 'react-plotly.js';\nimport { Datum } from 'plotly.js';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './Viewer.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\n// CONFIG\n\nexport const initialControls = {\n  identifier: '',\n  type: initialDiagramType,\n  attX: '',\n  attY: '',\n  attC: '',\n  dt: 0,\n  visit: Visit.all,\n  followup: 0,\n  tolerance: 0,\n  norm: false,\n  stack: false,\n  fit: Fit.none,\n  legend: Legend.legend,\n  bins: 0,\n};\n\n// PROPS\n\ninterface Props {}\n\n\n\nexport interface Attribute {\n  topic: string;\n  topicDescription: string;\n  umbrella: string;\n  umbrellaDescription: string;\n  attribute: string;\n  attributeDescription: string;\n  attributeTooltip: string;\n  datatype: string;\n  domain: string;\n  unit: string;\n}\n\nconst Viewer: React.FunctionComponent<Props> = props => {\n  // GET ATTRIBUTES METHODS\n\n  \n \n\n  const [attributes, setAttributes] = useState<Attribute[]>([]);\n  // PATIENTS and SUBGROUPS are added to attributes manually and have this values as datatype\n  \n  \n  const getTooltip = (attribute_: string): string => {\n      return attributes ? attributes.filter((attr: Attribute) => attr[\"attribute\"] === attribute_)[0][\"attributeTooltip\"] : \"\";\n  };\n  \n  const filter = (datatypes: Datatype[]): Attribute[] => {\n    return attributes.filter(\n      attribute =>\n        Object.values(datatypes).findIndex(\n          datatype => attribute.datatype === datatype,\n        ) !== -1,\n    );\n  };\n\n  // STATES\n\n  // errorState\n  const [errorState, setErrorState] = useState<boolean>();\n  const [errorText, setErrorText] = useState<string>('');\n\n  //\n\n\n  //const [loadingAttributes, setLoadingAttributes] = useState();\n\n  useEffect(()=>{\n    backend.getAttributes().then((response) =>{\n      console.log(response);\n      setAttributes(response.allAttributes);\n    });\n  }, []);\n\n  // viewerState\n  const initialViewerState = {\n    controlsVisible: false,\n    filtersVisible: true,\n    activePlot: '',\n  };\n  const [viewerState, setViewerState] =\n    useState<{\n      controlsVisible: boolean;\n      filtersVisible: boolean;\n      activePlot: string;\n    }>(initialViewerState);\n  const [gridLayoutsState, setGridLayoutsState] =\n    useState<ReactGridLayout.Layouts>(\n      localStorage.getObjectItem('grid.layouts') ?? {},\n    );\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState, viewerState]);\n\n  // gridLayoutsState\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState]);\n\n  // gridItemsState\n  const [gridItemsState, setGridItemsState] = useState<\n    ReactGridLayout.Layout[]\n  >(\n    (localStorage.getObjectItem('grid.items') ?? [])\n      // Workaround for bug in layout serialization - Infinity (and possibly others) gets saved as null\n      .map((item: ReactGridLayout.Layout) => {\n        return { ...item, y: item.y ?? Infinity };\n      }),\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('grid.items', gridItemsState);\n  }, [gridItemsState]);\n\n  // gridResponsiveState\n  const initialResponsiveState = { breakpoint: '', cols: 12 };\n  const [gridResponsiveState, setGridResponsiveState] = useState<{\n    breakpoint: string;\n    cols: number;\n  }>(initialResponsiveState);\n  useEffect(() => {\n    forceResize();\n  }, [gridResponsiveState]);\n\n  // filterState\n  const defaultFilterState: FilterState = {\n    concept: defaultConcept,\n    constraints: [],\n  };\n\n  const [filterState, setFilterState] = useState<FilterState>(\n    localStorage.getObjectItem('filter') ?? defaultFilterState,\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('filter', filterState);\n  }, [filterState]);\n\n  // subgroupsState\n  const [subgroupsState, setSubgroupsState] = useState<Subgroup[]>(\n    localStorage.getObjectItem('subgroups') ?? [],\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('subgroups', subgroupsState);\n  }, [subgroupsState]);\n\n  // plotControlsState\n  interface PlotControlsState {\n    [key: string]: { controls: ControlsState };\n  }\n\n  const [plotControlsState, setPlotControlsState] = useState<PlotControlsState>(\n    localStorage.getObjectItem('controls') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('controls', plotControlsState);\n  }, [plotControlsState]);\n\n  // plotsState\n  interface PlotState {\n    data: Plotly.Data[];\n    layout: Partial<Plotly.Layout>;\n  }\n  const [plotsState, setPlotsState] = useState<{ [key: string]: PlotState }>(\n    localStorage.getObjectItem('plots') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('plots', plotsState);\n  }, [plotsState]);\n\n  // updatingState\n  interface UpdatingState {\n    [key: string]: boolean;\n  }\n  const [updatingState, setUpdatingState] = useState<UpdatingState>({});\n\n  // HANDLERS\n\n  const onGridBreakpointChange = (breakpoint: string, cols: number) => {\n    setGridResponsiveState({\n      breakpoint: breakpoint,\n      cols: cols,\n    });\n  };\n\n  const onViewerConfigurationToggle = () => {\n    setViewerState({\n      ...viewerState,\n      controlsVisible: !viewerState.controlsVisible,\n    });\n  };\n\n  const onViewerFilterToggle = () => {\n    setViewerState({\n      ...viewerState,\n      filtersVisible: !viewerState.filtersVisible,\n    });\n  };\n\n  const onGridLayoutChange = (\n    layout: ReactGridLayout.Layout[],\n    layouts: ReactGridLayout.Layouts,\n  ) => {\n    setGridLayoutsState(layouts);\n  };\n\n  const onGridItemAdd = () => {\n    const identifier = utilities.generateIdentifier();\n    const newIdentifiers = [...Object.keys(plotsState), identifier];\n    backend\n      .sessionInit(newIdentifiers)\n      .then(() => {\n        setGridItemsState([...gridItemsState, createGridItem(identifier)]);\n        setPlotControlsState({\n          ...plotControlsState,\n          ...{ [identifier]: createInitialPlotControlsState(identifier) },\n        });\n        setPlotsState({\n          ...plotsState,\n          ...{ [identifier]: { data: [], layout: {} } },\n        });\n        setViewerState({\n          ...viewerState,\n          activePlot: identifier,\n          controlsVisible: true,\n        });\n        document.querySelector(\".scrollContainer\")?.scrollTo({\n          top: document.querySelector(\".scrollContainer\")?.scrollHeight,\n          behavior: 'smooth'\n        });\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemRemove = (identifier: string) => {\n    const newPlotsState = { ...plotsState };\n    delete newPlotsState[identifier];\n    backend\n      .sessionInit(Object.keys(newPlotsState))\n      .then(() => {\n        setGridItemsState(\n          gridItemsState.filter(\n            (item: ReactGridLayout.Layout) => item.i !== identifier,\n          ),\n        );\n        setPlotsState(newPlotsState);\n        const newPlotControlsState = { ...plotControlsState };\n        delete newPlotControlsState[identifier];\n        setPlotControlsState(newPlotControlsState);\n        if (viewerState.activePlot === identifier) {\n          setViewerState({\n            ...viewerState,\n            activePlot: '',\n            controlsVisible: false,\n          });\n        }\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemEdit = (identifier: string) => {\n    setViewerState({\n      ...viewerState,\n      activePlot: identifier,\n      controlsVisible: true,\n    });\n  };\n\n  const onReset = () => {\n    backend\n      .sessionReset()\n      .then(() => {\n        setViewerState(initialViewerState);\n        setGridResponsiveState(initialResponsiveState);\n        localStorage.setObjectItem('grid.layouts', {});\n        setGridLayoutsState({});\n        localStorage.setObjectItem('grid.items', []);\n        setGridItemsState([]);\n        localStorage.setObjectItem('filter', defaultFilterState);\n        setFilterState(defaultFilterState);\n        localStorage.setObjectItem('controls', {});\n        setPlotControlsState({});\n        localStorage.setObjectItem('plots', {});\n        setPlotsState({});\n        localStorage.setObjectItem('subgroups', []);\n        setSubgroupsState([]);\n        \n      })\n      .catch(handleError);\n  };\n\n  const onPlotSelected = (\n    identifier: string,\n    range: Plotly.SelectionRange | undefined,\n    items: Datum[],\n  ) => {\n    if (!range) {\n      return;\n    }\n\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      constraints: [...filterState.constraints],\n    };\n    // Update/add x-constraint\n    if (\n      [\n        DiagramType.Scatter,\n        DiagramType.Histogram,\n        DiagramType.Timeline,\n      ].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: range.x[0],\n        upper: range.x[1],\n        items: [],\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n    // Update/add y-constraint\n    if (\n      [DiagramType.Scatter, DiagramType.Timeline].includes(\n        plotControlsState[identifier].controls.type,\n      )\n    ) {\n      const newYConstraint = {\n        attribute: plotControlsState[identifier].controls.attY,\n        lower: range.y[0],\n        upper: range.y[1],\n        items: [],\n      };\n      const constraintYIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attY,\n      );\n      if (constraintYIndex > -1) {\n        newFilterState.constraints[constraintYIndex] = newYConstraint;\n      } else {\n        newFilterState.constraints.push(newYConstraint);\n      }\n    }\n    // Update/add discrete constraint\n    if (\n      [DiagramType.Bar].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: null,\n        upper: null,\n        items: items,\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onFilterChanged = (filters: Partial<FilterState>) => {\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      ...filters,\n    };\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDefine = (subgroup: Subgroup) => {\n    backend\n      .subgroupDefine(subgroup.name)\n      .then(() => {\n        setSubgroupsState([\n          ...subgroupsState.filter(\n            _subgroup => _subgroup.name !== subgroup.name,\n          ),\n          subgroup,\n        ]);\n\n\n        \n        \n\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDelete = (name: string) => {\n    //alert('Not yet implemented in backend.');\n    backend.subgroupDelete(name).then(response =>{\n      setSubgroupsState([\n        ...subgroupsState.filter(subgroup => subgroup.name !== name),\n      ]);\n    });\n    \n  };\n  const onSubgroupActivate = (name: string) => {\n    const subgroup = subgroupsState.find(subgroup => subgroup.name === name);\n    //console.log(subgroup);\n    onFilterChanged({\n      ...filterState,\n      constraints: subgroup?.constraints,\n    });\n  };\n\n  const onControlsChanged = (\n    identifier: string,\n    controls: Partial<ControlsState>,\n  ) => {\n    setUpdating(identifier);\n    const newControls: ControlsState = {\n      ...plotControlsState[identifier].controls,\n      ...controls,\n    };\n    const newPlotControls = {\n      ...plotControlsState,\n      ...{\n        [identifier]: {\n          ...plotsState[identifier],\n          controls: newControls,\n        },\n      },\n    };\n    //console.log()\n    setPlotControlsState(newPlotControls);\n    utilities.devLog('new controls:', newControls);\n    backend\n      .controlsUpdate(newPlotControls[identifier].controls)\n      .then((figure: Partial<Figure>) => {\n        handleControlsUpdateResponse(identifier, figure);\n      })\n      .catch(handleError);\n  };\n\n  // HELPER (see first part above)\n\n  const handleError = (error: any) => {\n    console.log(error);\n    try {\n      setErrorText(`${error.toJSON().name}: ${error.toJSON().message}`);\n    } catch (e) {\n      setErrorText('ERROR: unknown');\n    }\n\n    setErrorState(true);\n    const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = false;\n      });\n      setUpdatingState(newState);\n  };\n\n  const handleControlsUpdateResponse = (\n    identifier: string,\n    figure: Partial<Figure>,\n  ) => {\n    setPlotsState({\n      ...plotsState,\n      [identifier]: {\n        ...plotsState[identifier],\n        data: figure.data || [],\n        layout: figure.layout || {},\n      },\n    });\n    utilities.devLog(identifier, 'done');\n    setUpdatingState({\n      ...updatingState,\n      [identifier]: false,\n    });\n  };\n\n  const handleFilterUpdateResponse = (figures: {\n    [key: string]: Partial<Figure>;\n  }) => {\n    const identifiers = Object.keys(figures);\n    const newPlotsState = { ...plotsState };\n    const newUpdatingState = { ...updatingState };\n    identifiers.forEach(identifier => {\n      newPlotsState[identifier] = {\n        data: figures[identifier].data || [],\n        layout: figures[identifier].layout || {},\n      };\n      newUpdatingState[identifier] = false;\n    });\n    setPlotsState(newPlotsState);\n    setUpdatingState(newUpdatingState);\n  };\n\n  const forceResize = () => {\n    // Workaround to trigger plot resize\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const createGridItem = (identifier: string): ReactGridLayout.Layout => {\n    return {\n      i: identifier,\n      x: (gridItemsState.length * 5) % gridResponsiveState.cols,\n      y: Infinity,\n      w: 5,\n      h: 4,\n    };\n  };\n\n  const createInitialPlotControlsState = (\n    identifier: string,\n  ): { controls: ControlsState } => {\n    return { controls: { ...initialControls, identifier } };\n  };\n\n  const setUpdating = (identifier?: string) => {\n    if (identifier) {\n      setUpdatingState({\n        ...updatingState,\n        [identifier]: true,\n      });\n    } else {\n      const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = true;\n      });\n      setUpdatingState(newState);\n    }\n  };\n\n  // RENDER\n\n  const createGridItemElement = (item: ReactGridLayout.Layout) => {\n    return (\n      <Card\n        key={item.i}\n        data-grid={item}\n        className={`grid__item ${\n          viewerState.activePlot === item.i ? ' grid__item--active' : ''\n        }`}\n        onClick={() => {\n          onGridItemEdit(item.i);\n        }}\n      >\n        <div className=\"grid__item-header grid--draggable\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"edit\"\n            \n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              onGridItemRemove(item.i);\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div className=\"grid__item-loader\">\n          {updatingState[item.i] && <LinearProgress />}\n        </div>\n        <CardContent className=\"grid__item-content\">\n          <Plot\n            identifier={item.i}\n            data={plotsState[item.i]?.data}\n            layout={plotsState[item.i]?.layout}\n            onSelected={onPlotSelected}\n          />\n        </CardContent>\n      </Card>\n    );\n  };\n  if (!(attributes && attributes.length)) return null;\n  return (\n    <div className=\"container\">\n      <div className=\"toolbar\">\n        <div className=\"toolbar__left\">\n          <Button\n            onClick={onGridItemAdd}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            title=\"Add new diagram\"\n          >\n            Add\n          </Button>\n\n          <Button\n            onClick={forceResize}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AspectRatioIcon />}\n            title=\"Force resize\"\n          >\n            Resize\n          </Button>\n\n          <Button\n            onClick={onReset}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<ReplayIcon />}\n            title=\"Reset session\"\n          >\n            Reset session\n          </Button>\n        </div>\n\n        <div className=\"toolbar__right\">\n          <Button\n            onClick={onViewerConfigurationToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SettingsIcon />}\n            title=\"Toggle configuration panel\"\n          >\n            Configuration\n          </Button>\n\n          <Button\n            onClick={onViewerFilterToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FilterListIcon />}\n            title=\"Toggle filter panel\"\n          >\n            Filter\n          </Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {viewerState.filtersVisible && (\n          <Filter\n            filter={filterState}\n            subgroups={subgroupsState}\n            onFilterChanged={onFilterChanged}\n            onSubgroupDefine={onSubgroupDefine}\n            onSubgroupDelete={onSubgroupDelete}\n            onSubgroupActivate={onSubgroupActivate}\n            onClose={onViewerFilterToggle}\n            getTooltip = {getTooltip}\n          />\n        )}\n        <div className=\"scrollContainer\">\n        <Grid\n          breakpointCols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n          rowHeight={100}\n          layouts={gridLayoutsState}\n          onBreakpointChange={onGridBreakpointChange}\n          onLayoutChange={onGridLayoutChange}\n        >\n          {gridItemsState.map((item: ReactGridLayout.Layout) =>\n            createGridItemElement(item),\n          )}\n        </Grid>\n        </div>\n        {viewerState.controlsVisible && (\n          <Configuration\n            controls={plotControlsState[viewerState.activePlot]?.controls}\n            onControlsChanged={onControlsChanged}\n            onClose={onViewerConfigurationToggle}\n            filter={filter}\n          />\n        )}\n      </div>\n\n      <Snackbar\n        open={errorState}\n        autoHideDuration={10000}\n        onClose={() => {\n          setErrorState(false);\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert\n          variant=\"filled\"\n          severity=\"error\"\n          onClose={() => {\n            setErrorState(false);\n          }}\n        >\n          {errorText}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Viewer;\n"]},"metadata":{},"sourceType":"module"}