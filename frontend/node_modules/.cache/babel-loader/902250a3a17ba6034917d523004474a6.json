{"ast":null,"code":"import _objectSpread from\"/idsn/git/July_22/PostIDSN-Viewer/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import Plotly from'react-plotly.js';var Plot=function Plot(props){return/*#__PURE__*/React.createElement(Plotly,{data:props.data,layout:_objectSpread(_objectSpread({},props.layout),{},{autosize:true}),config:{modeBarButtonsToRemove:['lasso2d']},useResizeHandler:true,onSelected:function onSelected(data){var pointXValuesWithDuplicates=data.points.map(function(point){return point.x;});var pointXValues=pointXValuesWithDuplicates.filter(function(x,i,a){return a.indexOf(x)===i;});props.onSelected(props.identifier,data.range,pointXValues);}});};export default Plot;","map":{"version":3,"sources":["/idsn/git/July_22/PostIDSN-Viewer/src/components/Plot.tsx"],"names":["React","Plotly","Plot","props","data","layout","autosize","modeBarButtonsToRemove","pointXValuesWithDuplicates","points","map","point","x","pointXValues","filter","i","a","indexOf","onSelected","identifier","range"],"mappings":"mHACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CAaA,GAAMC,CAAAA,IAAoC,CAAG,QAAvCA,CAAAA,IAAuC,CAAAC,KAAK,CAAI,CACpD,mBACE,oBAAC,MAAD,EACE,IAAI,CAAEA,KAAK,CAACC,IADd,CAEE,MAAM,gCAAOD,KAAK,CAACE,MAAb,MAAqBC,QAAQ,CAAE,IAA/B,EAFR,CAGE,MAAM,CAAE,CACNC,sBAAsB,CAAE,CAAC,SAAD,CADlB,CAHV,CAME,gBAAgB,CAAE,IANpB,CAOE,UAAU,CAAE,oBAACH,IAAD,CAA8B,CACxC,GAAMI,CAAAA,0BAA0B,CAAGJ,IAAI,CAACK,MAAL,CAAYC,GAAZ,CAAgB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,CAAV,EAArB,CAAnC,CACA,GAAMC,CAAAA,YAAY,CAAGL,0BAA0B,CAACM,MAA3B,CACnB,SAACF,CAAD,CAAIG,CAAJ,CAAOC,CAAP,QAAaA,CAAAA,CAAC,CAACC,OAAF,CAAUL,CAAV,IAAiBG,CAA9B,EADmB,CAArB,CAGAZ,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACgB,UAAvB,CAAmCf,IAAI,CAACgB,KAAxC,CAA+CP,YAA/C,EACD,CAbH,EADF,CAiBD,CAlBD,CAoBA,cAAeX,CAAAA,IAAf","sourcesContent":["import { Datum, PlotSelectionEvent } from 'plotly.js';\nimport React from 'react';\nimport Plotly from 'react-plotly.js';\n\ninterface Props {\n  identifier: string;\n  data: Plotly.Data[];\n  layout: Partial<Plotly.Layout>;\n  onSelected: (\n    identifier: string,\n    range: Plotly.SelectionRange | undefined,\n    items: Datum[],\n  ) => void;\n}\n\nconst Plot: React.FunctionComponent<Props> = props => {\n  return (\n    <Plotly\n      data={props.data}\n      layout={{ ...props.layout, autosize: true }}\n      config={{\n        modeBarButtonsToRemove: ['lasso2d'],\n      }}\n      useResizeHandler={true}\n      onSelected={(data: PlotSelectionEvent) => {\n        const pointXValuesWithDuplicates = data.points.map(point => point.x);\n        const pointXValues = pointXValuesWithDuplicates.filter(\n          (x, i, a) => a.indexOf(x) === i,\n        );\n        props.onSelected(props.identifier, data.range, pointXValues);\n      }}\n    />\n  );\n};\n\nexport default Plot;\n"]},"metadata":{},"sourceType":"module"}