{"ast":null,"code":"import _objectSpread from\"/idsn/git/July_22/PostIDSN-Viewer/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import localStorage from'../services/LocalStorage';import utilities from'../services/Utilities';import _axios from'axios';var token;var axios=_axios.create({withCredentials:true});// HELPER\nvar parseFigure=function parseFigure(input){var _figure$data;var figure=JSON.parse(input);return _objectSpread(_objectSpread({},figure),{},{data:(_figure$data=figure.data)===null||_figure$data===void 0?void 0:_figure$data.map(function(fd){return _objectSpread(_objectSpread({},fd),{},{// use scatter plot WebGL variant to improve performance\ntype:fd.type==='scatter'?'scattergl':fd.type});})});};// SESSION INIT\n// @TODO define SessionInitReturn\nvar sessionInit=function sessionInit(){var identifiers=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var requestBody={usertoken:token,plot_ids:identifiers};return axios.post(\"\".concat(api_url,\"/init\"),requestBody).then(function(response){return response.data;});};// SESSION RESET\n// @TODO define SessionResetReturn\nvar sessionReset=function sessionReset(){var requestBody={usertoken:token};return axios.post(\"\".concat(api_url,\"/reset-session\"),requestBody).then(function(response){return response.data;});};// CONTROLS UPDATE\nexport var Legend;(function(Legend){Legend[\"none\"]=\"none\";Legend[\"legend\"]=\"legend\";})(Legend||(Legend={}));export var Fit;(function(Fit){Fit[\"none\"]=\"none\";Fit[\"regression\"]=\"regression\";})(Fit||(Fit={}));var Stack;(function(Stack){Stack[\"stack\"]=\"stack\";})(Stack||(Stack={}));var Norm;(function(Norm){Norm[\"norm\"]=\"norm\";})(Norm||(Norm={}));var controlsUpdate=function controlsUpdate(controlsState){var requestBody={usertoken:token,controls:{plot:controlsState.identifier,type:controlsState.type,attX:controlsState.attX,attY:controlsState.attY,attC:controlsState.attC,Dt:controlsState.dt,visit:controlsState.visit,followup:controlsState.followup,tolerance:controlsState.tolerance,bins:controlsState.bins,norm:controlsState.norm?[Norm.norm]:[],stack:controlsState.stack?[Stack.stack]:[],fit:[controlsState.fit],legend:[controlsState.legend]}};return axios.post(\"\".concat(api_url,\"/getdata\"),requestBody).then(function(responseRaw){return parseFigure(responseRaw.data.figure);});};// FILTER UPDATE\nvar filterUpdate=function filterUpdate(filterState){var requestBody={usertoken:token,concept:filterState.concept,filter_table:filterState.constraints.map(function(constraint){return{attribute:constraint.attribute,lower:constraint.lower,upper:constraint.upper,list:constraint.items.length>0?constraint.items:null};})// @TODO @API rename this to constraints\n};return axios.post(\"\".concat(api_url,\"/update-filter\"),requestBody).then(function(response){var result={};Object.keys(response.data.plots).forEach(function(identifier){result[identifier]=parseFigure(response.data.plots[identifier].figure);});return result;});};// SUBGROUP DEFINE\nvar subgroupDefine=function subgroupDefine(name){var requestBody={usertoken:token,name:name};return axios.post(\"\".concat(api_url,\"/subgroup-define\"),requestBody).then(function(response){return null;});};// SUBGROUP DELETE\nvar subgroupDelete=function subgroupDelete(name){var requestBody={usertoken:token,name:name};return axios.post(\"\".concat(api_url,\"/subgroup-delete\"),requestBody).then(function(response){return null;});};// GET ALL ATTRIBUTES\nvar getAttributes=function getAttributes(){return axios.get(\"\".concat(api_url,\"/get-all-attributes\"));};// TOKEN\nvar api_url=process.env.REACT_APP_API_URL;var getToken=function getToken(){var token=localStorage.getStringItem('token');if(!token){token=utilities.generateIdentifier();localStorage.setStringItem('token',token);sessionInit();// @TODO do we need to wait until ready?\n}return token;};token=getToken();export default{sessionInit:sessionInit,sessionReset:sessionReset,controlsUpdate:controlsUpdate,filterUpdate:filterUpdate,subgroupDefine:subgroupDefine,subgroupDelete:subgroupDelete,getAttributes:getAttributes};","map":{"version":3,"sources":["/idsn/git/July_22/PostIDSN-Viewer/src/services/Backend.ts"],"names":["localStorage","utilities","_axios","token","axios","create","withCredentials","parseFigure","input","figure","JSON","parse","data","map","fd","type","sessionInit","identifiers","requestBody","usertoken","plot_ids","post","api_url","then","response","sessionReset","Legend","Fit","Stack","Norm","controlsUpdate","controlsState","controls","plot","identifier","attX","attY","attC","Dt","dt","visit","followup","tolerance","bins","norm","stack","fit","legend","responseRaw","filterUpdate","filterState","concept","filter_table","constraints","constraint","attribute","lower","upper","list","items","length","result","Object","keys","plots","forEach","subgroupDefine","name","subgroupDelete","getAttributes","get","process","env","REACT_APP_API_URL","getToken","getStringItem","generateIdentifier","setStringItem"],"mappings":"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","sourcesContent":["import { Figure } from 'react-plotly.js';\nimport { FilterState, Concept } from '../containers/Filter';\nimport localStorage from '../services/LocalStorage';\nimport utilities from '../services/Utilities';\nimport { DiagramType, Visit, ControlsState } from './../containers/Controls';\nimport _axios from 'axios';\nimport { Datum } from 'plotly.js';\n\nlet token: string;\n\nconst axios = _axios.create({\n  withCredentials: true\n});\n\n// HELPER\n\nconst parseFigure = (input: string): Partial<Figure> => {\n  const figure = JSON.parse(input);\n  return {\n    ...figure,\n    data: figure.data?.map((fd: any) => {\n      return {\n        ...fd,\n        // use scatter plot WebGL variant to improve performance\n        type: fd.type === 'scatter' ? 'scattergl' : fd.type,\n      };\n    }),\n  };\n};\n\n// SESSION INIT\n\ninterface SessionInitRequest {\n  usertoken: string;\n  plot_ids: string[];\n}\n\ntype SessionInitResponse = any; // @TODO define SessionInitResponse\n\ntype SessionInitReturn = any; // @TODO define SessionInitReturn\n\nconst sessionInit = (\n  identifiers: string[] = []\n): Promise<SessionInitReturn> => {\n  const requestBody: SessionInitRequest = {\n    usertoken: token,\n    plot_ids: identifiers,\n  };\n  return axios\n    .post(`${api_url}/init`, requestBody)\n    .then((response: SessionInitResponse) => response.data);\n};\n\n// SESSION RESET\n\ninterface SessionResetRequest {\n  usertoken: string;\n}\n\ntype SessionResetResponse = any; // @TODO define SessionResetResponse\n\ntype SessionResetReturn = any; // @TODO define SessionResetReturn\n\nconst sessionReset = (): Promise<SessionResetReturn> => {\n  const requestBody: SessionResetRequest = {\n    usertoken: token,\n  };\n  return axios\n    .post(`${api_url}/reset-session`, requestBody)\n    .then((response: SessionResetResponse) => response.data);\n};\n\n// CONTROLS UPDATE\n\nexport enum Legend {\n  none = 'none',\n  legend = 'legend',\n  // @TODO add more legend values here\n}\n\nexport enum Fit {\n  none = 'none',\n  regression = 'regression',\n  // @TODO add more fit values here\n}\n\nenum Stack {\n  stack = 'stack',\n}\n\nenum Norm {\n  norm = 'norm',\n}\n\ninterface ControlsUpdateRequest {\n  usertoken: string;\n  controls: {\n    plot: string;\n    type: DiagramType;\n    attX: string;\n    attY: string;\n    attC: string;\n    Dt: number | null;\n    visit: Visit;\n    followup: number;\n    tolerance: number;\n    bins: number;\n    norm: Norm[];\n    stack: Stack[];\n    fit: Fit[];\n    legend: Legend[];\n  };\n}\n\ntype ControlsUpdateResponse = any; // @TODO define ControlsUpdateResponse\n\ntype ControlsUpdateReturn = Partial<Figure>;\n\nconst controlsUpdate = (\n  controlsState: ControlsState\n): Promise<ControlsUpdateReturn> => {\n  const requestBody: ControlsUpdateRequest = {\n    usertoken: token,\n    controls: {\n      plot: controlsState.identifier,\n      type: controlsState.type,\n      attX: controlsState.attX,\n      attY: controlsState.attY,\n      attC: controlsState.attC,\n      Dt: controlsState.dt,\n      visit: controlsState.visit,\n      followup: controlsState.followup,\n      tolerance: controlsState.tolerance,\n      bins: controlsState.bins,\n      norm: controlsState.norm ? [Norm.norm] : [],\n      stack: controlsState.stack ? [Stack.stack] : [],\n      fit: [controlsState.fit] ,\n      legend: [controlsState.legend] , \n    },\n  };\n  return axios\n    .post(`${api_url}/getdata`, requestBody)\n    .then((responseRaw: ControlsUpdateResponse) => {\n      return parseFigure(responseRaw.data.figure);\n    });\n};\n\n// FILTER UPDATE\n\ninterface FilterUpdateRequest {\n  usertoken: string;\n  concept: Concept;\n  filter_table: {\n    // @TODO @API rename this to constraints\n    attribute: string;\n    lower: number | null;\n    upper: number | null;\n    list: Datum[] | null;\n    // set: [], // @TODO @API is filter-edit.filter_table.set required?\n    // human_readable: string // @TODO @API is filter-edit.filter_table.human_readable required?\n  }[];\n}\n\ntype FilterUpdateResponse = any; // @TODO define FiltersUpdateResponse\n\nexport type FilterUpdateReturn = { [key: string]: Partial<Figure> };\n\nconst filterUpdate = (\n  filterState: FilterState\n): Promise<FilterUpdateReturn> => {\n  const requestBody: FilterUpdateRequest = {\n    usertoken: token,\n    concept: filterState.concept,\n    filter_table: filterState.constraints.map((constraint) => {\n      return {\n        attribute: constraint.attribute,\n        lower: constraint.lower,\n        upper: constraint.upper,\n        list: constraint.items.length > 0 ? constraint.items : null,\n      };\n    }), // @TODO @API rename this to constraints\n  };\n  return axios\n    .post(`${api_url}/update-filter`, requestBody)\n    .then((response) => {\n      const result: { [key: string]: Partial<Figure> } = {};\n      Object.keys(response.data.plots).forEach((identifier) => {\n        result[identifier] = parseFigure(\n          response.data.plots[identifier].figure\n        );\n      });\n      return result;\n    });\n};\n\n// SUBGROUP DEFINE\n\ninterface SubgroupDefineRequest {\n  usertoken: string;\n  name: string;\n}\n\ntype SubgroupDefineResponse = any; // @TODO define SubgroupDefineResponse\n\ntype SubgroupDefineReturn = null;\n\nconst subgroupDefine = (name: string): Promise<SubgroupDefineReturn> => {\n  const requestBody: SubgroupDefineRequest = {\n    usertoken: token,\n    name: name,\n  };\n  return axios\n    .post(`${api_url}/subgroup-define`, requestBody)\n    .then((response: SubgroupDefineResponse) => null);\n};\n\n// SUBGROUP DELETE\n\ninterface SubgroupDeeleteRequest {\n  usertoken: string;\n  name: string;\n}\n\nconst subgroupDelete = (name: string): Promise<any> => {\n  const requestBody: SubgroupDefineRequest = {\n    usertoken: token,\n    name: name,\n  };\n  return axios\n    .post(`${api_url}/subgroup-delete`, requestBody)\n    .then((response: any) => null);\n};\n\n// GET ALL ATTRIBUTES\n\nconst getAttributes = (): Promise<any> =>{\n  return axios.get(`${api_url}/get-all-attributes`);\n}\n\n\n// TOKEN\n\nconst api_url = process.env.REACT_APP_API_URL;\n\nconst getToken = () => {\n  let token = localStorage.getStringItem('token');\n  if (!token) {\n    token = utilities.generateIdentifier();\n    localStorage.setStringItem('token', token);\n    sessionInit(); // @TODO do we need to wait until ready?\n  }\n  return token;\n};\n\ntoken = getToken();\n\nexport default {\n  sessionInit,\n  sessionReset,\n  controlsUpdate,\n  filterUpdate,\n  subgroupDefine,\n  subgroupDelete,\n  getAttributes\n};\n"]},"metadata":{},"sourceType":"module"}