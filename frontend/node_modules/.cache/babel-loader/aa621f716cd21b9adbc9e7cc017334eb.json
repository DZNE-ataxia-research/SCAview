{"ast":null,"code":"var setStringItem=function setStringItem(key,item){if(localStorage){localStorage.setItem(key,item);}};var setObjectItem=function setObjectItem(key,item){setStringItem(key,JSON.stringify(item));};var getStringItem=function getStringItem(key){if(localStorage){return localStorage.getItem(key);}else{return null;}};var getObjectItem=function getObjectItem(key){var value=getStringItem(key);if(value){return JSON.parse(value);}else{return value;}};var removeItem=function removeItem(key){if(localStorage){localStorage.removeItem(key);}};export default{setStringItem:setStringItem,setObjectItem:setObjectItem,getStringItem:getStringItem,getObjectItem:getObjectItem,removeItem:removeItem};","map":{"version":3,"sources":["/idsn/git/July_22/PostIDSN-Viewer/src/services/LocalStorage.ts"],"names":["setStringItem","key","item","localStorage","setItem","setObjectItem","JSON","stringify","getStringItem","getItem","getObjectItem","value","parse","removeItem"],"mappings":"AAAA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAcC,IAAd,CAA+B,CACnD,GAAIC,YAAJ,CAAkB,CAChBA,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAA0BC,IAA1B,EACD,CACF,CAJD,CAMA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACJ,GAAD,CAAcC,IAAd,CAA4B,CAChDF,aAAa,CAACC,GAAD,CAAMK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAN,CAAb,CACD,CAFD,CAIA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACP,GAAD,CAAgC,CACpD,GAAIE,YAAJ,CAAkB,CAChB,MAAOA,CAAAA,YAAY,CAACM,OAAb,CAAqBR,GAArB,CAAP,CACD,CAFD,IAEO,CACL,MAAO,KAAP,CACD,CACF,CAND,CAQA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACT,GAAD,CAA6B,CACjD,GAAMU,CAAAA,KAAK,CAAGH,aAAa,CAACP,GAAD,CAA3B,CACA,GAAIU,KAAJ,CAAW,CACT,MAAOL,CAAAA,IAAI,CAACM,KAAL,CAAWD,KAAX,CAAP,CACD,CAFD,IAEO,CACL,MAAOA,CAAAA,KAAP,CACD,CACF,CAPD,CASA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACZ,GAAD,CAAiB,CAClC,GAAIE,YAAJ,CAAkB,CAChBA,YAAY,CAACU,UAAb,CAAwBZ,GAAxB,EACD,CACF,CAJD,CAMA,cAAe,CACbD,aAAa,CAAbA,aADa,CAEbK,aAAa,CAAbA,aAFa,CAGbG,aAAa,CAAbA,aAHa,CAIbE,aAAa,CAAbA,aAJa,CAKbG,UAAU,CAAVA,UALa,CAAf","sourcesContent":["const setStringItem = (key: string, item: string) => {\n  if (localStorage) {\n    localStorage.setItem(key, item);\n  }\n};\n\nconst setObjectItem = (key: string, item: any) => {\n  setStringItem(key, JSON.stringify(item));\n};\n\nconst getStringItem = (key: string): string | null => {\n  if (localStorage) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n};\n\nconst getObjectItem = (key: string): any | null => {\n  const value = getStringItem(key);\n  if (value) {\n    return JSON.parse(value);\n  } else {\n    return value;\n  }\n};\n\nconst removeItem = (key: string) => {\n  if (localStorage) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport default {\n  setStringItem,\n  setObjectItem,\n  getStringItem,\n  getObjectItem,\n  removeItem,\n};\n"]},"metadata":{},"sourceType":"module"}