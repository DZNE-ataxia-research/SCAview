{"ast":null,"code":"import _slicedToArray from\"/idsn/git/July_22/PostIDSN-Viewer/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/idsn/git/July_22/PostIDSN-Viewer/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _DiagramType$Scatter,_DiagramType$Histogra,_DiagramType$Bar,_DiagramType$Timeline,_diagramControlParame;import React,{useState}from'react';import'./Controls.css';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import Select from'@material-ui/core/Select';import FormControlLabel from'@material-ui/core/FormControlLabel';import Switch from'@material-ui/core/Switch';import Slider from'@material-ui/core/Slider';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import Card from'@material-ui/core/Card';import CardContent from'@material-ui/core/CardContent';import IconButton from'@material-ui/core/IconButton';import CardHeader from'@material-ui/core/CardHeader';//import * as Attributes from '../services/Attributes_old';\nimport{Fit,Legend}from'../services/Backend';import CloseIcon from'@material-ui/icons/Close';import FormControl from'@material-ui/core/FormControl';import Autocomplete from'@material-ui/lab/Autocomplete';import Alert from'@material-ui/lab/Alert';// STRUCTURES\nexport var DiagramType;(function(DiagramType){DiagramType[DiagramType[\"Scatter\"]=1]=\"Scatter\";DiagramType[DiagramType[\"Histogram\"]=2]=\"Histogram\";DiagramType[DiagramType[\"Bar\"]=3]=\"Bar\";DiagramType[DiagramType[\"Timeline\"]=4]=\"Timeline\";})(DiagramType||(DiagramType={}));export var Datatype;(function(Datatype){Datatype[\"date\"]=\"date\";Datatype[\"int\"]=\"int\";Datatype[\"float\"]=\"float\";Datatype[\"code\"]=\"code\";Datatype[\"subgroups\"]=\"SUBGROUPS\";Datatype[\"patients\"]=\"PATIENTS\";})(Datatype||(Datatype={}));var Control;(function(Control){Control[Control[\"attX\"]=0]=\"attX\";Control[Control[\"attY\"]=1]=\"attY\";Control[Control[\"attC\"]=2]=\"attC\";Control[Control[\"dt\"]=3]=\"dt\";Control[Control[\"visit\"]=4]=\"visit\";Control[Control[\"followup\"]=5]=\"followup\";Control[Control[\"tolerance\"]=6]=\"tolerance\";Control[Control[\"fit\"]=7]=\"fit\";Control[Control[\"norm\"]=8]=\"norm\";Control[Control[\"stack\"]=9]=\"stack\";Control[Control[\"legend\"]=10]=\"legend\";Control[Control[\"bins\"]=11]=\"bins\";})(Control||(Control={}));export var Visit;// CONFIG\n(function(Visit){Visit[\"all\"]=\"ALL\";Visit[\"baseline\"]=\"BASELINE\";Visit[\"follow\"]=\"FOLLOW\";})(Visit||(Visit={}));var diagramTypeOptions=[{label:'Scatter',value:DiagramType.Scatter},{label:'Histogram',value:DiagramType.Histogram},{label:'Bar',value:DiagramType.Bar},{label:'Timeline',value:DiagramType.Timeline}];var visitOptions=[{label:'All visits',value:Visit.all},{label:'First visit',value:Visit.baseline},{label:'Follow-up visits',value:Visit.follow}];var diagramControlParameters=(_diagramControlParame={},_defineProperty(_diagramControlParame,DiagramType.Scatter,(_DiagramType$Scatter={},_defineProperty(_DiagramType$Scatter,Control.attX,{visible:true,datatypes:[Datatype.float,Datatype.int]}),_defineProperty(_DiagramType$Scatter,Control.attY,{visible:true,datatypes:[Datatype.float,Datatype.int]}),_defineProperty(_DiagramType$Scatter,Control.attC,{visible:true,datatypes:[Datatype.subgroups,Datatype.patients,Datatype.float,Datatype.int,Datatype.code]}),_defineProperty(_DiagramType$Scatter,Control.dt,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.visit,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.followup,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.tolerance,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.fit,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.norm,{visible:false}),_defineProperty(_DiagramType$Scatter,Control.stack,{visible:false}),_defineProperty(_DiagramType$Scatter,Control.legend,{visible:true}),_defineProperty(_DiagramType$Scatter,Control.bins,{visible:false}),_DiagramType$Scatter)),_defineProperty(_diagramControlParame,DiagramType.Histogram,(_DiagramType$Histogra={},_defineProperty(_DiagramType$Histogra,Control.attX,{visible:true,datatypes:[Datatype.float,Datatype.int]}),_defineProperty(_DiagramType$Histogra,Control.attY,{visible:false,datatypes:[]}),_defineProperty(_DiagramType$Histogra,Control.attC,{visible:true,datatypes:[Datatype.subgroups,Datatype.patients,Datatype.code]}),_defineProperty(_DiagramType$Histogra,Control.dt,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.visit,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.followup,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.tolerance,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.fit,{visible:false}),_defineProperty(_DiagramType$Histogra,Control.norm,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.stack,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.legend,{visible:true}),_defineProperty(_DiagramType$Histogra,Control.bins,{visible:true}),_DiagramType$Histogra)),_defineProperty(_diagramControlParame,DiagramType.Bar,(_DiagramType$Bar={},_defineProperty(_DiagramType$Bar,Control.attX,{visible:true,datatypes:[Datatype.subgroups,Datatype.patients,Datatype.code]}),_defineProperty(_DiagramType$Bar,Control.attY,{visible:false,datatypes:[]}),_defineProperty(_DiagramType$Bar,Control.attC,{visible:true,datatypes:[Datatype.subgroups,Datatype.patients,Datatype.code]}),_defineProperty(_DiagramType$Bar,Control.dt,{visible:true}),_defineProperty(_DiagramType$Bar,Control.visit,{visible:true}),_defineProperty(_DiagramType$Bar,Control.followup,{visible:true}),_defineProperty(_DiagramType$Bar,Control.tolerance,{visible:true}),_defineProperty(_DiagramType$Bar,Control.fit,{visible:false}),_defineProperty(_DiagramType$Bar,Control.norm,{visible:true}),_defineProperty(_DiagramType$Bar,Control.stack,{visible:true}),_defineProperty(_DiagramType$Bar,Control.legend,{visible:true}),_defineProperty(_DiagramType$Bar,Control.bins,{visible:false}),_DiagramType$Bar)),_defineProperty(_diagramControlParame,DiagramType.Timeline,(_DiagramType$Timeline={},_defineProperty(_DiagramType$Timeline,Control.attX,{visible:true,datatypes:[Datatype.date]}),_defineProperty(_DiagramType$Timeline,Control.attY,{visible:true,datatypes:[Datatype.float,Datatype.int]}),_defineProperty(_DiagramType$Timeline,Control.attC,{visible:true,datatypes:[Datatype.float,Datatype.int]}),_defineProperty(_DiagramType$Timeline,Control.dt,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.visit,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.followup,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.tolerance,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.fit,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.norm,{visible:false}),_defineProperty(_DiagramType$Timeline,Control.stack,{visible:false}),_defineProperty(_DiagramType$Timeline,Control.legend,{visible:true}),_defineProperty(_DiagramType$Timeline,Control.bins,{visible:false}),_DiagramType$Timeline)),_diagramControlParame);export var initialDiagramType=DiagramType.Scatter;// PROPS\nvar Controls=function Controls(props){React.useEffect(function(){onPropsChanged();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[props]);// HELPER (see second part below)\nvar filterItems=function filterItems(datatypes){return props.filter(datatypes);};// STATES\n// dataState\nvar initialDataState={diagramType:initialDiagramType,diagramControlParameter:diagramControlParameters[initialDiagramType],attXData:filterItems(diagramControlParameters[initialDiagramType][Control.attX].datatypes||[]),attYData:filterItems(diagramControlParameters[initialDiagramType][Control.attY].datatypes||[]),attCData:filterItems(diagramControlParameters[initialDiagramType][Control.attC].datatypes||[])};var _useState=useState(initialDataState),_useState2=_slicedToArray(_useState,2),dataState=_useState2[0],setDataState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),currentBin=_useState4[0],setCurrentBin=_useState4[1];// HANDLERS\nvar onPropsChanged=function onPropsChanged(){if(props.controls&&props.controls.type!==dataState.diagramType){onDiagramTypeChange(props.controls.type);}};var onDiagramTypeChange=function onDiagramTypeChange(value){setDataState({diagramType:value,diagramControlParameter:diagramControlParameters[value],attXData:filterItems(diagramControlParameters[value][Control.attX].datatypes||[]),attYData:filterItems(diagramControlParameters[value][Control.attY].datatypes||[]),attCData:filterItems(diagramControlParameters[value][Control.attC].datatypes||[])});};// HELPER (see first part above)\n// RENDER\nreturn/*#__PURE__*/React.createElement(Card,{className:\"configuration\"},/*#__PURE__*/React.createElement(CardHeader,{subheader:\"Plot Configurations\",action:/*#__PURE__*/React.createElement(IconButton,{size:\"small\",\"aria-label\":\"close\",onClick:function onClick(){props.onClose();},className:\"grid__item--close\"},/*#__PURE__*/React.createElement(CloseIcon,null))}),/*#__PURE__*/React.createElement(CardContent,{className:\"configuration__content\"},!props.controls?/*#__PURE__*/React.createElement(Alert,{severity:\"info\"},\"No plot selected\"):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"form__title\"},\"Graph Data\"),/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Plot type\"),/*#__PURE__*/React.createElement(Select,{value:props.controls.type,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{type:event.target.value});},label:\"Plot type\"},diagramTypeOptions.map(function(diagramType){return/*#__PURE__*/React.createElement(MenuItem,{key:diagramType.value,value:diagramType.value},diagramType.label);}))),dataState.diagramControlParameter[Control.attX].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(Autocomplete,{options:dataState.attXData.sort(function(a,b){return-b.topic.localeCompare(a.topic);}),groupBy:function groupBy(option){return option.topic;},getOptionLabel:function getOptionLabel(option){return option.attributeTooltip;},value:dataState.attXData.find(function(a){return a.attribute===props.controls.attX;})||null,onChange:function onChange(_event,newValue){props.onControlsChanged(props.controls.identifier,{attX:(newValue===null||newValue===void 0?void 0:newValue.attribute)||''});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"X-coordinate item\",variant:\"outlined\"}));}})),dataState.diagramControlParameter[Control.attY].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(Autocomplete,{options:dataState.attYData.sort(function(a,b){return-b.topic.localeCompare(a.topic);}),groupBy:function groupBy(option){return option.topic;},getOptionLabel:function getOptionLabel(option){return option.attributeTooltip;},value:dataState.attYData.find(function(a){return a.attribute===props.controls.attY;})||null,onChange:function onChange(_event,newValue){props.onControlsChanged(props.controls.identifier,{attY:(newValue===null||newValue===void 0?void 0:newValue.attribute)||''});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Y-coordinate item\",variant:\"outlined\"}));}})),dataState.diagramControlParameter[Control.attC].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(Autocomplete,{options:dataState.attCData.sort(function(a,b){return-b.topic.localeCompare(a.topic);}),groupBy:function groupBy(option){return option.topic;},getOptionLabel:function getOptionLabel(option){return option.attributeTooltip;},value:dataState.attCData.find(function(a){return a.attribute===props.controls.attC;})||null,onChange:function onChange(_event,newValue){props.onControlsChanged(props.controls.identifier,{attC:(newValue===null||newValue===void 0?void 0:newValue.attribute)||''});},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{label:\"Third item\",variant:\"outlined\"}));}})),dataState.diagramControlParameter[Control.dt].visible&&/*#__PURE__*/React.createElement(TextField,{variant:\"outlined\",fullWidth:true,type:\"number\",label:\"Time span of a visit (Days)\",value:props.controls.dt||0,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{dt:+event.target.value});},InputProps:{inputProps:{min:0}}}),dataState.diagramControlParameter[Control.visit].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Visit\"),/*#__PURE__*/React.createElement(Select,{label:\"Visit\",value:props.controls.visit,onChange:function onChange(event){var valueString=event.target.value;var value=Visit.all;switch(valueString){case'BASELINE':{value=Visit.baseline;break;}case'FOLLOW':{value=Visit.follow;break;}}props.onControlsChanged(props.controls.identifier,{visit:value});}},visitOptions.map(function(option){return/*#__PURE__*/React.createElement(MenuItem,{key:option.value,value:option.value},option.label);}))),props.controls.visit===Visit.follow&&/*#__PURE__*/React.createElement(\"div\",{className:\"followup\"},dataState.diagramControlParameter[Control.followup].visible&&/*#__PURE__*/React.createElement(TextField,{type:\"number\",variant:\"outlined\",label:\"Months from first visit\",value:props.controls.followup||0,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{followup:+event.target.value});},InputProps:{inputProps:{min:0}},className:\"followup__months\"}),dataState.diagramControlParameter[Control.tolerance].visible&&/*#__PURE__*/React.createElement(TextField,{type:\"number\",variant:\"outlined\",label:\"+/-\",value:props.controls.tolerance||0,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{tolerance:+event.target.value});},className:\"followup__tolerance\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form__title\"},\"Display Options\"),dataState.diagramControlParameter[Control.fit].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Fit\"),/*#__PURE__*/React.createElement(Select,{value:props.controls.fit,onChange:function onChange(event){//console.log(event.target.value);\nprops.onControlsChanged(props.controls.identifier,{fit:event.target.value||Fit.none});},label:\"fit\"},/*#__PURE__*/React.createElement(MenuItem,{value:Fit.none},\"none\"),/*#__PURE__*/React.createElement(MenuItem,{value:Fit.regression},\"regression\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"switches\"},dataState.diagramControlParameter[Control.norm].visible&&/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{checked:props.controls.norm,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{norm:event.target.checked});},color:\"primary\"}),label:\"Normalize\"}),dataState.diagramControlParameter[Control.stack].visible&&/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{checked:props.controls.stack,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{stack:event.target.checked});},color:\"primary\"}),label:\"Stack\"})),dataState.diagramControlParameter[Control.legend].visible&&/*#__PURE__*/React.createElement(FormControl,{variant:\"outlined\",fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,null,\"Legend\"),/*#__PURE__*/React.createElement(Select,{value:props.controls.legend,onChange:function onChange(event){props.onControlsChanged(props.controls.identifier,{legend:event.target.value||Legend.none});},label:\"Legend\"},/*#__PURE__*/React.createElement(MenuItem,{value:Legend.none},\"no\"),/*#__PURE__*/React.createElement(MenuItem,{value:Legend.legend},\"yes\"))),dataState.diagramControlParameter[Control.bins].visible&&/*#__PURE__*/React.createElement(\"div\",{className:\"slider\"},/*#__PURE__*/React.createElement(Typography,{id:\"viewer-configuration-bin-acuteness-label\"},\"Bin acuteness\"),/*#__PURE__*/React.createElement(Slider,{value:currentBin!==null?currentBin:props.controls.bins||0,onChange:function onChange(event,newValue){var value=newValue;setCurrentBin(value);},onChangeCommitted:function onChangeCommitted(event,newValue){setCurrentBin(null);var value=newValue;if(value!==props.controls.bins){props.onControlsChanged(props.controls.identifier,{bins:value});}},\"aria-labelledby\":\"viewer-configuration-bin-acuteness-label\"})))));};export default Controls;","map":{"version":3,"sources":["/idsn/git/July_22/PostIDSN-Viewer/src/containers/Controls.tsx"],"names":["React","useState","InputLabel","MenuItem","Select","FormControlLabel","Switch","Slider","Typography","TextField","Card","CardContent","IconButton","CardHeader","Fit","Legend","CloseIcon","FormControl","Autocomplete","Alert","DiagramType","Datatype","Control","Visit","diagramTypeOptions","label","value","Scatter","Histogram","Bar","Timeline","visitOptions","all","baseline","follow","diagramControlParameters","attX","visible","datatypes","float","int","attY","attC","subgroups","patients","code","dt","visit","followup","tolerance","fit","norm","stack","legend","bins","date","initialDiagramType","Controls","props","useEffect","onPropsChanged","filterItems","filter","initialDataState","diagramType","diagramControlParameter","attXData","attYData","attCData","dataState","setDataState","currentBin","setCurrentBin","controls","type","onDiagramTypeChange","onClose","event","onControlsChanged","identifier","target","map","sort","a","b","topic","localeCompare","option","attributeTooltip","find","attribute","_event","newValue","params","inputProps","min","valueString","none","regression","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Controls.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardHeader from '@material-ui/core/CardHeader';\n//import * as Attributes from '../services/Attributes_old';\nimport { Fit, Legend } from '../services/Backend';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Alert from '@material-ui/lab/Alert';\n\n// STRUCTURES\n\nexport enum DiagramType {\n  Scatter = 1,\n  Histogram = 2,\n  Bar = 3,\n  Timeline = 4,\n}\n\nexport enum Datatype {\n  date = 'date',\n  int = 'int',\n  float = 'float',\n  code = 'code',\n  subgroups = 'SUBGROUPS',\n  patients = 'PATIENTS',\n}\n\nexport interface Attribute {\n  topic: string;\n  topicDescription: string;\n  umbrella: string;\n  umbrellaDescription: string;\n  attribute: string;\n  attributeDescription: string;\n  attributeTooltip: string;\n  datatype: string;\n  domain: string;\n  unit: string;\n}\n\nenum Control {\n  attX,\n  attY,\n  attC,\n  dt,\n  visit,\n  followup,\n  tolerance,\n  fit,\n  norm,\n  stack,\n  legend,\n  bins,\n}\n\nexport interface ControlsState {\n  identifier: string;\n  type: DiagramType;\n  attX: string;\n  attY: string;\n  attC: string;\n  dt: number;\n  visit: Visit;\n  followup: number;\n  tolerance: number;\n  norm: boolean;\n  stack: boolean;\n  fit: Fit;\n  legend: Legend;\n  bins: number;\n}\n\nexport enum Visit {\n  all = 'ALL',\n  baseline = 'BASELINE',\n  follow = 'FOLLOW',\n}\n\n// CONFIG\n\nconst diagramTypeOptions = [\n  { label: 'Scatter', value: DiagramType.Scatter },\n  { label: 'Histogram', value: DiagramType.Histogram },\n  { label: 'Bar', value: DiagramType.Bar },\n  { label: 'Timeline', value: DiagramType.Timeline },\n];\n\nconst visitOptions = [\n  { label: 'All visits', value: Visit.all },\n  { label: 'First visit', value: Visit.baseline },\n  { label: 'Follow-up visits', value: Visit.follow },\n];\n\ntype DiagramControlParameter = {\n  [key in Control]: {\n    visible: boolean;\n    datatypes?: Datatype[];\n  };\n};\n\ntype DiagramControlParameters = {\n  [key in DiagramType]: DiagramControlParameter;\n};\n\nconst diagramControlParameters: DiagramControlParameters = {\n  [DiagramType.Scatter]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attY]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.float,\n        Datatype.int,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: true,\n    },\n    [Control.norm]: {\n      visible: false,\n    },\n    [Control.stack]: {\n      visible: false,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n  [DiagramType.Histogram]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attY]: {\n      visible: false,\n      datatypes: [],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: false,\n    },\n    [Control.norm]: {\n      visible: true,\n    },\n    [Control.stack]: {\n      visible: true,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: true,\n    },\n  },\n  [DiagramType.Bar]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.attY]: {\n      visible: false,\n      datatypes: [],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: false,\n    },\n    [Control.norm]: {\n      visible: true,\n    },\n    [Control.stack]: {\n      visible: true,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n  [DiagramType.Timeline]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.date],\n    },\n    [Control.attY]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: true,\n    },\n    [Control.norm]: {\n      visible: false,\n    },\n    [Control.stack]: {\n      visible: false,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n};\n\nexport const initialDiagramType: DiagramType = DiagramType.Scatter;\n\n// PROPS\n\ninterface Props {\n  controls: ControlsState;\n  onControlsChanged: (\n    identifier: string,\n    controls: Partial<ControlsState>,\n  ) => void;\n  onClose: () => void;\n  filter: (datatypes: Datatype[]) => Attribute[];\n}\n\nconst Controls: React.FunctionComponent<Props> = props => {\n  React.useEffect(() => {\n    onPropsChanged();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  // HELPER (see second part below)\n\n  const filterItems = (\n    datatypes: Datatype[],\n  ): Attribute[] => {\n    return props.filter(datatypes);\n  };\n\n  // STATES\n\n  // dataState\n  interface DataState {\n    diagramType: DiagramType;\n    diagramControlParameter: DiagramControlParameter;\n    attXData: Attribute[];\n    attYData: Attribute[];\n    attCData: Attribute[];\n  }\n  const initialDataState: DataState = {\n    diagramType: initialDiagramType,\n    diagramControlParameter: diagramControlParameters[initialDiagramType],\n    attXData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attX].datatypes ||\n        [],\n    ),\n    attYData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attY].datatypes ||\n        [],\n    ),\n    attCData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attC].datatypes ||\n        [],\n    ),\n  };\n  const [dataState, setDataState] = useState<DataState>(initialDataState);\n  const [currentBin, setCurrentBin] = useState<number | null>(null);\n\n  // HANDLERS\n\n  const onPropsChanged = () => {\n    if (props.controls && props.controls.type !== dataState.diagramType) {\n      onDiagramTypeChange(props.controls.type);\n    }\n  };\n\n  const onDiagramTypeChange = (value: DiagramType) => {\n    setDataState({\n      diagramType: value,\n      diagramControlParameter: diagramControlParameters[value],\n      attXData: filterItems(\n        diagramControlParameters[value][Control.attX].datatypes || [],\n      ),\n      attYData: filterItems(\n        diagramControlParameters[value][Control.attY].datatypes || [],\n      ),\n      attCData: filterItems(\n        diagramControlParameters[value][Control.attC].datatypes || [],\n      ),\n    });\n  };\n\n  // HELPER (see first part above)\n\n  // RENDER\n\n  return (\n    <Card className=\"configuration\">\n      <CardHeader\n        subheader=\"Plot Configurations\"\n        action={\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              props.onClose();\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n      <CardContent className=\"configuration__content\">\n        {!props.controls ? (\n          <Alert severity=\"info\">No plot selected</Alert>\n        ) : (\n          <>\n            <div className=\"form__title\">Graph Data</div>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel>Plot type</InputLabel>\n              <Select\n                value={props.controls.type}\n                onChange={event => {\n                  props.onControlsChanged(props.controls.identifier, {\n                    type: event.target.value as number,\n                  });\n                }}\n                label=\"Plot type\"\n              >\n                {diagramTypeOptions.map(diagramType => (\n                  <MenuItem key={diagramType.value} value={diagramType.value}>\n                    {diagramType.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {dataState.diagramControlParameter[Control.attX].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attXData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attXData.find(\n                      a => a.attribute === props.controls.attX,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attX: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"X-coordinate item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.attY].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attYData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attYData.find(\n                      a => a.attribute === props.controls.attY,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attY: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"Y-coordinate item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.attC].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attCData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attCData.find(\n                      a => a.attribute === props.controls.attC,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attC: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"Third item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.dt].visible && (\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                type=\"number\"\n                label=\"Time span of a visit (Days)\"\n                value={props.controls.dt || 0}\n                onChange={event => {\n                  props.onControlsChanged(props.controls.identifier, {\n                    dt: +event.target.value,\n                  });\n                }}\n                InputProps={{ inputProps: { min: 0 } }}\n              />\n            )}\n\n            {dataState.diagramControlParameter[Control.visit].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Visit</InputLabel>\n                <Select\n                  label=\"Visit\"\n                  value={props.controls.visit}\n                  onChange={event => {\n                    const valueString: string = event.target.value as string;\n                    let value: Visit = Visit.all;\n                    switch (valueString) {\n                      case 'BASELINE': {\n                        value = Visit.baseline;\n                        break;\n                      }\n                      case 'FOLLOW': {\n                        value = Visit.follow;\n                        break;\n                      }\n                    }\n                    props.onControlsChanged(props.controls.identifier, {\n                      visit: value,\n                    });\n                  }}\n                >\n                  {visitOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n\n            {props.controls.visit === Visit.follow && (\n              <div className=\"followup\">\n                {dataState.diagramControlParameter[Control.followup]\n                  .visible && (\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"Months from first visit\"\n                    value={props.controls.followup || 0}\n                    onChange={event => {\n                      props.onControlsChanged(props.controls.identifier, {\n                        followup: +event.target.value,\n                      });\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    className=\"followup__months\"\n                  />\n                )}\n\n                {dataState.diagramControlParameter[Control.tolerance]\n                  .visible && (\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"+/-\"\n                    value={props.controls.tolerance || 0}\n                    onChange={event => {\n                      props.onControlsChanged(props.controls.identifier, {\n                        tolerance: +event.target.value,\n                      });\n                    }}\n                    className=\"followup__tolerance\"\n                  />\n                )}\n              </div>\n            )}\n\n            <div className=\"form__title\">Display Options</div>\n\n            {dataState.diagramControlParameter[Control.fit].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Fit</InputLabel>\n                <Select\n                  value={props.controls.fit}\n                  onChange={event => {\n                    //console.log(event.target.value);\n                    props.onControlsChanged(props.controls.identifier, {\n                      fit: (event.target.value as Fit) || Fit.none,\n                    });\n                  }}\n                  label=\"fit\"\n                >\n                  <MenuItem value={Fit.none}>none</MenuItem>\n                  <MenuItem value={Fit.regression}>regression</MenuItem>\n                  {/* @TODO add more fit values here */}\n                </Select>\n              </FormControl>\n            )}\n\n            <div className=\"switches\">\n              {dataState.diagramControlParameter[Control.norm].visible && (\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={props.controls.norm}\n                      onChange={event => {\n                        props.onControlsChanged(props.controls.identifier, {\n                          norm: event.target.checked,\n                        });\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Normalize\"\n                />\n              )}\n\n              {dataState.diagramControlParameter[Control.stack].visible && (\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={props.controls.stack}\n                      onChange={event => {\n                        props.onControlsChanged(props.controls.identifier, {\n                          stack: event.target.checked,\n                        });\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Stack\"\n                />\n              )}\n            </div>\n\n            {dataState.diagramControlParameter[Control.legend].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Legend</InputLabel>\n                <Select\n                  value={props.controls.legend}\n                  onChange={event => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      legend: (event.target.value as Legend) || Legend.none,\n                    });\n                  }}\n                  label=\"Legend\"\n                >\n                  <MenuItem value={Legend.none}>no</MenuItem>\n                  <MenuItem value={Legend.legend}>yes</MenuItem>\n                  {/* @TODO add more legend values here */}\n                </Select>\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.bins].visible && (\n              <div className=\"slider\">\n                <Typography id=\"viewer-configuration-bin-acuteness-label\">\n                  Bin acuteness\n                </Typography>\n\n                <Slider\n                  value={\n                    currentBin !== null ? currentBin : props.controls.bins || 0\n                  }\n                  onChange={(event: any, newValue: number | number[]) => {\n                    const value = newValue as number;\n                    setCurrentBin(value);\n                  }}\n                  onChangeCommitted={(\n                    event: any,\n                    newValue: number | number[],\n                  ) => {\n                    setCurrentBin(null);\n                    const value = newValue as number;\n                    if (value !== props.controls.bins) {\n                      props.onControlsChanged(props.controls.identifier, {\n                        bins: value,\n                      });\n                    }\n                  }}\n                  aria-labelledby=\"viewer-configuration-bin-acuteness-label\"\n                />\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Controls;\n"]},"metadata":{},"sourceType":"module"}