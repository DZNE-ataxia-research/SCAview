{"version":3,"sources":["serviceWorker.ts","services/Backend.ts","components/Home.tsx","components/Grid.tsx","components/Plot.tsx","services/LocalStorage.ts","services/Utilities.ts","containers/Filter.tsx","containers/Controls.tsx","containers/Viewer.tsx","components/NotFound.tsx","ukb-logo.svg","routing.tsx","theme.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","token","Legend","Fit","Stack","Norm","Home","props","className","ResponsiveReactGridLayout","WidthProvider","Responsive","Grid","rowHeight","cols","breakpointCols","layouts","draggableHandle","onBreakpointChange","onLayoutChange","margin","children","Plot","data","layout","autosize","config","modeBarButtonsToRemove","useResizeHandler","onSelected","pointXValues","points","map","point","x","filter","i","a","indexOf","identifier","range","setStringItem","key","item","localStorage","setItem","getStringItem","getItem","JSON","stringify","value","parse","Math","floor","random","toString","message","axios","_axios","create","withCredentials","parseFigure","input","figure","fd","type","sessionInit","identifiers","requestBody","usertoken","plot_ids","post","api_url","then","response","process","REACT_APP_API_URL","utilities","getToken","Concept","controlsState","controls","plot","attX","attY","attC","Dt","dt","visit","followup","tolerance","bins","norm","stack","fit","legend","responseRaw","filterState","concept","filter_table","constraints","constraint","attribute","lower","upper","list","items","length","result","Object","keys","plots","forEach","name","get","DiagramType","Datatype","Control","Visit","defaultConcept","patient","conceptOptions","label","Filter","React","useEffect","onPropsChanged","useState","constraintsTableState","setConstraintsTableState","newSubgroupState","setNewSubgroupState","selectSubgroupState","setSelectSubgroupState","toFixed","join","onConstraintChanging","newConstraint","find","onConstraintsChanged","onFilterChanged","split","Card","CardHeader","subheader","action","IconButton","size","aria-label","onClick","onClose","CardContent","RadioGroup","row","onChange","event","target","FormControlLabel","control","Radio","color","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","getTooltip","TextField","disabled","onBlur","onKeyUp","Button","variant","InputLabelProps","shrink","onSubgroupDefine","subgroup","subgroups","onSubgroupActivate","checked","onSubgroupDelete","diagramTypeOptions","Scatter","Histogram","Bar","Timeline","visitOptions","all","baseline","follow","diagramControlParameters","visible","datatypes","float","int","patients","code","date","initialDiagramType","Controls","filterItems","initialDataState","diagramType","diagramControlParameter","attXData","attYData","attCData","dataState","setDataState","currentBin","setCurrentBin","onDiagramTypeChange","FormControl","fullWidth","InputLabel","Select","onControlsChanged","MenuItem","Autocomplete","options","sort","b","topic","localeCompare","groupBy","option","getOptionLabel","attributeTooltip","_event","newValue","renderInput","params","InputProps","inputProps","min","valueString","none","regression","Switch","Typography","id","Slider","onChangeCommitted","aria-labelledby","Alert","severity","initialControls","Viewer","attributes","setAttributes","errorState","setErrorState","errorText","setErrorText","backend","console","log","allAttributes","initialViewerState","controlsVisible","filtersVisible","activePlot","viewerState","setViewerState","gridLayoutsState","setGridLayoutsState","forceResize","y","Infinity","gridItemsState","setGridItemsState","initialResponsiveState","breakpoint","gridResponsiveState","setGridResponsiveState","defaultFilterState","setFilterState","subgroupsState","setSubgroupsState","plotControlsState","setPlotControlsState","plotsState","setPlotsState","updatingState","setUpdatingState","onViewerConfigurationToggle","onViewerFilterToggle","onPlotSelected","setUpdating","newFilterState","includes","newXConstraint","constraintXIndex","findIndex","push","newYConstraint","constraintYIndex","figures","handleFilterUpdateResponse","catch","handleError","filters","error","toJSON","e","newState","handleControlsUpdateResponse","newPlotsState","newUpdatingState","dispatchEvent","Event","createGridItem","w","h","createInitialPlotControlsState","createGridItemElement","data-grid","newPlotControlsState","onGridItemRemove","LinearProgress","newIdentifiers","document","querySelector","scrollTo","top","scrollHeight","behavior","startIcon","title","_subgroup","attribute_","attr","lg","md","sm","xs","xxs","newControls","newPlotControls","values","datatype","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","NotFound","style","exact","to","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","d","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref","svgRef","viewBox","enableBackground","xmlSpace","ref","undefined","transform","fontFamily","fontSize","ForwardRef","forwardRef","routing","activeClassName","path","component","theme","createMuiTheme","palette","primary","main","background","default","ReactDOM","render","ThemeProvider","CssBaseline","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc15dd62.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Figure } from 'react-plotly.js';\nimport { FilterState, Concept } from '../containers/Filter';\nimport localStorage from '../services/LocalStorage';\nimport utilities from '../services/Utilities';\nimport { DiagramType, Visit, ControlsState } from './../containers/Controls';\nimport _axios from 'axios';\nimport { Datum } from 'plotly.js';\n\nlet token: string;\n\nconst axios = _axios.create({\n  withCredentials: true\n});\n\n// HELPER\n\nconst parseFigure = (input: string): Partial<Figure> => {\n  const figure = JSON.parse(input);\n  return {\n    ...figure,\n    data: figure.data?.map((fd: any) => {\n      return {\n        ...fd,\n        // use scatter plot WebGL variant to improve performance\n        type: fd.type === 'scatter' ? 'scattergl' : fd.type,\n      };\n    }),\n  };\n};\n\n// SESSION INIT\n\ninterface SessionInitRequest {\n  usertoken: string;\n  plot_ids: string[];\n}\n\ntype SessionInitResponse = any; // @TODO define SessionInitResponse\n\ntype SessionInitReturn = any; // @TODO define SessionInitReturn\n\nconst sessionInit = (\n  identifiers: string[] = []\n): Promise<SessionInitReturn> => {\n  const requestBody: SessionInitRequest = {\n    usertoken: token,\n    plot_ids: identifiers,\n  };\n  return axios\n    .post(`${api_url}/init`, requestBody)\n    .then((response: SessionInitResponse) => response.data);\n};\n\n// SESSION RESET\n\ninterface SessionResetRequest {\n  usertoken: string;\n}\n\ntype SessionResetResponse = any; // @TODO define SessionResetResponse\n\ntype SessionResetReturn = any; // @TODO define SessionResetReturn\n\nconst sessionReset = (): Promise<SessionResetReturn> => {\n  const requestBody: SessionResetRequest = {\n    usertoken: token,\n  };\n  return axios\n    .post(`${api_url}/reset-session`, requestBody)\n    .then((response: SessionResetResponse) => response.data);\n};\n\n// CONTROLS UPDATE\n\nexport enum Legend {\n  none = 'none',\n  legend = 'legend',\n  // @TODO add more legend values here\n}\n\nexport enum Fit {\n  none = 'none',\n  regression = 'regression',\n  // @TODO add more fit values here\n}\n\nenum Stack {\n  stack = 'stack',\n}\n\nenum Norm {\n  norm = 'norm',\n}\n\ninterface ControlsUpdateRequest {\n  usertoken: string;\n  controls: {\n    plot: string;\n    type: DiagramType;\n    attX: string;\n    attY: string;\n    attC: string;\n    Dt: number | null;\n    visit: Visit;\n    followup: number;\n    tolerance: number;\n    bins: number;\n    norm: Norm[];\n    stack: Stack[];\n    fit: Fit[];\n    legend: Legend[];\n  };\n}\n\ntype ControlsUpdateResponse = any; // @TODO define ControlsUpdateResponse\n\ntype ControlsUpdateReturn = Partial<Figure>;\n\nconst controlsUpdate = (\n  controlsState: ControlsState\n): Promise<ControlsUpdateReturn> => {\n  const requestBody: ControlsUpdateRequest = {\n    usertoken: token,\n    controls: {\n      plot: controlsState.identifier,\n      type: controlsState.type,\n      attX: controlsState.attX,\n      attY: controlsState.attY,\n      attC: controlsState.attC,\n      Dt: controlsState.dt,\n      visit: controlsState.visit,\n      followup: controlsState.followup,\n      tolerance: controlsState.tolerance,\n      bins: controlsState.bins,\n      norm: controlsState.norm ? [Norm.norm] : [],\n      stack: controlsState.stack ? [Stack.stack] : [],\n      fit: [controlsState.fit] ,\n      legend: [controlsState.legend] , \n    },\n  };\n  return axios\n    .post(`${api_url}/getdata`, requestBody)\n    .then((responseRaw: ControlsUpdateResponse) => {\n      return parseFigure(responseRaw.data.figure);\n    });\n};\n\n// FILTER UPDATE\n\ninterface FilterUpdateRequest {\n  usertoken: string;\n  concept: Concept;\n  filter_table: {\n    // @TODO @API rename this to constraints\n    attribute: string;\n    lower: number | null;\n    upper: number | null;\n    list: Datum[] | null;\n    // set: [], // @TODO @API is filter-edit.filter_table.set required?\n    // human_readable: string // @TODO @API is filter-edit.filter_table.human_readable required?\n  }[];\n}\n\ntype FilterUpdateResponse = any; // @TODO define FiltersUpdateResponse\n\nexport type FilterUpdateReturn = { [key: string]: Partial<Figure> };\n\nconst filterUpdate = (\n  filterState: FilterState\n): Promise<FilterUpdateReturn> => {\n  const requestBody: FilterUpdateRequest = {\n    usertoken: token,\n    concept: filterState.concept,\n    filter_table: filterState.constraints.map((constraint) => {\n      return {\n        attribute: constraint.attribute,\n        lower: constraint.lower,\n        upper: constraint.upper,\n        list: constraint.items.length > 0 ? constraint.items : null,\n      };\n    }), // @TODO @API rename this to constraints\n  };\n  return axios\n    .post(`${api_url}/update-filter`, requestBody)\n    .then((response) => {\n      const result: { [key: string]: Partial<Figure> } = {};\n      Object.keys(response.data.plots).forEach((identifier) => {\n        result[identifier] = parseFigure(\n          response.data.plots[identifier].figure\n        );\n      });\n      return result;\n    });\n};\n\n// SUBGROUP DEFINE\n\ninterface SubgroupDefineRequest {\n  usertoken: string;\n  name: string;\n}\n\ntype SubgroupDefineResponse = any; // @TODO define SubgroupDefineResponse\n\ntype SubgroupDefineReturn = null;\n\nconst subgroupDefine = (name: string): Promise<SubgroupDefineReturn> => {\n  const requestBody: SubgroupDefineRequest = {\n    usertoken: token,\n    name: name,\n  };\n  return axios\n    .post(`${api_url}/subgroup-define`, requestBody)\n    .then((response: SubgroupDefineResponse) => null);\n};\n\n// SUBGROUP DELETE\n\ninterface SubgroupDeeleteRequest {\n  usertoken: string;\n  name: string;\n}\n\nconst subgroupDelete = (name: string): Promise<any> => {\n  const requestBody: SubgroupDefineRequest = {\n    usertoken: token,\n    name: name,\n  };\n  return axios\n    .post(`${api_url}/subgroup-delete`, requestBody)\n    .then((response: any) => null);\n};\n\n// GET ALL ATTRIBUTES\n\nconst getAttributes = (): Promise<any> =>{\n  return axios.get(`${api_url}/get-all-attributes`);\n}\n\n\n// TOKEN\n\nconst api_url = process.env.REACT_APP_API_URL;\n\nconst getToken = () => {\n  let token = localStorage.getStringItem('token');\n  if (!token) {\n    token = utilities.generateIdentifier();\n    localStorage.setStringItem('token', token);\n    sessionInit(); // @TODO do we need to wait until ready?\n  }\n  return token;\n};\n\ntoken = getToken();\n\nexport default {\n  sessionInit,\n  sessionReset,\n  controlsUpdate,\n  filterUpdate,\n  subgroupDefine,\n  subgroupDelete,\n  getAttributes\n};\n","import React from 'react';\n\ninterface Props {}\n\nconst Home: React.FunctionComponent<Props> = props => {\n  return (\n    <div className=\"container\">\n      <h1>Clinical Data Viewer</h1>\n      <p>\n        The clinical data viewer aspires to provide a solution for integrative\n        data analysis. It is not only meant to be an analyzing tool but also an\n        idea generator, where complex data is easy accessible and presented in a\n        well-arranged environment. Furthermore, it is not bound to specific\n        sources of data. These are able to be combined and compared but the user\n        may also upload his desired data. The main concept of the viewer is a\n        patient-based representation, which enables a cross-filtering over\n        different variables and a longitudinal distribution for appropriate\n        data.\n      </p>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './Grid.css';\nimport { WidthProvider, Responsive } from 'react-grid-layout';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\ninterface Props {\n  breakpointCols: {\n    lg: number;\n    md: number;\n    sm: number;\n    xs: number;\n    xxs: number;\n  };\n  rowHeight: number;\n  layouts: ReactGridLayout.Layouts;\n  onBreakpointChange: (breakpoint: string, cols: number) => void;\n  onLayoutChange: (\n    layout: ReactGridLayout.Layout[],\n    layouts: ReactGridLayout.Layouts,\n  ) => void;\n}\n\nconst Grid: React.FunctionComponent<Props> = props => {\n  return (\n    <ResponsiveReactGridLayout\n      className=\"grid\"\n      rowHeight={props.rowHeight}\n      cols={props.breakpointCols}\n      layouts={props.layouts}\n      draggableHandle=\".grid--draggable\"\n      onBreakpointChange={props.onBreakpointChange}\n      onLayoutChange={props.onLayoutChange}\n      margin={[24, 24]}\n    >\n      {props.children}\n    </ResponsiveReactGridLayout>\n  );\n};\n\nexport default Grid;\n","import { Datum, PlotSelectionEvent } from 'plotly.js';\nimport React from 'react';\nimport Plotly from 'react-plotly.js';\n\ninterface Props {\n  identifier: string;\n  data: Plotly.Data[];\n  layout: Partial<Plotly.Layout>;\n  onSelected: (\n    identifier: string,\n    range: Plotly.SelectionRange | undefined,\n    items: Datum[],\n  ) => void;\n}\n\nconst Plot: React.FunctionComponent<Props> = props => {\n  return (\n    <Plotly\n      data={props.data}\n      layout={{ ...props.layout, autosize: true }}\n      config={{\n        modeBarButtonsToRemove: ['lasso2d'],\n      }}\n      useResizeHandler={true}\n      onSelected={(data: PlotSelectionEvent) => {\n        const pointXValuesWithDuplicates = data.points.map(point => point.x);\n        const pointXValues = pointXValuesWithDuplicates.filter(\n          (x, i, a) => a.indexOf(x) === i,\n        );\n        props.onSelected(props.identifier, data.range, pointXValues);\n      }}\n    />\n  );\n};\n\nexport default Plot;\n","const setStringItem = (key: string, item: string) => {\n  if (localStorage) {\n    localStorage.setItem(key, item);\n  }\n};\n\nconst setObjectItem = (key: string, item: any) => {\n  setStringItem(key, JSON.stringify(item));\n};\n\nconst getStringItem = (key: string): string | null => {\n  if (localStorage) {\n    return localStorage.getItem(key);\n  } else {\n    return null;\n  }\n};\n\nconst getObjectItem = (key: string): any | null => {\n  const value = getStringItem(key);\n  if (value) {\n    return JSON.parse(value);\n  } else {\n    return value;\n  }\n};\n\nconst removeItem = (key: string) => {\n  if (localStorage) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport default {\n  setStringItem,\n  setObjectItem,\n  getStringItem,\n  getObjectItem,\n  removeItem,\n};\n","const generateIdentifier = () => {\n  return Math.floor(Math.random() * 16777215 ** 2).toString(16);\n};\n\nconst devLog = (message?: any, ...optionalParams: any[]) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(message, ...optionalParams);\n  }\n};\n\nexport default {\n  generateIdentifier,\n  devLog,\n};\n","import React, { useState } from 'react';\nimport './Filter.css';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\n//import * as Attributes from '../services/Attributes_old';\n\nimport { Datum } from 'plotly.js';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// STRUCTURES\n\nexport enum Concept {\n  patient = 1,\n  visit = 2,\n}\n\ninterface Constraint {\n  attribute: string;\n  lower: number | null;\n  upper: number | null;\n  items: Datum[];\n}\n\ninterface ConstraintRow {\n  attribute: string;\n  lower: string;\n  upper: string;\n  items: string;\n}\n\nexport interface Subgroup {\n  name: string;\n  constraints: Constraint[];\n}\n\nexport interface FilterState {\n  concept: Concept;\n  constraints: Constraint[];\n}\n\n// CONFIG\n\nexport const defaultConcept = Concept.patient;\n\nconst conceptOptions = [\n  { label: 'Patient', value: Concept.patient },\n  { label: 'Visit', value: Concept.visit },\n];\n\n// PROPS\n\ninterface Props {\n  filter: FilterState;\n  subgroups: Subgroup[];\n  onFilterChanged: (filter: Partial<FilterState>) => void;\n  onSubgroupDefine: (subgroup: Subgroup) => void;\n  onSubgroupDelete: (name: string) => void;\n  onSubgroupActivate: (name: string) => void;\n  onClose: () => void;\n  getTooltip: (attribute_ : string) => string\n}\n\nconst Filter: React.FunctionComponent<Props> = props => {\n  React.useEffect(() => {\n    onPropsChanged();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  // STATES\n\n  //constraintsTableState\n  const [constraintsTableState, setConstraintsTableState] = useState<\n    ConstraintRow[]\n  >([]);\n\n  //newSubgroupState\n  const [newSubgroupState, setNewSubgroupState] = useState<string>('');\n\n  //checkRadioState\n  const [selectSubgroupState, setSelectSubgroupState] = useState<Subgroup | null>();\n\n  // HANDLERS\n\n  const onPropsChanged = () => {\n    \n    setConstraintsTableState(\n      props.filter.constraints.map(constraint => {\n        return {\n          attribute: constraint.attribute,\n          lower: constraint.lower ? constraint.lower.toFixed(1) : '',\n          upper: constraint.upper ? constraint.upper.toFixed(1) : '',\n          items: constraint.items.join(', '),\n        };\n      }),\n    );\n  };\n\n  const onConstraintChanging = (\n    attribute: string,\n    constraint: Partial<ConstraintRow>,\n  ) => {\n    const newConstraint: ConstraintRow = {\n      attribute: '',\n      lower: '',\n      upper: '',\n      items: '',\n      ...constraintsTableState.find(\n        constraint => constraint.attribute === attribute,\n      ),\n      ...constraint,\n    };\n    setConstraintsTableState([\n      ...constraintsTableState.filter(\n        constraint => constraint.attribute !== attribute,\n      ),\n      newConstraint,\n    ]);\n  };\n\n  const onConstraintsChanged = () => {\n    props.onFilterChanged({\n      constraints: constraintsTableState.map(constraint => {\n        return {\n          attribute: constraint.attribute,\n          lower: constraint.lower ? +constraint.lower : null,\n          upper: constraint.upper ? +constraint.upper : null,\n          items:\n            constraint.items.length > 0 ? constraint.items.split(', ') : [],\n        };\n      }),\n    });\n    setSelectSubgroupState(null);\n  };\n\n  const onConstraintsReset = () => {\n    props.onFilterChanged({ constraints: [] });\n    setSelectSubgroupState(null);\n  };\n\n  const onConstraintRemove = (attribute: string) => {\n    props.onFilterChanged({\n      constraints: props.filter.constraints.filter(\n        constraint => constraint.attribute !== attribute,\n      ),\n    });\n    setSelectSubgroupState(null);\n  };\n\n  // HELPER\n\n  // RENDER\n\n  return (\n    <Card className=\"filter\">\n      <CardHeader\n        subheader=\"Filter\"\n        action={\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              props.onClose();\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n      <CardContent className=\"filter__content\">\n        <div className=\"form__title\">Filter Settings</div>\n        <RadioGroup\n          row\n          value={props.filter.concept}\n          onChange={event => {\n            props.onFilterChanged({ concept: +event.target.value });\n          }}\n        >\n          {conceptOptions.map(concept => (\n            <FormControlLabel\n              key={concept.value}\n              value={concept.value}\n              control={<Radio color=\"primary\" />}\n              label={concept.label}\n            />\n          ))}\n        </RadioGroup>\n        {!!constraintsTableState.length && (\n          <TableContainer>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Attribute</TableCell>\n                  <TableCell>Lower</TableCell>\n                  <TableCell>Upper</TableCell>\n                  <TableCell>Items</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {constraintsTableState.map(constraint => (\n                  <TableRow key={constraint.attribute}>\n                    <TableCell>\n                      {props.getTooltip(constraint.attribute)}\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        value={constraint.lower}\n                        disabled={!!constraint.items}\n                        onChange={event => {\n                          onConstraintChanging(constraint.attribute, {\n                            lower: event.target.value,\n                          });\n                        }}\n                        onBlur={() => onConstraintsChanged()}\n                        onKeyUp={event => {\n                          if (event.key === 'Enter') {\n                            onConstraintsChanged();\n                          }\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        value={constraint.upper}\n                        disabled={!!constraint.items}\n                        onChange={event => {\n                          onConstraintChanging(constraint.attribute, {\n                            upper: event.target.value,\n                          });\n                        }}\n                        onBlur={() => onConstraintsChanged()}\n                        onKeyUp={event => {\n                          if (event.key === 'Enter') {\n                            onConstraintsChanged();\n                          }\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        value={constraint.items}\n                        disabled={!constraint.items}\n                        onChange={event => {\n                          onConstraintChanging(constraint.attribute, {\n                            items: event.target.value,\n                          });\n                        }}\n                        onBlur={() => onConstraintsChanged()}\n                        onKeyUp={event => {\n                          if (event.key === 'Enter') {\n                            onConstraintsChanged();\n                          }\n                        }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"remove\"\n                        onClick={() => {\n                          onConstraintRemove(constraint.attribute);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={onConstraintsReset}\n        >\n          Reset filters\n        </Button>\n        <div className=\"form__title\">Subgroup Definitions</div>\n        <div className=\"input-group\">\n          <TextField\n            value={newSubgroupState}\n            label=\"Name\"\n            onChange={event => {\n              setNewSubgroupState(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onKeyUp={event => {\n              if (event.key === 'Enter') {\n                props.onSubgroupDefine({\n                  name: newSubgroupState,\n                  constraints: props.filter.constraints,\n                });\n                setNewSubgroupState('');\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              const subgroup = {\n                name: newSubgroupState,\n                constraints: props.filter.constraints,\n              };\n              props.onSubgroupDefine(subgroup);\n              setNewSubgroupState('');\n              setSelectSubgroupState(subgroup);\n            }}\n          >\n            Define\n          </Button>\n        </div>\n        {!!props.subgroups.length && (\n          <RadioGroup\n            onChange={event => {\n              const subgroup = props.subgroups.find(subgroup => subgroup.name === event.target.value);\n              setSelectSubgroupState(subgroup);\n              props.onSubgroupActivate(event.target.value);\n            }}\n            className=\"subgroups\"\n          >\n            {props.subgroups.map(subgroup => (\n              <FormControlLabel\n                key={subgroup.name}\n                value={subgroup.name}\n                control={<Radio color=\"primary\" checked={subgroup === selectSubgroupState}/>}\n                label={\n                  <div className=\"subgroup__label\">\n                    <span>{subgroup.name}</span>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"remove\"\n                      onClick={() => {\n                        props.onSubgroupDelete(subgroup.name);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </div>\n                }\n              />\n            ))}\n          </RadioGroup>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport './Controls.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardHeader from '@material-ui/core/CardHeader';\n//import * as Attributes from '../services/Attributes_old';\nimport { Fit, Legend } from '../services/Backend';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Alert from '@material-ui/lab/Alert';\n\n// STRUCTURES\n\nexport enum DiagramType {\n  Scatter = 1,\n  Histogram = 2,\n  Bar = 3,\n  Timeline = 4,\n}\n\nexport enum Datatype {\n  date = 'date',\n  int = 'int',\n  float = 'float',\n  code = 'code',\n  subgroups = 'SUBGROUPS',\n  patients = 'PATIENTS',\n}\n\nexport interface Attribute {\n  topic: string;\n  topicDescription: string;\n  umbrella: string;\n  umbrellaDescription: string;\n  attribute: string;\n  attributeDescription: string;\n  attributeTooltip: string;\n  datatype: string;\n  domain: string;\n  unit: string;\n}\n\nenum Control {\n  attX,\n  attY,\n  attC,\n  dt,\n  visit,\n  followup,\n  tolerance,\n  fit,\n  norm,\n  stack,\n  legend,\n  bins,\n}\n\nexport interface ControlsState {\n  identifier: string;\n  type: DiagramType;\n  attX: string;\n  attY: string;\n  attC: string;\n  dt: number;\n  visit: Visit;\n  followup: number;\n  tolerance: number;\n  norm: boolean;\n  stack: boolean;\n  fit: Fit;\n  legend: Legend;\n  bins: number;\n}\n\nexport enum Visit {\n  all = 'ALL',\n  baseline = 'BASELINE',\n  follow = 'FOLLOW',\n}\n\n// CONFIG\n\nconst diagramTypeOptions = [\n  { label: 'Scatter', value: DiagramType.Scatter },\n  { label: 'Histogram', value: DiagramType.Histogram },\n  { label: 'Bar', value: DiagramType.Bar },\n  { label: 'Timeline', value: DiagramType.Timeline },\n];\n\nconst visitOptions = [\n  { label: 'All visits', value: Visit.all },\n  { label: 'First visit', value: Visit.baseline },\n  { label: 'Follow-up visits', value: Visit.follow },\n];\n\ntype DiagramControlParameter = {\n  [key in Control]: {\n    visible: boolean;\n    datatypes?: Datatype[];\n  };\n};\n\ntype DiagramControlParameters = {\n  [key in DiagramType]: DiagramControlParameter;\n};\n\nconst diagramControlParameters: DiagramControlParameters = {\n  [DiagramType.Scatter]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attY]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.float,\n        Datatype.int,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: true,\n    },\n    [Control.norm]: {\n      visible: false,\n    },\n    [Control.stack]: {\n      visible: false,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n  [DiagramType.Histogram]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attY]: {\n      visible: false,\n      datatypes: [],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: false,\n    },\n    [Control.norm]: {\n      visible: true,\n    },\n    [Control.stack]: {\n      visible: true,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: true,\n    },\n  },\n  [DiagramType.Bar]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.attY]: {\n      visible: false,\n      datatypes: [],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [\n        Datatype.subgroups,\n        Datatype.patients,\n        Datatype.code,\n      ],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: false,\n    },\n    [Control.norm]: {\n      visible: true,\n    },\n    [Control.stack]: {\n      visible: true,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n  [DiagramType.Timeline]: {\n    [Control.attX]: {\n      visible: true,\n      datatypes: [Datatype.date],\n    },\n    [Control.attY]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.attC]: {\n      visible: true,\n      datatypes: [Datatype.float, Datatype.int],\n    },\n    [Control.dt]: {\n      visible: true,\n    },\n    [Control.visit]: {\n      visible: true,\n    },\n    [Control.followup]: {\n      visible: true,\n    },\n    [Control.tolerance]: {\n      visible: true,\n    },\n    [Control.fit]: {\n      visible: true,\n    },\n    [Control.norm]: {\n      visible: false,\n    },\n    [Control.stack]: {\n      visible: false,\n    },\n    [Control.legend]: {\n      visible: true,\n    },\n    [Control.bins]: {\n      visible: false,\n    },\n  },\n};\n\nexport const initialDiagramType: DiagramType = DiagramType.Scatter;\n\n// PROPS\n\ninterface Props {\n  controls: ControlsState;\n  onControlsChanged: (\n    identifier: string,\n    controls: Partial<ControlsState>,\n  ) => void;\n  onClose: () => void;\n  filter: (datatypes: Datatype[]) => Attribute[];\n}\n\nconst Controls: React.FunctionComponent<Props> = props => {\n  React.useEffect(() => {\n    onPropsChanged();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  // HELPER (see second part below)\n\n  const filterItems = (\n    datatypes: Datatype[],\n  ): Attribute[] => {\n    return props.filter(datatypes);\n  };\n\n  // STATES\n\n  // dataState\n  interface DataState {\n    diagramType: DiagramType;\n    diagramControlParameter: DiagramControlParameter;\n    attXData: Attribute[];\n    attYData: Attribute[];\n    attCData: Attribute[];\n  }\n  const initialDataState: DataState = {\n    diagramType: initialDiagramType,\n    diagramControlParameter: diagramControlParameters[initialDiagramType],\n    attXData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attX].datatypes ||\n        [],\n    ),\n    attYData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attY].datatypes ||\n        [],\n    ),\n    attCData: filterItems(\n      diagramControlParameters[initialDiagramType][Control.attC].datatypes ||\n        [],\n    ),\n  };\n  const [dataState, setDataState] = useState<DataState>(initialDataState);\n  const [currentBin, setCurrentBin] = useState<number | null>(null);\n\n  // HANDLERS\n\n  const onPropsChanged = () => {\n    if (props.controls && props.controls.type !== dataState.diagramType) {\n      onDiagramTypeChange(props.controls.type);\n    }\n  };\n\n  const onDiagramTypeChange = (value: DiagramType) => {\n    setDataState({\n      diagramType: value,\n      diagramControlParameter: diagramControlParameters[value],\n      attXData: filterItems(\n        diagramControlParameters[value][Control.attX].datatypes || [],\n      ),\n      attYData: filterItems(\n        diagramControlParameters[value][Control.attY].datatypes || [],\n      ),\n      attCData: filterItems(\n        diagramControlParameters[value][Control.attC].datatypes || [],\n      ),\n    });\n  };\n\n  // HELPER (see first part above)\n\n  // RENDER\n\n  return (\n    <Card className=\"configuration\">\n      <CardHeader\n        subheader=\"Plot Configurations\"\n        action={\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              props.onClose();\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n      <CardContent className=\"configuration__content\">\n        {!props.controls ? (\n          <Alert severity=\"info\">No plot selected</Alert>\n        ) : (\n          <>\n            <div className=\"form__title\">Graph Data</div>\n\n            <FormControl variant=\"outlined\" fullWidth>\n              <InputLabel>Plot type</InputLabel>\n              <Select\n                value={props.controls.type}\n                onChange={event => {\n                  props.onControlsChanged(props.controls.identifier, {\n                    type: event.target.value as number,\n                  });\n                }}\n                label=\"Plot type\"\n              >\n                {diagramTypeOptions.map(diagramType => (\n                  <MenuItem key={diagramType.value} value={diagramType.value}>\n                    {diagramType.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {dataState.diagramControlParameter[Control.attX].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attXData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attXData.find(\n                      a => a.attribute === props.controls.attX,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attX: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"X-coordinate item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.attY].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attYData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attYData.find(\n                      a => a.attribute === props.controls.attY,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attY: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"Y-coordinate item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.attC].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                  options={dataState.attCData.sort(\n                    (a, b) => -b.topic.localeCompare(a.topic),\n                  )}\n                  groupBy={option => option.topic}\n                  getOptionLabel={option => option.attributeTooltip}\n                  value={\n                    dataState.attCData.find(\n                      a => a.attribute === props.controls.attC,\n                    ) || null\n                  }\n                  onChange={(_event, newValue) => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      attC: newValue?.attribute || '',\n                    });\n                  }}\n                  renderInput={params => (\n                    <TextField\n                      {...params}\n                      label=\"Third item\"\n                      variant=\"outlined\"\n                    />\n                  )}\n                />\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.dt].visible && (\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                type=\"number\"\n                label=\"Time span of a visit (Days)\"\n                value={props.controls.dt || 0}\n                onChange={event => {\n                  props.onControlsChanged(props.controls.identifier, {\n                    dt: +event.target.value,\n                  });\n                }}\n                InputProps={{ inputProps: { min: 0 } }}\n              />\n            )}\n\n            {dataState.diagramControlParameter[Control.visit].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Visit</InputLabel>\n                <Select\n                  label=\"Visit\"\n                  value={props.controls.visit}\n                  onChange={event => {\n                    const valueString: string = event.target.value as string;\n                    let value: Visit = Visit.all;\n                    switch (valueString) {\n                      case 'BASELINE': {\n                        value = Visit.baseline;\n                        break;\n                      }\n                      case 'FOLLOW': {\n                        value = Visit.follow;\n                        break;\n                      }\n                    }\n                    props.onControlsChanged(props.controls.identifier, {\n                      visit: value,\n                    });\n                  }}\n                >\n                  {visitOptions.map(option => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            )}\n\n            {props.controls.visit === Visit.follow && (\n              <div className=\"followup\">\n                {dataState.diagramControlParameter[Control.followup]\n                  .visible && (\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"Months from first visit\"\n                    value={props.controls.followup || 0}\n                    onChange={event => {\n                      props.onControlsChanged(props.controls.identifier, {\n                        followup: +event.target.value,\n                      });\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    className=\"followup__months\"\n                  />\n                )}\n\n                {dataState.diagramControlParameter[Control.tolerance]\n                  .visible && (\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"+/-\"\n                    value={props.controls.tolerance || 0}\n                    onChange={event => {\n                      props.onControlsChanged(props.controls.identifier, {\n                        tolerance: +event.target.value,\n                      });\n                    }}\n                    className=\"followup__tolerance\"\n                  />\n                )}\n              </div>\n            )}\n\n            <div className=\"form__title\">Display Options</div>\n\n            {dataState.diagramControlParameter[Control.fit].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Fit</InputLabel>\n                <Select\n                  value={props.controls.fit}\n                  onChange={event => {\n                    //console.log(event.target.value);\n                    props.onControlsChanged(props.controls.identifier, {\n                      fit: (event.target.value as Fit) || Fit.none,\n                    });\n                  }}\n                  label=\"fit\"\n                >\n                  <MenuItem value={Fit.none}>none</MenuItem>\n                  <MenuItem value={Fit.regression}>regression</MenuItem>\n                  {/* @TODO add more fit values here */}\n                </Select>\n              </FormControl>\n            )}\n\n            <div className=\"switches\">\n              {dataState.diagramControlParameter[Control.norm].visible && (\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={props.controls.norm}\n                      onChange={event => {\n                        props.onControlsChanged(props.controls.identifier, {\n                          norm: event.target.checked,\n                        });\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Normalize\"\n                />\n              )}\n\n              {dataState.diagramControlParameter[Control.stack].visible && (\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={props.controls.stack}\n                      onChange={event => {\n                        props.onControlsChanged(props.controls.identifier, {\n                          stack: event.target.checked,\n                        });\n                      }}\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Stack\"\n                />\n              )}\n            </div>\n\n            {dataState.diagramControlParameter[Control.legend].visible && (\n              <FormControl variant=\"outlined\" fullWidth>\n                <InputLabel>Legend</InputLabel>\n                <Select\n                  value={props.controls.legend}\n                  onChange={event => {\n                    props.onControlsChanged(props.controls.identifier, {\n                      legend: (event.target.value as Legend) || Legend.none,\n                    });\n                  }}\n                  label=\"Legend\"\n                >\n                  <MenuItem value={Legend.none}>no</MenuItem>\n                  <MenuItem value={Legend.legend}>yes</MenuItem>\n                  {/* @TODO add more legend values here */}\n                </Select>\n              </FormControl>\n            )}\n\n            {dataState.diagramControlParameter[Control.bins].visible && (\n              <div className=\"slider\">\n                <Typography id=\"viewer-configuration-bin-acuteness-label\">\n                  Bin acuteness\n                </Typography>\n\n                <Slider\n                  value={\n                    currentBin !== null ? currentBin : props.controls.bins || 0\n                  }\n                  onChange={(event: any, newValue: number | number[]) => {\n                    const value = newValue as number;\n                    setCurrentBin(value);\n                  }}\n                  onChangeCommitted={(\n                    event: any,\n                    newValue: number | number[],\n                  ) => {\n                    setCurrentBin(null);\n                    const value = newValue as number;\n                    if (value !== props.controls.bins) {\n                      props.onControlsChanged(props.controls.identifier, {\n                        bins: value,\n                      });\n                    }\n                  }}\n                  aria-labelledby=\"viewer-configuration-bin-acuteness-label\"\n                />\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Controls;\n","import React, { useState, useEffect } from 'react';\nimport Grid from '../components/Grid';\nimport Plot from '../components/Plot';\nimport localStorage from '../services/LocalStorage';\nimport backend, { Fit, Legend } from '../services/Backend';\nimport utilities from '../services/Utilities';\nimport Filter, { FilterState, defaultConcept, Subgroup } from './Filter';\nimport Configuration, {\n  ControlsState,\n  DiagramType,\n  initialDiagramType,\n  Visit,\n  Datatype, Attribute\n} from './Controls';\nimport { Figure } from 'react-plotly.js';\nimport { Datum } from 'plotly.js';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport './Viewer.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\n// CONFIG\n\nexport const initialControls = {\n  identifier: '',\n  type: initialDiagramType,\n  attX: '',\n  attY: '',\n  attC: '',\n  dt: 0,\n  visit: Visit.all,\n  followup: 0,\n  tolerance: 0,\n  norm: false,\n  stack: false,\n  fit: Fit.none,\n  legend: Legend.legend,\n  bins: 0,\n};\n\n// PROPS\n\ninterface Props {}\n\n\n\n\n\nconst Viewer: React.FunctionComponent<Props> = props => {\n  // GET ATTRIBUTES METHODS\n\n  \n \n\n  const [attributes, setAttributes] = useState<Attribute[]>([]);\n  // PATIENTS and SUBGROUPS are added to attributes manually and have this values as datatype\n  \n  \n  const getTooltip = (attribute_: string): string => {\n      return attributes ? attributes.filter((attr: Attribute) => attr[\"attribute\"] === attribute_)[0][\"attributeTooltip\"] : \"\";\n  };\n  \n  const filter = (datatypes: Datatype[]): Attribute[] => {\n    return attributes.filter(\n      attribute =>\n        Object.values(datatypes).findIndex(\n          datatype => attribute.datatype === datatype,\n        ) !== -1,\n    );\n  };\n\n  // STATES\n\n  // errorState\n  const [errorState, setErrorState] = useState<boolean>();\n  const [errorText, setErrorText] = useState<string>('');\n\n  //\n\n\n  //const [loadingAttributes, setLoadingAttributes] = useState();\n\n  useEffect(()=>{\n    backend.getAttributes().then((response) =>{\n      console.log(response);\n      setAttributes(response.data.allAttributes);\n    });\n  }, []);\n\n  // viewerState\n  const initialViewerState = {\n    controlsVisible: false,\n    filtersVisible: true,\n    activePlot: '',\n  };\n  const [viewerState, setViewerState] =\n    useState<{\n      controlsVisible: boolean;\n      filtersVisible: boolean;\n      activePlot: string;\n    }>(initialViewerState);\n  const [gridLayoutsState, setGridLayoutsState] =\n    useState<ReactGridLayout.Layouts>(\n      localStorage.getObjectItem('grid.layouts') ?? {},\n    );\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState, viewerState]);\n\n  // gridLayoutsState\n\n  useEffect(() => {\n    localStorage.setObjectItem('grid.layouts', gridLayoutsState);\n    forceResize();\n  }, [gridLayoutsState]);\n\n  // gridItemsState\n  const [gridItemsState, setGridItemsState] = useState<\n    ReactGridLayout.Layout[]\n  >(\n    (localStorage.getObjectItem('grid.items') ?? [])\n      // Workaround for bug in layout serialization - Infinity (and possibly others) gets saved as null\n      .map((item: ReactGridLayout.Layout) => {\n        return { ...item, y: item.y ?? Infinity };\n      }),\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('grid.items', gridItemsState);\n  }, [gridItemsState]);\n\n  // gridResponsiveState\n  const initialResponsiveState = { breakpoint: '', cols: 12 };\n  const [gridResponsiveState, setGridResponsiveState] = useState<{\n    breakpoint: string;\n    cols: number;\n  }>(initialResponsiveState);\n  useEffect(() => {\n    forceResize();\n  }, [gridResponsiveState]);\n\n  // filterState\n  const defaultFilterState: FilterState = {\n    concept: defaultConcept,\n    constraints: [],\n  };\n\n  const [filterState, setFilterState] = useState<FilterState>(\n    localStorage.getObjectItem('filter') ?? defaultFilterState,\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('filter', filterState);\n  }, [filterState]);\n\n  // subgroupsState\n  const [subgroupsState, setSubgroupsState] = useState<Subgroup[]>(\n    localStorage.getObjectItem('subgroups') ?? [],\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('subgroups', subgroupsState);\n  }, [subgroupsState]);\n\n  // plotControlsState\n  interface PlotControlsState {\n    [key: string]: { controls: ControlsState };\n  }\n\n  const [plotControlsState, setPlotControlsState] = useState<PlotControlsState>(\n    localStorage.getObjectItem('controls') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('controls', plotControlsState);\n  }, [plotControlsState]);\n\n  // plotsState\n  interface PlotState {\n    data: Plotly.Data[];\n    layout: Partial<Plotly.Layout>;\n  }\n  const [plotsState, setPlotsState] = useState<{ [key: string]: PlotState }>(\n    localStorage.getObjectItem('plots') ?? {},\n  );\n  useEffect(() => {\n    localStorage.setObjectItem('plots', plotsState);\n  }, [plotsState]);\n\n  // updatingState\n  interface UpdatingState {\n    [key: string]: boolean;\n  }\n  const [updatingState, setUpdatingState] = useState<UpdatingState>({});\n\n  // HANDLERS\n\n  const onGridBreakpointChange = (breakpoint: string, cols: number) => {\n    setGridResponsiveState({\n      breakpoint: breakpoint,\n      cols: cols,\n    });\n  };\n\n  const onViewerConfigurationToggle = () => {\n    setViewerState({\n      ...viewerState,\n      controlsVisible: !viewerState.controlsVisible,\n    });\n  };\n\n  const onViewerFilterToggle = () => {\n    setViewerState({\n      ...viewerState,\n      filtersVisible: !viewerState.filtersVisible,\n    });\n  };\n\n  const onGridLayoutChange = (\n    layout: ReactGridLayout.Layout[],\n    layouts: ReactGridLayout.Layouts,\n  ) => {\n    setGridLayoutsState(layouts);\n  };\n\n  const onGridItemAdd = () => {\n    const identifier = utilities.generateIdentifier();\n    const newIdentifiers = [...Object.keys(plotsState), identifier];\n    backend\n      .sessionInit(newIdentifiers)\n      .then(() => {\n        setGridItemsState([...gridItemsState, createGridItem(identifier)]);\n        setPlotControlsState({\n          ...plotControlsState,\n          ...{ [identifier]: createInitialPlotControlsState(identifier) },\n        });\n        setPlotsState({\n          ...plotsState,\n          ...{ [identifier]: { data: [], layout: {} } },\n        });\n        setViewerState({\n          ...viewerState,\n          activePlot: identifier,\n          controlsVisible: true,\n        });\n        document.querySelector(\".scrollContainer\")?.scrollTo({\n          top: document.querySelector(\".scrollContainer\")?.scrollHeight,\n          behavior: 'smooth'\n        });\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemRemove = (identifier: string) => {\n    const newPlotsState = { ...plotsState };\n    delete newPlotsState[identifier];\n    backend\n      .sessionInit(Object.keys(newPlotsState))\n      .then(() => {\n        setGridItemsState(\n          gridItemsState.filter(\n            (item: ReactGridLayout.Layout) => item.i !== identifier,\n          ),\n        );\n        setPlotsState(newPlotsState);\n        const newPlotControlsState = { ...plotControlsState };\n        delete newPlotControlsState[identifier];\n        setPlotControlsState(newPlotControlsState);\n        if (viewerState.activePlot === identifier) {\n          setViewerState({\n            ...viewerState,\n            activePlot: '',\n            controlsVisible: false,\n          });\n        }\n      })\n      .catch(handleError);\n  };\n\n  const onGridItemEdit = (identifier: string) => {\n    setViewerState({\n      ...viewerState,\n      activePlot: identifier,\n      controlsVisible: true,\n    });\n  };\n\n  const onReset = () => {\n    backend\n      .sessionReset()\n      .then(() => {\n        setViewerState(initialViewerState);\n        setGridResponsiveState(initialResponsiveState);\n        localStorage.setObjectItem('grid.layouts', {});\n        setGridLayoutsState({});\n        localStorage.setObjectItem('grid.items', []);\n        setGridItemsState([]);\n        localStorage.setObjectItem('filter', defaultFilterState);\n        setFilterState(defaultFilterState);\n        localStorage.setObjectItem('controls', {});\n        setPlotControlsState({});\n        localStorage.setObjectItem('plots', {});\n        setPlotsState({});\n        localStorage.setObjectItem('subgroups', []);\n        setSubgroupsState([]);\n        \n      })\n      .catch(handleError);\n  };\n\n  const onPlotSelected = (\n    identifier: string,\n    range: Plotly.SelectionRange | undefined,\n    items: Datum[],\n  ) => {\n    if (!range) {\n      return;\n    }\n\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      constraints: [...filterState.constraints],\n    };\n    // Update/add x-constraint\n    if (\n      [\n        DiagramType.Scatter,\n        DiagramType.Histogram,\n        DiagramType.Timeline,\n      ].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: range.x[0],\n        upper: range.x[1],\n        items: [],\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n    // Update/add y-constraint\n    if (\n      [DiagramType.Scatter, DiagramType.Timeline].includes(\n        plotControlsState[identifier].controls.type,\n      )\n    ) {\n      const newYConstraint = {\n        attribute: plotControlsState[identifier].controls.attY,\n        lower: range.y[0],\n        upper: range.y[1],\n        items: [],\n      };\n      const constraintYIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attY,\n      );\n      if (constraintYIndex > -1) {\n        newFilterState.constraints[constraintYIndex] = newYConstraint;\n      } else {\n        newFilterState.constraints.push(newYConstraint);\n      }\n    }\n    // Update/add discrete constraint\n    if (\n      [DiagramType.Bar].includes(plotControlsState[identifier].controls.type)\n    ) {\n      const newXConstraint = {\n        attribute: plotControlsState[identifier].controls.attX,\n        lower: null,\n        upper: null,\n        items: items,\n      };\n      const constraintXIndex = newFilterState.constraints.findIndex(\n        constraint =>\n          constraint.attribute === plotControlsState[identifier].controls.attX,\n      );\n      if (constraintXIndex > -1) {\n        newFilterState.constraints[constraintXIndex] = newXConstraint;\n      } else {\n        newFilterState.constraints.push(newXConstraint);\n      }\n    }\n\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onFilterChanged = (filters: Partial<FilterState>) => {\n    setUpdating();\n    const newFilterState: FilterState = {\n      ...filterState,\n      ...filters,\n    };\n    setFilterState(newFilterState);\n    utilities.devLog('new filters:', newFilterState);\n    backend\n      .filterUpdate(newFilterState)\n      .then((figures: { [key: string]: Partial<Figure> }) => {\n        handleFilterUpdateResponse(figures);\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDefine = (subgroup: Subgroup) => {\n    backend\n      .subgroupDefine(subgroup.name)\n      .then(() => {\n        setSubgroupsState([\n          ...subgroupsState.filter(\n            _subgroup => _subgroup.name !== subgroup.name,\n          ),\n          subgroup,\n        ]);\n\n\n        \n        \n\n      })\n      .catch(handleError);\n  };\n\n  const onSubgroupDelete = (name: string) => {\n    //alert('Not yet implemented in backend.');\n    backend.subgroupDelete(name).then(response =>{\n      setSubgroupsState([\n        ...subgroupsState.filter(subgroup => subgroup.name !== name),\n      ]);\n    });\n    \n  };\n  const onSubgroupActivate = (name: string) => {\n    const subgroup = subgroupsState.find(subgroup => subgroup.name === name);\n    //console.log(subgroup);\n    onFilterChanged({\n      ...filterState,\n      constraints: subgroup?.constraints,\n    });\n  };\n\n  const onControlsChanged = (\n    identifier: string,\n    controls: Partial<ControlsState>,\n  ) => {\n    setUpdating(identifier);\n    const newControls: ControlsState = {\n      ...plotControlsState[identifier].controls,\n      ...controls,\n    };\n    const newPlotControls = {\n      ...plotControlsState,\n      ...{\n        [identifier]: {\n          ...plotsState[identifier],\n          controls: newControls,\n        },\n      },\n    };\n    //console.log()\n    setPlotControlsState(newPlotControls);\n    utilities.devLog('new controls:', newControls);\n    backend\n      .controlsUpdate(newPlotControls[identifier].controls)\n      .then((figure: Partial<Figure>) => {\n        handleControlsUpdateResponse(identifier, figure);\n      })\n      .catch(handleError);\n  };\n\n  // HELPER (see first part above)\n\n  const handleError = (error: any) => {\n    console.log(error);\n    try {\n      setErrorText(`${error.toJSON().name}: ${error.toJSON().message}`);\n    } catch (e) {\n      setErrorText('ERROR: unknown');\n    }\n\n    setErrorState(true);\n    const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = false;\n      });\n      setUpdatingState(newState);\n  };\n\n  const handleControlsUpdateResponse = (\n    identifier: string,\n    figure: Partial<Figure>,\n  ) => {\n    setPlotsState({\n      ...plotsState,\n      [identifier]: {\n        ...plotsState[identifier],\n        data: figure.data || [],\n        layout: figure.layout || {},\n      },\n    });\n    utilities.devLog(identifier, 'done');\n    setUpdatingState({\n      ...updatingState,\n      [identifier]: false,\n    });\n  };\n\n  const handleFilterUpdateResponse = (figures: {\n    [key: string]: Partial<Figure>;\n  }) => {\n    const identifiers = Object.keys(figures);\n    const newPlotsState = { ...plotsState };\n    const newUpdatingState = { ...updatingState };\n    identifiers.forEach(identifier => {\n      newPlotsState[identifier] = {\n        data: figures[identifier].data || [],\n        layout: figures[identifier].layout || {},\n      };\n      newUpdatingState[identifier] = false;\n    });\n    setPlotsState(newPlotsState);\n    setUpdatingState(newUpdatingState);\n  };\n\n  const forceResize = () => {\n    // Workaround to trigger plot resize\n    window.dispatchEvent(new Event('resize'));\n  };\n\n  const createGridItem = (identifier: string): ReactGridLayout.Layout => {\n    return {\n      i: identifier,\n      x: (gridItemsState.length * 5) % gridResponsiveState.cols,\n      y: Infinity,\n      w: 5,\n      h: 4,\n    };\n  };\n\n  const createInitialPlotControlsState = (\n    identifier: string,\n  ): { controls: ControlsState } => {\n    return { controls: { ...initialControls, identifier } };\n  };\n\n  const setUpdating = (identifier?: string) => {\n    if (identifier) {\n      setUpdatingState({\n        ...updatingState,\n        [identifier]: true,\n      });\n    } else {\n      const newState: UpdatingState = {};\n      Object.keys(plotControlsState).forEach(identifier => {\n        newState[identifier] = true;\n      });\n      setUpdatingState(newState);\n    }\n  };\n\n  // RENDER\n\n  const createGridItemElement = (item: ReactGridLayout.Layout) => {\n    return (\n      <Card\n        key={item.i}\n        data-grid={item}\n        className={`grid__item ${\n          viewerState.activePlot === item.i ? ' grid__item--active' : ''\n        }`}\n        onClick={() => {\n          onGridItemEdit(item.i);\n        }}\n      >\n        <div className=\"grid__item-header grid--draggable\">\n          <IconButton\n            size=\"small\"\n            aria-label=\"edit\"\n            \n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            onClick={() => {\n              onGridItemRemove(item.i);\n            }}\n            className=\"grid__item--close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div className=\"grid__item-loader\">\n          {updatingState[item.i] && <LinearProgress />}\n        </div>\n        <CardContent className=\"grid__item-content\">\n          <Plot\n            identifier={item.i}\n            data={plotsState[item.i]?.data}\n            layout={plotsState[item.i]?.layout}\n            onSelected={onPlotSelected}\n          />\n        </CardContent>\n      </Card>\n    );\n  };\n  if (!(attributes && attributes.length)) return null;\n  return (\n    <div className=\"container\">\n      <div className=\"toolbar\">\n        <div className=\"toolbar__left\">\n          <Button\n            onClick={onGridItemAdd}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            title=\"Add new diagram\"\n          >\n            Add\n          </Button>\n\n          <Button\n            onClick={forceResize}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AspectRatioIcon />}\n            title=\"Force resize\"\n          >\n            Resize\n          </Button>\n\n          <Button\n            onClick={onReset}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<ReplayIcon />}\n            title=\"Reset session\"\n          >\n            Reset session\n          </Button>\n        </div>\n\n        <div className=\"toolbar__right\">\n          <Button\n            onClick={onViewerConfigurationToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<SettingsIcon />}\n            title=\"Toggle configuration panel\"\n          >\n            Configuration\n          </Button>\n\n          <Button\n            onClick={onViewerFilterToggle}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FilterListIcon />}\n            title=\"Toggle filter panel\"\n          >\n            Filter\n          </Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {viewerState.filtersVisible && (\n          <Filter\n            filter={filterState}\n            subgroups={subgroupsState}\n            onFilterChanged={onFilterChanged}\n            onSubgroupDefine={onSubgroupDefine}\n            onSubgroupDelete={onSubgroupDelete}\n            onSubgroupActivate={onSubgroupActivate}\n            onClose={onViewerFilterToggle}\n            getTooltip = {getTooltip}\n          />\n        )}\n        <div className=\"scrollContainer\">\n        <Grid\n          breakpointCols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n          rowHeight={100}\n          layouts={gridLayoutsState}\n          onBreakpointChange={onGridBreakpointChange}\n          onLayoutChange={onGridLayoutChange}\n        >\n          {gridItemsState.map((item: ReactGridLayout.Layout) =>\n            createGridItemElement(item),\n          )}\n        </Grid>\n        </div>\n        {viewerState.controlsVisible && (\n          <Configuration\n            controls={plotControlsState[viewerState.activePlot]?.controls}\n            onControlsChanged={onControlsChanged}\n            onClose={onViewerConfigurationToggle}\n            filter={filter}\n          />\n        )}\n      </div>\n\n      <Snackbar\n        open={errorState}\n        autoHideDuration={10000}\n        onClose={() => {\n          setErrorState(false);\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert\n          variant=\"filled\"\n          severity=\"error\"\n          onClose={() => {\n            setErrorState(false);\n          }}\n        >\n          {errorText}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import Alert from '@material-ui/lab/Alert';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {}\n\nconst NotFound: React.FunctionComponent<Props> = props => {\n  return (\n    <div className=\"container\">\n      <Alert severity=\"error\" variant=\"filled\">\n        Page not found. Please start again from here:{' '}\n        <NavLink\n          style={{ color: '#fff' }}\n          exact\n          to={`${process.env.PUBLIC_URL}/`}\n        >\n          Home\n        </NavLink>\n      </Alert>\n    </div>\n  );\n};\n\nexport default NotFound;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{enable-background:new    ;}\\n\\t.st1{fill:#424241;}\\n\\t.st2{fill:#004F9F;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"title\", null, \"UKB-Logo\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M341.5,167.4l-16-20v20h-4v-54.7h4v34.6l15.3-17.2h4.8l-15.5,16.9l16.8,20.3H341.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M356.4,167.4v-54.7h4v54.7H356.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M377.4,120.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3c1.6,0,3,1.3,3,3C380.4,119.6,379.1,120.9,377.4,120.9z  M375.4,167.4v-37.3h4v37.3H375.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M418.9,167.4v-24.2c0-6.6-1.8-10.4-8-10.4c-7.4,0-12.5,7-12.5,16.9v17.8h-4v-37.3h4.1c0,2.8-0.2,6.6-0.7,9 l0.2,0.1c2.1-5.8,7-9.7,13.6-9.7c8.6,0,11.2,5.3,11.2,12v25.9H418.9z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M439.9,120.9c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3s3,1.3,3,3C442.9,119.6,441.5,120.9,439.9,120.9z M437.8,167.4 v-37.3h4v37.3H437.8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M476.8,167.4l-16-20v20h-4v-54.7h4v34.6l15.3-17.2h4.8l-15.5,16.9l16.8,20.3H476.8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M515,167.4c0-2.8,0.2-6.6,0.7-9l-0.2-0.1c-2.1,5.8-7,9.7-13.6,9.7c-8.6,0-11.2-5.3-11.2-12v-25.9h4v24.2 c0,6.6,1.8,10.4,8,10.4c7.4,0,12.5-7,12.5-16.9v-17.8h4v37.3H515z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M582,167.4v-24.2c0-6.3-1.5-10.4-7.6-10.4c-6.4,0-12.3,6.3-12.3,17v17.6h-4v-24.3c0-5.6-1.1-10.3-7.6-10.3 c-6.9,0-12.3,7-12.3,17v17.6h-4v-37.3h4.1c0,2.8-0.2,6.6-0.7,9l0.2,0.1c2.1-5.8,7.1-9.7,13.5-9.7c9.2,0,10.6,7,10.4,9.5 c1.3-3.5,5.2-9.5,13.3-9.5c6.9,0,10.9,3.6,10.9,12v25.9H582z\"\n}));\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M613.6,168c-5.2,0-8.8-0.4-12.8-1.5v-53.8h6.7v18.1c0,2.2-0.2,5.1-0.7,7l0.2,0.1c2-5.2,6.7-8.3,12.3-8.3 c8.8,0,13.7,6.1,13.7,17.5C633,160.1,625.6,168,613.6,168z M617.7,135c-6.7,0-10.2,7.9-10.2,14.3v12.4c2,0.6,4,0.9,6.6,0.9 c7,0,11.8-4.3,11.8-15C626,139.6,623.4,135,617.7,135z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M656,168.1c-10.2,0-16.7-5.8-16.7-19c0-10.9,6.9-19.6,18.1-19.6c9.5,0,16.7,5.2,16.7,18.7 C674.1,159.4,667,168.1,656,168.1z M656.8,135.1c-5.4,0-10.6,4.1-10.6,13.3c0,9,3.7,13.9,10.6,13.9c5.5,0,10.3-4.3,10.3-13.9 C667.1,140.1,663.7,135.1,656.8,135.1z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M707.2,167.4v-24c0-5.2-1.4-8.4-6.4-8.4c-6.1,0-10.6,6.3-10.6,14.5v17.8h-6.7v-37.3h6.5c0,2.2-0.2,5.6-0.6,7.9 h0.2c2.2-5.1,6.7-8.5,13.1-8.5c8.5,0,11.2,5.3,11.2,11.9v26H707.2z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M750.3,167.4v-24c0-5.2-1.4-8.4-6.4-8.4c-6.1,0-10.6,6.3-10.6,14.5v17.8h-6.7v-37.3h6.5c0,2.2-0.2,5.6-0.6,7.9 h0.2c2.2-5.1,6.7-8.5,13.1-8.5c8.5,0,11.2,5.3,11.2,11.9v26H750.3z\"\n}));\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M345.9,91.5c0-2.8,0.2-6.6,0.7-9l-0.1-0.1c-2.1,5.8-7,9.7-13.6,9.7c-8.6,0-11.2-5.3-11.2-12V54.3h4v24.2 c0,6.6,1.8,10.4,8,10.4c7.4,0,12.5-7,12.5-16.9V54.3h4v37.3H345.9z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M389.6,91.5V67.3c0-6.6-1.8-10.4-8-10.4c-7.4,0-12.5,7-12.5,16.9v17.8h-4V54.3h4.1c0,2.8-0.2,6.6-0.7,9 l0.1,0.1c2.1-5.8,7-9.7,13.6-9.7c8.6,0,11.2,5.3,11.2,12v25.9H389.6z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M410.5,45.1c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3c1.7,0,3,1.3,3,3C413.5,43.7,412.2,45.1,410.5,45.1z M408.5,91.5 V54.3h4v37.3H408.5z\"\n}));\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M439.4,91.5h-4.2L421,54.3h4.6l9.8,27.4c0.8,2.2,1.3,3.9,1.9,5.9h0.1c0.6-1.9,1.3-3.8,1.9-5.7l10.1-27.7h4.4 L439.4,91.5z\"\n}));\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M487.5,71.5h-25.6c-0.5,12,4.3,17.2,13.2,17.2c3.7,0,7.4-0.8,10.5-2.2l0.9,3.4c-3.4,1.4-7.6,2.2-12.3,2.2 c-10.8,0-16.6-6.1-16.6-19.1c0-11.1,5.9-19.3,15.9-19.3c10,0,14.1,7,14.1,14.8C487.5,68.9,487.5,70.2,487.5,71.5z M473.1,56.9 c-5.8,0-10,4.1-11.1,11.4h21.1C483.3,61.3,479.5,56.9,473.1,56.9z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M515.9,57.7c-8.8-1.3-12.9,5.7-12.9,19.1v14.8h-4V54.3h4.1c0,2.7-0.3,6.7-1,10.1l0.1,0.1 c1.3-5.7,5.3-11.8,13.7-10.7L515.9,57.7z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M531,92.1c-2.8,0-6.1-0.3-8.3-1l0.7-4c2.4,0.9,5.7,1.4,8.5,1.4c5.8,0,10.1-2.8,10.1-7.3 c0-10.1-19.5-3.7-19.5-17.2c0-6.1,4.9-10.5,13.9-10.5c2.4,0,5.3,0.4,7.6,0.9l-0.6,3.5c-2.3-0.8-5-1.2-7.6-1.2 c-6.1,0-9.1,2.6-9.1,6.7c0,10.2,19.5,3.9,19.5,17C546,86.9,540.5,92.1,531,92.1z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M560,45.1c-1.6,0-3-1.3-3-3c0-1.6,1.3-3,3-3c1.7,0,3,1.3,3,3C563,43.7,561.7,45.1,560,45.1z M558,91.5V54.3h4 v37.3H558z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M587.5,92.1c-7.1,0-9.1-3.4-9.1-10.7V57.4h-8.8v-3.1h8.8V41.5l4-1.1v13.9h11.8v3.1h-11.8v21.7 c0,7.5,1.3,9.4,6.1,9.4c2,0,3.8-0.3,5.3-0.7l0.6,3.5C592.4,91.8,589.7,92.1,587.5,92.1z\"\n}));\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M624.4,91.5c0-3.1,0.1-6.2,0.5-8.5l-0.2-0.1c-1.8,5-6.7,9.1-13.4,9.1c-5.6,0-10-3.5-10-9.5 c0-7.2,7.8-12.6,23.2-12.6v-2.1c0-7.3-2.2-10.9-9.1-10.9c-3.6,0-8.1,1.3-11.2,2.8l-1-3.4c3.5-1.6,8.1-2.8,12.8-2.8 c9.4,0,12.4,5.2,12.4,13v13c0,4,0.1,8.4,0.1,11.8H624.4z M624.4,73.3c-14.8,0-19,4.3-19,8.6c0,4,2.7,6.9,6.8,6.9 c7.3,0,12.2-7.4,12.2-14.6V73.3z M608.9,45c-1.6,0-2.9-1.3-2.9-2.9c0-1.6,1.3-2.9,2.9-2.9s2.9,1.3,2.9,2.9 C611.9,43.7,610.6,45,608.9,45z M622.6,45c-1.6,0-2.9-1.3-2.9-2.9c0-1.6,1.3-2.9,2.9-2.9c1.7,0,2.9,1.3,2.9,2.9 C625.5,43.7,624.2,45,622.6,45z\"\n}));\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", {\n  className: \"st0\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M652.9,92.1c-7.1,0-9.1-3.4-9.1-10.7V57.4h-8.8v-3.1h8.8V41.5l4-1.1v13.9h11.8v3.1h-11.8v21.7 c0,7.5,1.3,9.4,6.1,9.4c1.9,0,3.8-0.3,5.3-0.7l0.6,3.5C657.9,91.8,655.2,92.1,652.9,92.1z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M675.4,92.1c-2.8,0-6.1-0.3-8.3-1l0.7-4c2.4,0.9,5.7,1.4,8.5,1.4c5.8,0,10.1-2.8,10.1-7.3 c0-10.1-19.5-3.7-19.5-17.2c0-6.1,4.9-10.5,13.9-10.5c2.4,0,5.3,0.4,7.6,0.9l-0.6,3.5c-2.3-0.8-5-1.2-7.6-1.2 c-6.1,0-9.1,2.6-9.1,6.7c0,10.2,19.5,3.9,19.5,17C690.5,86.9,685,92.1,675.4,92.1z\"\n}));\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st2\",\n  d: \"M74.6,106.1c0,29.9-15.5,51.3-38.1,51.3c-18.9,0-24.4-11.6-24.4-31.7V52H0v78.7c0,20.3,8,36.5,34.2,36.5 c20.3,0,34-11.1,40.4-28.9v29.3h12.1V0H74.6V106.1z\"\n}));\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"st1\",\n  points: \"99.4,106.6 145.9,54.2 160.5,54.2 113.3,105.7 164.3,167.5 147.9,167.5  \"\n}));\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M236.9,51.2c-18.5,0-32.4,11.3-39,30.5c0,0,0-14.5,0-20.7V-0.1h-12.1v163.7c11.2,2.7,21,3.9,35.8,3.9 c34.2,0,57.2-21.4,57.2-62.7C278.8,69,263.3,51.2,236.9,51.2 M223,156.9c-9.6,0-17.6-0.9-25.1-3.4v-42.9 c0-20.5,11.8-50.6,37.6-50.6c21,0,30.6,17.1,30.6,44.7C266.1,141.4,249.2,156.9,223,156.9\"\n}));\n\nvar SvgUkbLogo = function SvgUkbLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Ebene_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 757.1 167.6\",\n    style: {\n      enableBackground: \"new 0 0 757.1 167.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, title === undefined ? _ref3 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, /*#__PURE__*/React.createElement(\"text\", {\n    transform: \"matrix(1 0 0 1 215 -165)\",\n    style: {\n      fontFamily: \"'MyriadPro-Regular'\",\n      fontSize: 12\n    }\n  }, \"Lorem ipsum\"));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUkbLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ukb-logo.406eef83.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {\n  Route,\n  NavLink,\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\nimport Home from './components/Home';\nimport Viewer from './containers/Viewer';\nimport NotFound from './components/NotFound';\nimport { ReactComponent as Logo } from './ukb-logo.svg';\n\nconst routing = (\n  <Router>\n    <nav className=\"navigation\">\n      <NavLink\n        exact\n        className=\"navigation__item\"\n        activeClassName=\"navigation__item--active\"\n        to={`${process.env.PUBLIC_URL}/`}\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"navigation__item\"\n        activeClassName=\"navigation__item--active\"\n        to={`${process.env.PUBLIC_URL}/viewer`}\n      >\n        Viewer\n      </NavLink>\n      <Logo className=\"navigation__logo\" />\n    </nav>\n    <Switch>\n      <Route exact path={`${process.env.PUBLIC_URL}/`} component={Home} />\n      <Route\n        exact\n        path={`${process.env.PUBLIC_URL}/viewer`}\n        component={Viewer}\n      />\n      <Route component={NotFound} />\n    </Switch>\n  </Router>\n);\n\nexport default routing;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0484BF',\n    },\n    background: {\n      default: '#f0f0f2',\n    },\n  },\n});\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport routing from './routing';\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './theme';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    {routing}\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}